category,project,InducingDate,BugFixing,FixingDates,InducingMessage
Assembly,lanl/qmasm,b5ff7903e9eb1c801327d2b6b7c25d711969e592,2020-07-29T00:01:55Z,e1650b7bbece2da2b6675ad6a8a29a9527504b33/6125bf648f2dc68da2b3a88407d4e848d76b5ad4/,2020-07-30 16:15:10-06:00/2020-07-30 15:17:06-06:00/,Make the generated Ocean code display results QMASM-style
Assembly,lanl/qmasm,eb0b4037d6c744adef59fac1d3edc3b78be3a008,2016-08-23T19:29:23Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/6d8bb38bfc6845422a2ab115cce7ecf4d78a6de5/,2020-06-03 14:20:44-06:00/2016-10-18 10:34:43-06:00/,added proxy param to  RemoteConnection
Assembly,lanl/qmasm,80fa70ae36e3c697ccee65bd0fba40aac638384f,2019-12-23T20:21:52Z,803d301abedae259bd34466a669e0f76944b750b/59449daa13d9b5a29e2f18ca3834bdc464f1188c/,2020-03-12 16:08:03-06:00/2019-12-23 14:30:40-07:00/,:bug: Correctly handle dangling pinned variables
Assembly,lanl/qmasm,cae464a3a19e6226ce8f797c0b3a57f95c5f521a,2016-11-11T23:36:14Z,3d8f4dcfba9255e61e41c97a6569b4bf7e7697b6/,2017-06-22 15:20:00-06:00/,Increased the version number from 1.1 to 1.2
Assembly,lanl/qmasm,062f963dded85b2f40eb0bad6f10829d03baf16c,2019-02-24T07:08:23Z,0c96642fe5709f2576416bc964e4a0e93bdf8dee/6c93bd8a90db0cb8091113681fd473d049ba86c7/f46e2879460ab11e29bc7e9b8c4421e6b47dbf1b/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-24 00:42:44-07:00/2019-05-10 16:53:53-06:00/2019-02-24 00:33:03-07:00/2020-06-03 14:20:44-06:00/,Produce output even when all variables can be fixed
Assembly,lanl/qmasm,a59280e93d1442add5a48b2ebfb4b13de6d34843,2019-01-13T00:58:51Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Move str2bool from top level to a method of class PinParser
Assembly,lanl/qmasm,43c5aa861ff0fec4e59825cb6ec54d674662cfb7,2019-01-21T01:52:13Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Initial support for a !for ... !end_for construct
Assembly,lanl/qmasm,73f341fc0b8fcf4e6044eae6af3c9f89bf677e3f,2017-05-31T20:51:02Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Threaded qmasm-ground-state to improve performance
Assembly,lanl/qmasm,43d37b32b2d2370c51b7489006d70e51b5e126dd,2016-08-22T15:30:54Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/b9a8669fbd48f2fa507d700246b350094be0578b/,2016-10-26 16:56:24-06:00/2017-05-28 00:03:07-06:00/,Describe the contents of the extras directory
Assembly,lanl/qmasm,6d8bb38bfc6845422a2ab115cce7ecf4d78a6de5,2016-10-18T16:34:43Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Don't require a proxy for remote connections
Assembly,lanl/qmasm,db63fd9c239c3534c70ec29546ee76290fff8271,2017-05-05T23:50:25Z,d713dab380bc7d8ca14bf9db4172670b0f32c589/e55bc405a3f90b35c5a44b5ae945686a04f2f866/433720570fe34d49f9e656e37f60ca9d40860e8e/b769691bb24afd35e48cf371407f417b78fff1b9/,2017-05-17 11:08:02-06:00/2020-06-03 14:20:44-06:00/2017-07-02 18:39:35-06:00/2017-07-02 19:34:36-06:00/,"Make --anneal-time default to the solver's default_annealing_time

Previously, --anneal-time defaulted to an arbitrary 20us.  In this
revision, it uses the solver's default_annealing_time if defined.  If
not, it uses the first element of the solver's annealing_time_range
array, if defined.  If not, it uses 20us as a reasonable fallback."
Assembly,lanl/qmasm,2570435bacfa873b1a92a301b43314a99c9173bb,2019-02-07T06:56:31Z,c0d5deb7b625809b8b8310e63b4f0f3354a21460/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-09 00:13:09-07:00/2020-06-03 14:20:44-06:00/,:bug: Correct the handling of parenthesized relations and expressions
Assembly,lanl/qmasm,50851d9fd958314b3b7c71d9366a649bc0b9db09,2016-12-20T18:11:04Z,73f341fc0b8fcf4e6044eae6af3c9f89bf677e3f/b057c38f43f0d1d3725decc64fe433b0bb0c2316/84b2cacb79fa64bb36ab999a733813ca6fd016c4/fa65a9b489faa2038dea364b5af6a5d144d7e710/0ebd51e774cfd1aa656c5b0ff425ae45178fd9c2/5b8b4564673a49193c7146c40f349dd2c9f0eef6/e55bc405a3f90b35c5a44b5ae945686a04f2f866/bcb88e81d7bc275bfb3f3caf6c73ff90a3c7ca1a/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-05-31 14:51:02-06:00/2017-02-23 09:20:21-07:00/2016-12-20 11:28:52-07:00/2019-06-17 17:22:03-06:00/2017-02-23 18:13:38-07:00/2018-03-14 21:55:31-06:00/2020-06-03 14:20:44-06:00/2016-12-23 17:45:37-07:00/2017-05-04 16:14:29-06:00/,Helper script for computing ground states
Assembly,lanl/qmasm,036323688539bb285b52e3ea7eb26811f4ba17a9,2019-01-28T04:24:38Z,8069e3fff1d9f014d3b16d3ed274ff5fbe707a72/,2019-02-20 21:42:58-07:00/,:bug: Add a colon and square brackets to toks_re
Assembly,lanl/qmasm,03821361d95dad2ca4fec6d87dbc945e5ec2723d,2017-03-17T22:28:09Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/9bb58a3d91a0467a5931d884b31b9dc30204eb18/3b2785a022967fde1afe2b3d803acee4ae64f6b4/adb3a7644b87d1509ddf59da8be454747d782dda/,2018-04-23 00:21:06-06:00/2017-03-20 14:43:45-06:00/2017-06-01 13:44:27-06:00/2018-04-06 00:00:35-06:00/,New --discard option to control whether bad answers are kept or discarded
Assembly,lanl/qmasm,b28f50600eceba74d59e43dc8e570e8ab4601626,2019-02-14T06:22:25Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Improve performance when multiple assertions are specified but not output
Assembly,lanl/qmasm,587186ee496569df00b5e0731ce4954c53cbad6e,2019-02-23T08:14:25Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Report that a classical solution can be found only if it wasn't already
Assembly,lanl/qmasm,eec86859c92fb7eb0dbe8a715a735d597ac42e84,2019-03-28T00:24:21Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/4dfd60cf41d6afe55e1138168ac01597d2ddfff5/,2020-06-03 14:20:44-06:00/2019-03-27 19:37:30-07:00/,"Extend symbol renaming to work with assertions

:bug: The code does not currently build feature_test.qmasm."
Assembly,lanl/qmasm,fad3b9795f1ea9ce99d374d9857eaf70880306ff,2020-05-28T19:55:00Z,e7a81a2792d734a656bf458cae9814e2f7ed4e6d/f2ecf156217eeae45ab942f1a134bcb32ea7f23b/34996cb3bfec9dec0414dce973d820c60af5eb64/9a6a2ed6daf39da78940256bf934623b551f60c4/,2020-05-29 18:55:37-06:00/2020-05-28 17:14:01-06:00/2020-05-29 14:54:52-06:00/2020-06-12 15:20:46-06:00/,Map each symbol to a Boolean value
Assembly,lanl/qmasm,0bfed7c0d07962417e7dc51420fdd576f81d3494,2016-12-23T20:21:27Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Minor change to the help message

Called the input a ""symbolic Hamiltonian"" rather than a ""symbolic
quantum machine instruction""."
Assembly,lanl/qmasm,9ee7cba1105c8f21522a9f014bc572de1786a9a2,2018-05-09T05:40:06Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Assume num_occurrences == 1 if undefined (cf. ising-heuristic)
Assembly,lanl/qmasm,2ea71fdf594cb08afd01e28106602f0716eb4f84,2020-05-27T19:42:26Z,83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/0a5cf17c6b9408f81f8f746787a136d098a36d7c/,2020-05-29 18:02:35-06:00/2020-05-27 13:49:13-06:00/,"Filter out isolated variables before embedding the problem

This prevents embed_bqm from complaining."
Assembly,lanl/qmasm,7c47d361e47db07a8ee78654c4e130faebce4fd3,2017-02-01T15:50:39Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/c7fec3f434ae8d3a09774b4a5b3811492630ebc6/,2020-06-03 14:20:44-06:00/2017-05-04 14:04:13-06:00/,Better error message for remote connections in the faked D-Wave library
Assembly,lanl/qmasm,a479826aafca66ffd7ce86b1105819d163cf4b4b,2019-12-19T00:57:17Z,4778293e11d6bc22f45d96a1f72a26ee84f1e87e/1aab3fcc08876951d46404b1ae052986fbe6940d/39eb40836f255d18a205c69c3ef5b5dc40d8e998/d2da5ce215b0a1e3b9e1a988001c5086db89ffcc/a30eeba8024a7c0663f1b6364aea5786a144955a/e6aa93edc0a2ce44a3036ef595b2567aa840c38f/,2020-06-30 18:51:09-06:00/2019-12-23 15:02:03-07:00/2020-06-09 18:25:05-06:00/2020-01-07 15:09:27-07:00/2019-12-23 14:49:10-07:00/2019-12-19 17:16:44-07:00/,Define a Problem class and populate a corresponding object
Assembly,lanl/qmasm,c0d5deb7b625809b8b8310e63b4f0f3354a21460,2019-02-09T07:13:09Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/7cdbf54d1f358d1023a4505dd1b1bbbea1259c20/,2020-06-03 14:20:44-06:00/2019-02-09 00:27:26-07:00/,"Allow logical negation of relational expressions

Previously, logical negation applied only to arithmetic expressions."
Assembly,lanl/qmasm,20a5b56ca0649e34e1297c13ed07780cd38f9d3a,2018-04-23T07:11:16Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: No Python error if the D-Wave libraries are unavailable
Assembly,lanl/qmasm,ad1a7c1407abe895364252ee3b89cba5a794e6d9,2020-05-26T23:39:58Z,6c8ea845a0f40320e003b8ea85117eb5c6410192/69505d0911f3c949d60a26dfac2651a755566853/34996cb3bfec9dec0414dce973d820c60af5eb64/fad3b9795f1ea9ce99d374d9857eaf70880306ff/,2020-05-26 17:45:22-06:00/2020-05-27 15:02:13-06:00/2020-05-29 14:54:52-06:00/2020-05-28 13:55:00-06:00/,Elide broken user-defined chains and antichains
Assembly,lanl/qmasm,03e4cd19cc670522ff8c84ec5a9e391ccd592c52,2019-12-18T21:40:55Z,c7bb1ff5d845afca56f7799ec93aa409b20c8a8a/4778293e11d6bc22f45d96a1f72a26ee84f1e87e/f39d080db8ce9bc64646989942da8c0565d0efa8/cbda313b0e3fff71e351f418d9a263968bab3776/d2da5ce215b0a1e3b9e1a988001c5086db89ffcc/729dafcd6564d4a4ee2ca74dba06690186e533a4/a479826aafca66ffd7ce86b1105819d163cf4b4b/ddb51ec6e9882dd0c7ca4a4df493c16d25260cc3/b1406fae023c9c9938a6946055730aefce092248/,2020-06-09 17:54:21-06:00/2020-06-30 18:51:09-06:00/2019-12-18 16:57:03-07:00/2020-06-09 18:21:04-06:00/2020-01-07 15:09:27-07:00/2020-06-09 15:35:41-06:00/2019-12-18 17:57:17-07:00/2019-12-18 16:43:51-07:00/2020-05-27 17:15:44-06:00/,Begin adding code for parsing the input file
Assembly,lanl/qmasm,5db92a0f1a855ca3bdbea945107d7c59f901a82e,2017-08-21T19:40:37Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct the handling of spin reversals divided across multiple QMIs
Assembly,lanl/qmasm,d97cd459bd1a9439971650c6dd7138b56bb288e6,2017-05-31T05:34:55Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/41f5348bb1c9782f334906026f4af48d7574779d/,2020-06-03 14:20:44-06:00/2017-05-31 00:19:08-06:00/,Adjust MiniZinc's energy output to include the offset from QUBO conversion
Assembly,lanl/qmasm,e4b54f8d91e9324b575ac008a7e519e45a64d8cd,2017-05-04T04:58:13Z,ade1e25b4315125ddaaf5a47d7a93b76bc41558a/329466fdac7d173e95c57130703a9f3a36d20d2d/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/398236e7ba67893dc1eb2bdc0750057f3ea11e24/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-05-04 00:20:43-06:00/2017-05-04 11:32:01-06:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/2017-05-03 23:58:49-06:00/2017-05-04 16:14:29-06:00/,Allow --run to be used with --format=qbsolv
Assembly,lanl/qmasm,9484eba4e0e57ee9f115a025b560618ec5ffd3e0,2018-05-26T04:45:25Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Don't alias variables in anti-chains but do update all anti-chains
Assembly,lanl/qmasm,91107817b0042cf52e300e122c43e27ce3c789fb,2018-03-14T23:01:05Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Abort on attempts to alias two pre-existing symbols
Assembly,lanl/qmasm,3b26335df7b3e5e53798adcbd6b3b5ff149330cd,2019-01-13T01:52:35Z,71a0406842266177ee0b5de9f091f00ce488bbf4/ebf6d801342478bfe6073de3db2ff998b9e860f2/e55bc405a3f90b35c5a44b5ae945686a04f2f866/882f6e819325488735a4f698d0b1c2b133bb867f/,2019-01-20 12:56:07-07:00/2019-01-20 19:06:49-07:00/2020-06-03 14:20:44-06:00/2019-01-28 00:17:04-07:00/,Import the LoopIterator class from a prior attempt
Assembly,lanl/qmasm,2734d812148a4fae11b913f9972880630fcb8233,2018-02-26T01:05:22Z,af27f78726e6dc160a4610928824b4a3538db47a/,2019-02-19 19:50:34-07:00/,Explicitly reject negative powers in !assert directives
Assembly,lanl/qmasm,70691a80494d60ba098b9f20c0a4ae1bf8999af9,2020-05-20T00:38:59Z,2ea71fdf594cb08afd01e28106602f0716eb4f84/45f14cb65409147ff739d2c7fa7950fe23341eb2/6125bf648f2dc68da2b3a88407d4e848d76b5ad4/8316b1ded244f2c75061bb65d0ec880dbda14ba1/,2020-05-27 13:42:26-06:00/2020-06-02 16:37:34-06:00/2020-07-30 15:17:06-06:00/2020-07-06 17:13:03-06:00/,"Add support for --always-embed to choose when output files are written

This revision also corrects a subtle bug: dwave.embedding.embed_bqm
takes a positive value for chain_strength, but we were passing it a
negative value."
Assembly,lanl/qmasm,422997299ffe0432cf5b051286dd9849c9f2085a,2016-08-19T17:34:14Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/cd49d2469e7dc74af47fe890e10f0860ece672c5/,2016-10-26 16:56:24-06:00/2016-11-02 20:34:01-04:00/,"Output the *pre-embedded* problem in qbsolv format

qbsolv has the ability to partition and embed problems itself.  Trying
to embed an oversized problem would fail before qbsolv would be given
the chance to partition it."
Assembly,lanl/qmasm,2c197a875543b4d535c80faf3bfc6e81366ad1dd,2020-05-26T22:04:15Z,fad3b9795f1ea9ce99d374d9857eaf70880306ff/,2020-05-28 13:55:00-06:00/,Report chain-break frequencies
Assembly,lanl/qmasm,04bbcc3d7b20281a037ae88d5b574352dcf300f6,2016-11-05T00:18:05Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Mark the output of convert_to_qubo as a QUBO
Assembly,lanl/qmasm,ff67aecb804dc89e747cd9d8f4e99402f71c1927,2017-05-04T20:01:40Z,d625b3210069540d287448384c66a20f8b1909d2/dc9870a046f8fcb701377951dc2c2dce9cdee31a/e1811a181eab7f46f498a0bc735a5e756da8e4c1/d3045915257228114374e0e996ac4b55196a9472/751e5e7d116c243391b3f02b2f717c63d59051be/bb9fa86838726ff018c541884988c96b2dfe6892/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-05-28 00:34:09-06:00/2017-05-31 14:53:49-06:00/2017-05-28 08:40:25-06:00/2017-06-02 00:24:06-06:00/2020-06-03 17:30:21-06:00/2017-05-29 23:12:55-06:00/2017-05-04 16:14:29-06:00/,Added a Travis CI configuration file
Assembly,lanl/qmasm,076d15687fc97b3864650c32a81834303640b11e,2017-02-24T01:46:14Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Include failed embeddings in the embedding cache

No use retrying something on future runs that we know is bound to
fail."
Assembly,lanl/qmasm,811e485ea39a333f382e126dbd8083482620c303,2016-08-18T17:38:11Z,33061dfc20f9cffb0d1e05ed904fb2cfcecd6bc8/,2017-03-25 00:00:41-06:00/,"Delay complaining about no solutions being found

Output as much diagnostic information as we can before aborting."
Assembly,lanl/qmasm,fa3b23a63d8017abe4625f9b5e451a6f04621e26,2019-12-24T01:08:29Z,5e6379cb72d249a86c71049b0648f17f771cdd16/c1197af6140efbee621aaab43c3b09ff0988d658/c9c65e79db99460526e50e5350144ebfabb73c43/,2020-03-11 16:04:53-06:00/2020-07-01 17:12:25-06:00/2019-12-23 18:49:15-07:00/,Honor the --topology-file command-line option
Assembly,lanl/qmasm,a30eeba8024a7c0663f1b6364aea5786a144955a,2019-12-23T21:49:10Z,39eb40836f255d18a205c69c3ef5b5dc40d8e998/,2020-06-09 18:25:05-06:00/,"Convert user-specified chains, anti-chains, and pins to assertions"
Assembly,lanl/qmasm,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a,2016-10-26T22:56:24Z,e47c19dba70b88cec54276cd1c4a325d42fb7714/d2a8853c30afa37214559fa9d2603ced237184bb/062f963dded85b2f40eb0bad6f10829d03baf16c/b64bb9384e62da2be1dd929b3b2414e1b509a0a0/9b09d248c66c6b75c39eba2a534dc9a5e743a726/661a507062f4b0a024755259438e85bff51acaf8/a59280e93d1442add5a48b2ebfb4b13de6d34843/d46b0e2204d2114a2cb054f62f88764c85eef12a/c841e1b116a3576df8fce07412c0f5b31ccd8af7/c96e3eb69a35212b0a894bd427a7490ea274d5a2/35cbdbcf59a6dcf75e0f28f09320d2e7ab02503c/b8ecbd653983237498f08a44fa4e718b1859655a/5e2a718999e0a66d4bf338a8525b32ab5ff1d9a9/e55bc405a3f90b35c5a44b5ae945686a04f2f866/fb82c362f10c319d952c00fadb21341e3ba8a367/3df14bc70e791f86aea778a54d1c9893ec51c5ec/f21cc157a6994e7ab172bc30de12038ca808fcce/b9a8669fbd48f2fa507d700246b350094be0578b/8c395558f2829d29d2785b0a85c1c467f0a894d9/433720570fe34d49f9e656e37f60ca9d40860e8e/6c93bd8a90db0cb8091113681fd473d049ba86c7/6900401ad01e4474d2db7a9bdc9a6955f31cdc3f/3c767be11f0f04be7f097d520d9a770a047b3cd9/c589beb2cb232d4927bf457f6f0aca377dfdded7/cd49d2469e7dc74af47fe890e10f0860ece672c5/558a42375059f6d49df083ea04d12f5c0985179e/a9b829f53dfe57dc0c3ee6d32588b684d74aedc5/5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/1326f5f92b772152ab4b8f7093e8ccd48d496cdd/1994378b8589ba353f30ad25c6008fab8f573d45/bb9fa86838726ff018c541884988c96b2dfe6892/,2016-12-14 00:21:40-07:00/2017-01-24 13:25:13-07:00/2019-02-24 00:08:23-07:00/2016-11-03 09:26:28-04:00/2018-04-23 00:21:06-06:00/2017-05-25 18:17:36-06:00/2019-01-12 17:58:51-07:00/2017-01-31 19:28:22-05:00/2017-02-03 01:24:10-05:00/2016-12-15 17:34:17-07:00/2016-11-17 00:28:39-07:00/2019-01-21 00:55:07-07:00/2020-06-02 14:48:26-06:00/2020-06-03 14:20:44-06:00/2017-08-31 13:44:52-04:00/2017-05-04 16:14:29-06:00/2016-11-03 09:48:20-04:00/2017-05-28 00:03:07-06:00/2017-01-25 18:56:21-07:00/2017-07-02 18:39:35-06:00/2019-05-10 16:53:53-06:00/2020-06-02 14:33:00-06:00/2017-01-25 18:46:42-07:00/2016-10-26 18:27:45-06:00/2016-11-02 20:34:01-04:00/2016-10-26 17:09:47-06:00/2017-08-22 13:31:35-06:00/2018-05-21 01:07:03-06:00/2019-01-12 17:54:35-07:00/2018-03-14 16:48:14-06:00/2017-05-29 23:12:55-06:00/,"Global change of ""QASM"" to ""QMASM""

QMASM is far more unique of a name than QMASM."
Assembly,lanl/qmasm,f6aac7ca9b999660cf41f554f039201add21a347,2019-01-20T06:25:03Z,71a0406842266177ee0b5de9f091f00ce488bbf4/1dc06566d14f1110c4b59cd17169274f8583151f/e55bc405a3f90b35c5a44b5ae945686a04f2f866/73695257c7b4be21c22ed94405a0bf8301877008/,2019-01-20 12:56:07-07:00/2019-01-27 17:14:26-07:00/2020-06-03 14:20:44-06:00/2019-01-21 00:36:06-07:00/,"Support an !if ... !else ... !end_if construct

Caveat: Each of these directives must appear in the same file.  It is
not currently allowed to have the !if in one file and !include a file
containing the !end_if, for example."
Assembly,lanl/qmasm,e25f9b1aead2621080ece418384fa28c35372f4c,2019-01-28T06:07:08Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Issue an error message for each use of !alias
Assembly,lanl/qmasm,242cd540fa8d0bce0ba77e2c9582682dc5990d38,2017-01-25T21:55:08Z,d1a39fd7bbe7a4b6e579c0b7637c5f9c2e120ab7/661b8b56f1c47d171d557781438d6963b9176fa8/734c4a4b6675b523c99d898595b112898f146500/8c395558f2829d29d2785b0a85c1c467f0a894d9/32819ea0943992bbc87ca842c0d8762e1324a145/3c767be11f0f04be7f097d520d9a770a047b3cd9/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-01-26 18:56:44-07:00/2019-01-27 23:44:45-07:00/2019-01-10 23:29:26-07:00/2017-01-25 18:56:21-07:00/2017-01-27 16:34:52-07:00/2017-01-25 18:46:42-07:00/2020-06-03 14:20:44-06:00/,"Revert ""Support for !begin_replace_sym...!end_replace_sym""

This reverts commit d2a8853c30afa37214559fa9d2603ced237184bb.

My plan is to try a completely different approach to support chaining
together macro instantiations."
Assembly,lanl/qmasm,579982269b875adfe8987fc2089f699fd526ba49,2016-12-14T08:04:45Z,d713dab380bc7d8ca14bf9db4172670b0f32c589/,2017-05-17 11:08:02-06:00/,Corrected a typo in the --help message
Assembly,lanl/qmasm,d1f1f7d382c2da418e3a88f29cdc5f1c7e5b3724,2016-07-08T16:46:18Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/f54e91d8eec83b6fe33fc1717d21d93e20612dca/4bbf247a59b31bf1e225733bcefdd2a3fe131f9f/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2016-10-26 16:56:24-06:00/2016-08-18 10:33:36-06:00/2016-10-19 16:52:53-06:00/2020-06-03 14:20:44-06:00/,:bug: Correctly scope abend and progname
Assembly,lanl/qmasm,34996cb3bfec9dec0414dce973d820c60af5eb64,2020-05-29T20:54:52Z,6b0527c8a1a601c5af5f4832bad932b5957fb524/,2020-05-29 15:27:58-06:00/,Add support for --values=ints
Assembly,lanl/qmasm,41f5348bb1c9782f334906026f4af48d7574779d,2017-05-31T06:19:08Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Made various improvements to MiniZinc code generation

* The Chuffed solver is used for both passes, not MIP on the first pass.
* The output file is written after the second pass instead of the first pass.
* The generated MiniZinc file shows correctly scaled output on both passes.
* Duplicated code has been removed."
Assembly,lanl/qmasm,fa910926a75a54cadae952f34f386fbb3e3ebeda,2016-12-14T07:44:24Z,6b00f179bee4bb3fa3cf635d50b45942250a7504/579982269b875adfe8987fc2089f699fd526ba49/433720570fe34d49f9e656e37f60ca9d40860e8e/db63fd9c239c3534c70ec29546ee76290fff8271/9b09d248c66c6b75c39eba2a534dc9a5e743a726/da23f0fea9ed87eaebd318916f2fe7cc969f77d0/03821361d95dad2ca4fec6d87dbc945e5ec2723d/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2016-12-21 17:54:27-07:00/2016-12-14 01:04:45-07:00/2017-07-02 18:39:35-06:00/2017-05-05 17:50:25-06:00/2018-04-23 00:21:06-06:00/2017-05-28 23:13:25-06:00/2017-03-17 16:28:09-06:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/,Specify the postprocessing step with --postproc
Assembly,lanl/qmasm,ceaf61b04af797150e5ec1cbfd04cad0fd0a5137,2017-02-16T16:18:39Z,7e12df862f87a3329168acbd145b73d4740e712a/,2018-05-09 00:24:11-06:00/,Added a link to IBM's QASM GitHub project
Assembly,lanl/qmasm,c841e1b116a3576df8fce07412c0f5b31ccd8af7,2017-02-03T06:24:10Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/8ef63814275e32edc7d563615f79bb72e0d5daa7/,2020-06-03 14:20:44-06:00/2018-05-09 00:25:37-06:00/,Replace github.com/losalamos with github.com/lanl
Assembly,lanl/qmasm,3bb3de98e519a547abbb3b05aaafaa9fec01562d,2020-06-12T18:09:09Z,c1197af6140efbee621aaab43c3b09ff0988d658/,2020-07-01 17:12:25-06:00/,Clean up a small bit of code
Assembly,lanl/qmasm,6a38716fe0cc8646c37c3d9bc1454a22e75419a8,2016-10-28T19:23:11Z,03821361d95dad2ca4fec6d87dbc945e5ec2723d/9bb58a3d91a0467a5931d884b31b9dc30204eb18/9b09d248c66c6b75c39eba2a534dc9a5e743a726/,2017-03-17 16:28:09-06:00/2017-03-20 14:43:45-06:00/2018-04-23 00:21:06-06:00/,Discard solutions with broken chains and broken pins
Assembly,lanl/qmasm,049afffdf6ffd812a4c4305658f7e2baff9030ed,2016-07-01T17:19:43Z,eacb7728db6652f58fa716e22d157e1ad29b6d86/c896937b74bac51f1508b3d693c4e333de375267/32a848d45ffc1ef285939304f842a402824bde47/831fe9525797795fb251f165a6bf462c1472aeb9/d48954b90d71ce0a388b4561d4466c76a95d5111/cef680b1fa9b1927addebf7dfc38581af4eb1dae/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/,2016-07-08 10:33:42-06:00/2016-08-16 23:40:11-06:00/2016-07-05 16:04:36-06:00/2016-08-17 00:37:09-06:00/2016-07-08 14:44:23-06:00/2016-07-01 18:34:50-06:00/2016-10-26 16:56:24-06:00/,Moved chain- and pin-strength functions into their own file
Assembly,lanl/qmasm,35afe96531c77cb983c883363aaefd157f8919e9,2016-08-22T22:12:41Z,8adf5ff5109a0ada4d4ffac694edce24efc2a66a/,2019-01-28 14:13:31-07:00/,Added a MANIFEST.in file for use by Python setuptools
Assembly,lanl/qmasm,7ba08671fd439cdd2d1028a2ffe1dbb644bc99ee,2016-06-16T00:07:38Z,29a7bf57de9332a8f8fa1df335ac2ae527313306/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/21109e46382da828d8453c916b2127ec476daea9/558a42375059f6d49df083ea04d12f5c0985179e/,2016-06-27 15:37:30-06:00/2016-10-26 16:56:24-06:00/2020-06-03 18:27:06-06:00/2016-10-26 17:09:47-06:00/,Setuptools-based installer
Assembly,lanl/qmasm,d7c3d05839e17144c8b250fc46eb22ef43000e12,2018-11-02T21:11:58Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Fix incorrect handling of QUBO problems and their resulting energy

Programs run with `--qubo` were being incorrectly converted to Ising
problems (QMASM's native problem format) when all of the linear
coefficients in the generated Ising formulation are supposed to be 0.

The reported energy values (for both QUBO and Ising problems, I
believe) were also incorrect due to the problem coefficients being
scaled for D-Wave execution but the energy not being un-scaled back
into the terms of the original problem.

Thanks to Tom Krauss (@twist-vector) for the bug report and for
testing the updated code."
Assembly,lanl/qmasm,c1197af6140efbee621aaab43c3b09ff0988d658,2020-07-01T23:12:25Z,1771bb65d542acbd43daa390ea732811eb69cde3/8316b1ded244f2c75061bb65d0ec880dbda14ba1/,2020-07-24 16:26:59-06:00/2020-07-06 17:13:03-06:00/,"Support a new --pack-qubits option

This is analogous to the packing feature provided by -O3 in the old,
pre-Ocean version of QMASM.  The main differences are that --pack-qubits is
topology-agnostic and that the user must explicitly specify a target qubit
count."
Assembly,lanl/qmasm,59437a9d3ce24a759b7318ddd524644d5829a677,2018-05-09T06:05:04Z,1dc06566d14f1110c4b59cd17169274f8583151f/734c4a4b6675b523c99d898595b112898f146500/b8ecbd653983237498f08a44fa4e718b1859655a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/08e80c4b0a4fb469315dbee680670f1dfec66748/,2019-01-27 17:14:26-07:00/2019-01-10 23:29:26-07:00/2019-01-21 00:55:07-07:00/2020-06-03 14:20:44-06:00/2018-05-21 20:36:09-06:00/,Add support for `/=` to indicate an anti-chain (opposite values)
Assembly,lanl/qmasm,e995db20ce37dddb3812d35ef357e5e4b10c889f,2018-05-22T02:22:36Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/08e80c4b0a4fb469315dbee680670f1dfec66748/,2020-06-03 14:20:44-06:00/2018-05-21 20:36:09-06:00/,Make update_strengths_from_chains a method of Problem
Assembly,lanl/qmasm,c9c65e79db99460526e50e5350144ebfabb73c43,2019-12-24T01:49:15Z,915496754333c17998c6decb54bd5e1f5f0fd528/16d501d4be17852beaabfb1cb06c9c62fa453737/d2da5ce215b0a1e3b9e1a988001c5086db89ffcc/5e6379cb72d249a86c71049b0648f17f771cdd16/8ab0e8a53d0fcbdf8e09e917932b871fe820e8d9/8316b1ded244f2c75061bb65d0ec880dbda14ba1/3bb3de98e519a547abbb3b05aaafaa9fec01562d/c1197af6140efbee621aaab43c3b09ff0988d658/,2020-07-23 18:01:47-06:00/2020-01-07 16:50:04-07:00/2020-01-07 15:09:27-07:00/2020-03-11 16:04:53-06:00/2020-06-12 11:51:28-06:00/2020-07-06 17:13:03-06:00/2020-06-12 12:09:09-06:00/2020-07-01 17:12:25-06:00/,Cache embeddings across runs
Assembly,lanl/qmasm,6fa6e34cebc93f83ccccaa9ae7ba14e6094f63e1,2016-08-17T07:07:18Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/6bec5ac217b9170c165e38882847f78e9e78b05a/,2020-06-03 14:20:44-06:00/2016-08-19 11:17:57-06:00/,:bug: Fix missing import and missing return in convert_to_ising
Assembly,lanl/qmasm,38f5c2a815cbea434d8dd8ce8160748c4755fd48,2019-12-24T00:58:16Z,5e6379cb72d249a86c71049b0648f17f771cdd16/fa3b23a63d8017abe4625f9b5e451a6f04621e26/c9c65e79db99460526e50e5350144ebfabb73c43/,2020-03-11 16:04:53-06:00/2019-12-23 18:08:29-07:00/2019-12-23 18:49:15-07:00/,Embed a logical problem onto the physical topology
Assembly,lanl/qmasm,6af86c7c68df5a8191a8896c7d74b4d0d14f29cd,2018-03-15T23:20:52Z,2570435bacfa873b1a92a301b43314a99c9173bb/,2019-02-06 23:56:31-07:00/,:bug: Correct handling of mixed sums or mixed products in !assert
Assembly,lanl/qmasm,b769691bb24afd35e48cf371407f417b78fff1b9,2017-07-03T01:34:36Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/f6e8c9df3949c68f9d57622f0feb8fc336f6d44f/10f51141ae3f8742f5069a0c08280d8bcba40586/5db92a0f1a855ca3bdbea945107d7c59f901a82e/,2020-06-03 14:20:44-06:00/2017-08-17 13:19:31-06:00/2017-08-16 11:37:14-06:00/2017-08-21 13:40:37-06:00/,"Refactored submit_dwave_problem

The function is still on the long side, but at least some chunk of the
work has been moved into new helper functions."
Assembly,lanl/qmasm,32a848d45ffc1ef285939304f842a402824bde47,2016-07-05T22:04:36Z,e47c19dba70b88cec54276cd1c4a325d42fb7714/ce3ca616f6c3a87cc5b99afef71031588b912368/eacb7728db6652f58fa716e22d157e1ad29b6d86/f7efe15255c0ea1984e2ac258a9deb137075e245/d46b0e2204d2114a2cb054f62f88764c85eef12a/d1f1f7d382c2da418e3a88f29cdc5f1c7e5b3724/076d15687fc97b3864650c32a81834303640b11e/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/2cea5dda67912e9fe7e6906faa87216531ed880a/b9a8669fbd48f2fa507d700246b350094be0578b/433720570fe34d49f9e656e37f60ca9d40860e8e/831fe9525797795fb251f165a6bf462c1472aeb9/eb0b4037d6c744adef59fac1d3edc3b78be3a008/03d7550592ab06af3b924e1eec2b2c6694e51e84/ebd27c45b283fbc5c7cac142def77721ac4ce5d4/c896937b74bac51f1508b3d693c4e333de375267/a9b829f53dfe57dc0c3ee6d32588b684d74aedc5/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/03d4201d7d8b5999ab6b907ed41be2414f88fbfd/,2016-12-14 00:21:40-07:00/2016-08-19 17:14:43-06:00/2016-07-08 10:33:42-06:00/2016-10-17 16:10:29-06:00/2017-01-31 19:28:22-05:00/2016-07-08 10:46:18-06:00/2017-02-23 18:46:14-07:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/2017-08-23 10:05:05-06:00/2017-05-28 00:03:07-06:00/2017-07-02 18:39:35-06:00/2016-08-17 00:37:09-06:00/2016-08-23 19:29:23+00:00/2017-06-07 12:04:42-04:00/2016-09-29 11:13:43-06:00/2016-08-16 23:40:11-06:00/2017-08-22 13:31:35-06:00/2016-10-26 16:56:24-06:00/2018-05-21 00:33:19-06:00/,Separate file for D-Wave communication routines
Assembly,lanl/qmasm,4253e5d5a8d1f117e5a30e6ed43cc10328acf2f7,2016-08-19T00:40:00Z,f21cc157a6994e7ab172bc30de12038ca808fcce/,2016-11-03 09:48:20-04:00/,Minor changes to the text
Assembly,lanl/qmasm,7c55d9f9f35ebbb042967c340093e33611d57550,2016-07-08T20:54:46Z,c896937b74bac51f1508b3d693c4e333de375267/,2016-08-16 23:40:11-06:00/,"Revert ""Introduce a 10% fudge factor for chain strength""

This reverts commit d48954b90d71ce0a388b4561d4466c76a95d5111.
The fudge factor doesn't always help and sometimes makes things more
confusing."
Assembly,lanl/qmasm,bb9fa86838726ff018c541884988c96b2dfe6892,2017-05-30T05:12:55Z,c623159aafd8670f2e7ad91ec9ad9aa9a3f70392/00da1df5a6deb05e15e9ab13dc0884780ab3a85d/e995db20ce37dddb3812d35ef357e5e4b10c889f/41f5348bb1c9782f334906026f4af48d7574779d/59437a9d3ce24a759b7318ddd524644d5829a677/9b09d248c66c6b75c39eba2a534dc9a5e743a726/1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/ba212962942b26e0f6d8c605c0f369cde4c654b7/751e5e7d116c243391b3f02b2f717c63d59051be/d97cd459bd1a9439971650c6dd7138b56bb288e6/e55bc405a3f90b35c5a44b5ae945686a04f2f866/03d4201d7d8b5999ab6b907ed41be2414f88fbfd/9e5be93dcb0b6940267d441fc666d17fc9ac5cb3/,2017-08-24 18:43:11-06:00/2018-06-20 00:07:33-06:00/2018-05-21 20:22:36-06:00/2017-05-31 00:19:08-06:00/2018-05-09 00:05:04-06:00/2018-04-23 00:21:06-06:00/2018-02-22 18:38:48-07:00/2018-05-21 23:35:59-06:00/2020-06-03 17:30:21-06:00/2017-05-30 23:34:55-06:00/2020-06-03 14:20:44-06:00/2018-05-21 00:33:19-06:00/2018-06-20 00:21:31-06:00/,"Introduced an --always-embed option to write qbsolv/MiniZinc after embedding

The intention of this new option is to help with debugging.  If a
program produces the correct answer without --always-embed but an
incorrect answer with --always-embed, then the embedding is likely to
be at fault."
Assembly,lanl/qmasm,ddb51ec6e9882dd0c7ca4a4df493c16d25260cc3,2019-12-18T23:43:51Z,729dafcd6564d4a4ee2ca74dba06690186e533a4/a479826aafca66ffd7ce86b1105819d163cf4b4b/,2020-06-09 15:35:41-06:00/2019-12-18 17:57:17-07:00/,Parse the input file
Assembly,lanl/qmasm,d3045915257228114374e0e996ac4b55196a9472,2017-06-02T06:24:06Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/58b679241a9b2c1a0dca0248e8a636acdab3af43/751e5e7d116c243391b3f02b2f717c63d59051be/,2020-06-03 14:20:44-06:00/2017-06-02 23:20:01-06:00/2020-06-03 17:30:21-06:00/,"Added support for outputting bqpjson format

See http://bqpjson.readthedocs.io/en/latest/bqpjson_format.html"
Assembly,lanl/qmasm,03d7550592ab06af3b924e1eec2b2c6694e51e84,2017-06-07T16:04:42Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/10f51141ae3f8742f5069a0c08280d8bcba40586/433720570fe34d49f9e656e37f60ca9d40860e8e/,2020-06-03 14:20:44-06:00/2017-08-16 11:37:14-06:00/2017-07-02 18:39:35-06:00/,"Report the problem ID

Thanks to Vlad Papish for showing me how to retrieve the problem ID."
Assembly,lanl/qmasm,831fe9525797795fb251f165a6bf462c1472aeb9,2016-08-17T06:37:09Z,e47c19dba70b88cec54276cd1c4a325d42fb7714/f7efe15255c0ea1984e2ac258a9deb137075e245/9b09d248c66c6b75c39eba2a534dc9a5e743a726/ba212962942b26e0f6d8c605c0f369cde4c654b7/811e485ea39a333f382e126dbd8083482620c303/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2016-12-14 00:21:40-07:00/2016-10-17 16:10:29-06:00/2018-04-23 00:21:06-06:00/2018-05-21 23:35:59-06:00/2016-08-18 11:38:11-06:00/2016-10-26 16:56:24-06:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,:bug: Corrected refactoring for the --run and --pin options
Assembly,lanl/qmasm,cef680b1fa9b1927addebf7dfc38581af4eb1dae,2016-07-02T00:34:50Z,c896937b74bac51f1508b3d693c4e333de375267/,2016-08-16 23:40:11-06:00/,Transferred more work from qasm.py to update.py
Assembly,lanl/qmasm,ed7644179b4b8716da8454fb6d1d4903fca29eb7,2017-05-31T00:33:52Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/73f341fc0b8fcf4e6044eae6af3c9f89bf677e3f/,2020-06-03 14:20:44-06:00/2017-05-31 14:51:02-06:00/,"Let the user define ""close enough"" in qmasm-ground-state"
Assembly,lanl/qmasm,5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd,2018-05-21T07:07:03Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/062f963dded85b2f40eb0bad6f10829d03baf16c/,2020-06-03 14:20:44-06:00/2019-02-24 00:08:23-07:00/,"Renamed --pin-strength to --pin-weight

The value affects variable weights, not coupler strengths.  This name
change reflects that."
Assembly,lanl/qmasm,803d301abedae259bd34466a669e0f76944b750b,2020-03-12T22:08:03Z,83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/70691a80494d60ba098b9f20c0a4ae1bf8999af9/1bc122180830027ea8987b70a5ef1e5666246857/,2020-05-29 18:02:35-06:00/2020-05-19 18:38:59-06:00/2020-05-19 16:10:30-06:00/,"Output more problem statistics

Also updated the code to work with the latest release of Ocean."
Assembly,lanl/qmasm,545bd3025375142966314848e5e3f24930b6aaef,2019-10-09T20:45:22Z,5ee86fa800a398f40b7bb1aa92626fe3351851eb/151723d2e75af21a7facbbc5292c61d3aa2a6cde/ba08023f199021f0ce0745c0b992df931f86cef9/2f53108320fa3cf33f8b80a66908342a6c2a9e9e/45f14cb65409147ff739d2c7fa7950fe23341eb2/e122b04780afb9dce9757d2b8f80218861aec214/d0b9d75cff4fac9da613163c1c14d9837c673405/03e4cd19cc670522ff8c84ec5a9e391ccd592c52/,2019-12-20 11:10:09-07:00/2020-06-09 12:08:38-06:00/2020-05-19 11:51:33-06:00/2020-06-02 15:16:48-06:00/2020-06-02 16:37:34-06:00/2019-10-09 15:36:20-06:00/2019-12-20 11:28:36-07:00/2019-12-18 14:40:55-07:00/,Parse the command line
Assembly,lanl/qmasm,2d01a59600629a55c9073d4e35fe0bdc9bafb2df,2020-06-04T00:30:56Z,eb77446bb64b66e3e70157f8f3e75c177adb2213/,2020-06-03 19:19:45-06:00/,Specify a download URL
Assembly,lanl/qmasm,68d839a70523239b501b2fee3e22b16041167d12,2020-07-21T20:08:53Z,64810737abc9d42665d8106cd7d227337f7bba54/60c0bf91399573416c1acf0d87253c36a603c53b/,2020-07-22 18:49:06-06:00/2020-07-21 18:37:25-06:00/,Let the user specify an underlying solver when selecting the kerberos solver
Assembly,lanl/qmasm,0a2149dd5ea8a66ac65f3e25a3dd65bbe92bb292,2016-08-19T00:36:21Z,f21cc157a6994e7ab172bc30de12038ca808fcce/4253e5d5a8d1f117e5a30e6ed43cc10328acf2f7/77dcb44604e4f32a38b1b03a635236b084b5900d/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/,2016-11-03 09:48:20-04:00/2016-08-18 18:40:00-06:00/2016-08-19 17:42:58-06:00/2016-10-26 16:56:24-06:00/,4-bit sorting example
Assembly,lanl/qmasm,c1fdd35670c74d751bb4ba6c0a698d14ccbd0d74,2017-03-27T08:04:20Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Report the size of the maximum possible clique
Assembly,lanl/qmasm,b11d0f7b3c472f4eaa607c58f5e90f2407cf9ca2,2016-07-11T17:39:12Z,d2a8853c30afa37214559fa9d2603ced237184bb/4bbf247a59b31bf1e225733bcefdd2a3fe131f9f/836980fe317ac8d7171f13f727f3617fbc3f4d9c/f54e91d8eec83b6fe33fc1717d21d93e20612dca/bfe3c25cf817d1d4165828d27001deb1ed707804/e55bc405a3f90b35c5a44b5ae945686a04f2f866/c589beb2cb232d4927bf457f6f0aca377dfdded7/,2017-01-24 13:25:13-07:00/2016-10-19 16:52:53-06:00/2016-10-20 14:42:41-06:00/2016-08-18 10:33:36-06:00/2017-01-25 10:14:04-07:00/2020-06-03 14:20:44-06:00/2016-10-26 18:27:45-06:00/,":bug: Pass filenames, not just line numbers, to Statements"
Assembly,lanl/qmasm,e6aa93edc0a2ce44a3036ef595b2567aa840c38f,2019-12-20T00:16:44Z,41f134f63042973693e247858a9146c64c68129b/59449daa13d9b5a29e2f18ca3834bdc464f1188c/,2019-12-23 11:32:31-07:00/2019-12-23 14:30:40-07:00/,Convert chains to aliases using dimod's contract_variables
Assembly,lanl/qmasm,74d4afdc36f4f869601948abc7baf5a60b029fdd,2020-07-20T21:49:13Z,64810737abc9d42665d8106cd7d227337f7bba54/68d839a70523239b501b2fee3e22b16041167d12/5b35930a78f19b78d67cbb96e223650ebfb823a2/,2020-07-22 18:49:06-06:00/2020-07-21 14:08:53-06:00/2020-07-23 17:00:29-06:00/,Add support for the Kerberos hybrid sampler
Assembly,lanl/qmasm,d550a0bf58f3ad8d18feeb321bed664b042acd23,2017-05-24T22:05:32Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Canonicalize edges to enforce the order of the two vertices
Assembly,lanl/qmasm,6dc07136bc3a7b84b9d69e9980c474fd931bea90,2020-06-12T17:14:18Z,60c0bf91399573416c1acf0d87253c36a603c53b/,2020-07-21 18:37:25-06:00/,:bug: Pass the correct sampler and BQM to _submit_and_block
Assembly,lanl/qmasm,2a5f1aeea476f2c3ee653c4298818478028d0e3d,2017-05-04T00:51:20Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2018-04-23 00:21:06-06:00/2017-05-04 16:14:29-06:00/,"With --all-solns, sort solutions first by increasing energy"
Assembly,lanl/qmasm,37eebbcdade93338d11e398c661baa9d08a81fae,2018-02-24T00:24:49Z,cf55b4a60330acf6d101c230a99ccadb78f7ef74/c0d5deb7b625809b8b8310e63b4f0f3354a21460/af27f78726e6dc160a4610928824b4a3538db47a/2570435bacfa873b1a92a301b43314a99c9173bb/24f79616fd41156ee72c56d0e646f4e74ea4df67/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2018-03-14 18:12:42-06:00/2019-02-09 00:13:09-07:00/2019-02-19 19:50:34-07:00/2019-02-06 23:56:31-07:00/2018-02-25 16:15:19-07:00/2020-06-03 14:20:44-06:00/,"Support integer power (""**"") in !assert directives"
Assembly,lanl/qmasm,51723a0315a982fb9a9d72fbcb7d44cfa38f94bf,2019-11-14T01:19:42Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Update qmasm-qbsolv to work correctly under Python 3

Thanks to John Scoville for reporting the problem."
Assembly,lanl/qmasm,3fea1a48e3675e1cd5b23833f3ee9ae290cfa218,2017-10-10T21:39:46Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Attempt to reduce memory requirements for solution merging
Assembly,lanl/qmasm,deb223e208f6a9ef4e41a70a38c4b192b61743d9,2019-05-03T21:20:41Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/b3d1dbb997b1ae57ad5848841479eb07d0c06c1a/,2020-06-03 14:20:44-06:00/2019-05-03 16:43:41-06:00/,Output energy statistics at verbosity levels 1 and up
Assembly,lanl/qmasm,3d8f4dcfba9255e61e41c97a6569b4bf7e7697b6,2017-06-22T21:20:00Z,513b7e3d2f34fd49c20d4beb38b105e3cdad83b1/,2019-01-28 00:22:22-07:00/,Increase the version number to 2.0 in preparation for a release
Assembly,lanl/qmasm,d2da5ce215b0a1e3b9e1a988001c5086db89ffcc,2020-01-07T22:09:27Z,975bb6eb8da49418924d0210e88c36a2c7dbbd29/f981684a5d995c3a235226b5579d094a5c2b3fc4/16d501d4be17852beaabfb1cb06c9c62fa453737/f7d1fb6400582f4c2fb9510c05527ff4091cd041/1bc122180830027ea8987b70a5ef1e5666246857/6fdc8c51b614dcdc989875a97344e89b0b722729/,2020-01-07 17:22:15-07:00/2020-03-12 16:48:10-06:00/2020-01-07 16:50:04-07:00/2020-01-24 15:55:35-07:00/2020-05-19 16:10:30-06:00/2020-06-12 12:54:46-06:00/,"Output the mapping from logical to physical qubits

Some debug code remains."
Assembly,lanl/qmasm,0a5cf17c6b9408f81f8f746787a136d098a36d7c,2020-05-27T19:49:13Z,8316b1ded244f2c75061bb65d0ec880dbda14ba1/,2020-07-06 17:13:03-06:00/,Overwrite the physical BQM in place
Assembly,lanl/qmasm,1aab3fcc08876951d46404b1ae052986fbe6940d,2019-12-23T22:02:03Z,ba08023f199021f0ce0745c0b992df931f86cef9/5c79ec1f5919327b626158de7210a96f71f452ca/70691a80494d60ba098b9f20c0a4ae1bf8999af9/39eb40836f255d18a205c69c3ef5b5dc40d8e998/,2020-05-19 11:51:33-06:00/2020-03-12 18:17:29-06:00/2020-05-19 18:38:59-06:00/2020-06-09 18:25:05-06:00/,Add the ability to output flattened QMASM source code
Assembly,lanl/qmasm,329466fdac7d173e95c57130703a9f3a36d20d2d,2017-05-04T17:32:01Z,35e9356b8140ddb99d9ae6b296f902a8c5329487/e55bc405a3f90b35c5a44b5ae945686a04f2f866/bb9fa86838726ff018c541884988c96b2dfe6892/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-05-04 12:58:51-06:00/2020-06-03 14:20:44-06:00/2017-05-29 23:12:55-06:00/2017-05-04 16:14:29-06:00/,":bug: Don't crash on MiniZinc runs if -O elides qubits

Also included more verbose output for classical runs."
Assembly,lanl/qmasm,b93df3340243745ae4db13a038ddf3eb238a0129,2019-02-21T05:21:34Z,bd62a1579b7d3bc87ed452f1cb13f14a26c18dc6/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-20 22:53:12-07:00/2020-06-03 14:20:44-06:00/,Explicitly check for invalid identifiers in all statements
Assembly,lanl/qmasm,9b09d248c66c6b75c39eba2a534dc9a5e743a726,2018-04-23T06:21:06Z,cc7891bd8d3cda58f6ec63d3f2dcf555632467c2/a50b5a6b8b1c02ba02f5694accf370efc5f82e48/550389c895caace95e7ecd887e624af4f0687ff7/20a5b56ca0649e34e1297c13ed07780cd38f9d3a/d7c3d05839e17144c8b250fc46eb22ef43000e12/b28f50600eceba74d59e43dc8e570e8ab4601626/deb223e208f6a9ef4e41a70a38c4b192b61743d9/9b2449243d2b488c8a0363385df68e1f6f65c7e4/6017925f49cba0451b562b197fd56df093014141/ba212962942b26e0f6d8c605c0f369cde4c654b7/9ee7cba1105c8f21522a9f014bc572de1786a9a2/22a2b01e6d00e77f87c2661dd0633bd907acde6e/7f02bee4b80e8e19d3dce256b86b77c1c8e4105e/e55bc405a3f90b35c5a44b5ae945686a04f2f866/03d4201d7d8b5999ab6b907ed41be2414f88fbfd/d83f25754ead385b52d736a66e7402afecc7af1a/08e80c4b0a4fb469315dbee680670f1dfec66748/,2018-05-29 06:55:08-06:00/2019-02-13 22:36:48-07:00/2019-02-08 20:02:49-07:00/2018-04-23 01:11:16-06:00/2018-11-02 15:11:58-06:00/2019-02-13 23:22:25-07:00/2019-05-03 15:20:41-06:00/2018-05-25 01:17:34-06:00/2018-05-25 13:00:01-06:00/2018-05-21 23:35:59-06:00/2018-05-08 23:40:06-06:00/2019-02-07 00:12:13-07:00/2019-02-18 00:07:48-07:00/2020-06-03 14:20:44-06:00/2018-05-21 00:33:19-06:00/2019-02-08 21:45:01-07:00/2018-05-21 20:36:09-06:00/,"Drop support for --discard and --all-solns in favor of --show

I've even confused myself with the semantics of --discard and
--all-solns and how those relate to -O, -v, and -v -v.  I believe that
the new --show={valid, best, all} option is a more intuitive
replacement.  By default, only valid solutions are shown, which might
be the empty set.  Specifying --show=best ensures that at least one
solution (the least bad) is output.  Specifying --show=all outputs all
solutions.

This commit includes substantial restructuring of the code that
manages the resulting solutions.  A new Solutions object provides
methods for filtering out solutions that violate particular
constraints.  This is much cleaner than the previous approach, which
performed some filtering in dwave.py and some in qmasm.py, with much
confusion as to which solutions were truly the ones to be presented to
the user."
Assembly,lanl/qmasm,f46e2879460ab11e29bc7e9b8c4421e6b47dbf1b,2019-02-24T07:33:03Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/6c93bd8a90db0cb8091113681fd473d049ba86c7/,2020-06-03 14:20:44-06:00/2019-05-10 16:53:53-06:00/,Compute energy in the case of all variables being fixed
Assembly,lanl/qmasm,f39d080db8ce9bc64646989942da8c0565d0efa8,2019-12-18T23:57:03Z,a479826aafca66ffd7ce86b1105819d163cf4b4b/,2019-12-18 17:57:17-07:00/,Remove unnecessary mixins
Assembly,lanl/qmasm,ba08023f199021f0ce0745c0b992df931f86cef9,2020-05-19T17:51:33Z,70691a80494d60ba098b9f20c0a4ae1bf8999af9/16165697004e65ae9bf3cdd0cab7cbae7bd9b23e/7fa7d3c2f17d448875ee5b633dc64b3cc7e4c9f3/,2020-05-19 18:38:59-06:00/2020-05-20 14:53:28-06:00/2020-05-20 12:04:10-06:00/,Include initial support for outputting Qubist files
Assembly,lanl/qmasm,bd62a1579b7d3bc87ed452f1cb13f14a26c18dc6,2019-02-21T05:53:12Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Forbid the use of commas in identifiers

Commas are needed by the !for construct."
Assembly,lanl/qmasm,5012287e813adaa40c8707708b05dab73f850829,2017-02-01T14:51:35Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Corrected handling of invalid QMASMCACHE values
Assembly,lanl/qmasm,b7a6c4648701d581d086143246e14447a9cb9d00,2019-12-23T22:11:13Z,ba08023f199021f0ce0745c0b992df931f86cef9/5c79ec1f5919327b626158de7210a96f71f452ca/70691a80494d60ba098b9f20c0a4ae1bf8999af9/,2020-05-19 11:51:33-06:00/2020-03-12 18:17:29-06:00/2020-05-19 18:38:59-06:00/,Add the ability to output a problem in BQPJSON format
Assembly,lanl/qmasm,2822b0570b25004e7c29eb5f1f44855105403803,2016-12-21T01:28:31Z,6b00f179bee4bb3fa3cf635d50b45942250a7504/a7744cd958ce55f7b87bc3669c6baf9c67728639/fb5df0af32a59ba4bc432bbc2e158c41e7126d97/,2016-12-21 17:54:27-07:00/2016-12-23 11:17:04-07:00/2016-12-21 17:41:25-07:00/,Maze example
Assembly,lanl/qmasm,d2dc300167d8dc15e434b9d9c45c62d01a446484,2016-11-11T23:54:16Z,ceaf61b04af797150e5ec1cbfd04cad0fd0a5137/,2017-02-16 11:18:39-05:00/,"Minor changes to the README

Mention that the name ""QASM"" is also used by the IBM Quantum
Experience."
Assembly,lanl/qmasm,550389c895caace95e7ecd887e624af4f0687ff7,2019-02-09T03:02:49Z,b28f50600eceba74d59e43dc8e570e8ab4601626/e55bc405a3f90b35c5a44b5ae945686a04f2f866/d83f25754ead385b52d736a66e7402afecc7af1a/,2019-02-13 23:22:25-07:00/2020-06-03 14:20:44-06:00/2019-02-08 21:45:01-07:00/,Make the discard_* methods return solutions rather than modify in place
Assembly,lanl/qmasm,17cbf6e2a39815f2b7c6ba07dcd89e2a8dce18c9,2018-05-26T00:04:54Z,9484eba4e0e57ee9f115a025b560618ec5ffd3e0/998e11b16d8de22e255b77195d2cd7654517bf73/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2018-05-25 22:45:25-06:00/2018-05-25 19:11:58-06:00/2020-06-03 14:20:44-06:00/,":bug: Convert antichains, not just chains, to aliases"
Assembly,lanl/qmasm,c896937b74bac51f1508b3d693c4e333de375267,2016-08-17T05:40:11Z,ce3ca616f6c3a87cc5b99afef71031588b912368/3e63a7d7dba1cb19f1dfd35d6fe6ee488f0f3731/d54fc827d96fd412f2006b7b574d5ebaa7f554f7/b64bb9384e62da2be1dd929b3b2414e1b509a0a0/59437a9d3ce24a759b7318ddd524644d5829a677/514b72ad91caf23f8a6d73a36c797929f010a21e/e91b353e47aabcda8dec91d70d2d789f1278aeee/17cbf6e2a39815f2b7c6ba07dcd89e2a8dce18c9/661a507062f4b0a024755259438e85bff51acaf8/d97cd459bd1a9439971650c6dd7138b56bb288e6/331bba068ce90f402a7af687bda0c00d3cef9a22/08e80c4b0a4fb469315dbee680670f1dfec66748/e995db20ce37dddb3812d35ef357e5e4b10c889f/6fa6e34cebc93f83ccccaa9ae7ba14e6094f63e1/32819ea0943992bbc87ca842c0d8762e1324a145/35cbdbcf59a6dcf75e0f28f09320d2e7ab02503c/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/13bc63ed5a7aea0b1e5954b08f8bc2dbb1bf3b1a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/6bec5ac217b9170c165e38882847f78e9e78b05a/6c93bd8a90db0cb8091113681fd473d049ba86c7/d550a0bf58f3ad8d18feeb321bed664b042acd23/bcb66e851a875991abf3046d4f70c8d1e39d4808/d1a39fd7bbe7a4b6e579c0b7637c5f9c2e120ab7/5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/d7c3d05839e17144c8b250fc46eb22ef43000e12/0731aa59b448f63a8f8d4c97dd7f2c25212e6bb9/1994378b8589ba353f30ad25c6008fab8f573d45/bb9fa86838726ff018c541884988c96b2dfe6892/422997299ffe0432cf5b051286dd9849c9f2085a/03d4201d7d8b5999ab6b907ed41be2414f88fbfd/,2016-08-19 17:14:43-06:00/2016-08-18 11:31:57-06:00/2016-09-27 18:41:39-06:00/2016-11-03 09:26:28-04:00/2018-05-09 00:05:04-06:00/2018-12-17 11:31:45-07:00/2016-08-19 17:32:17-06:00/2018-05-25 18:04:54-06:00/2017-05-25 18:17:36-06:00/2017-05-30 23:34:55-06:00/2016-08-19 17:37:39-06:00/2018-05-21 20:36:09-06:00/2018-05-21 20:22:36-06:00/2016-08-17 01:07:18-06:00/2017-01-27 16:34:52-07:00/2016-11-17 00:28:39-07:00/2016-10-26 16:56:24-06:00/2017-08-22 13:44:51-06:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/2016-08-19 11:17:57-06:00/2019-05-10 16:53:53-06:00/2017-05-24 16:05:32-06:00/2016-08-17 00:57:52-06:00/2017-01-26 18:56:44-07:00/2018-05-21 01:07:03-06:00/2018-11-02 15:11:58-06:00/2017-01-30 11:55:59-05:00/2018-03-14 16:48:14-06:00/2017-05-29 23:12:55-06:00/2016-08-19 11:34:14-06:00/2018-05-21 00:33:19-06:00/,"Begin reducing the dependence on global variables

A new Problem class encapsulates both logical and physical problem
state."
Assembly,lanl/qmasm,73ef40cda3c70a25ebe1361f40849e728c315afc,2017-05-05T04:26:44Z,9e5be93dcb0b6940267d441fc666d17fc9ac5cb3/a64f15726c638eaf128e673aa2e6aa17f0d6d6c5/7f562550b874e5dd77b5352fd8192d4dd5e7fc91/,2018-06-20 00:21:31-06:00/2017-08-23 16:19:36-06:00/2017-05-06 07:21:05-06:00/,Relay error messages from qbsolv
Assembly,lanl/qmasm,16d501d4be17852beaabfb1cb06c9c62fa453737,2020-01-07T23:50:04Z,f981684a5d995c3a235226b5579d094a5c2b3fc4/5e6379cb72d249a86c71049b0648f17f771cdd16/83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/6b65277f31e7b772c122a148da8cf8047391a74f/6fdc8c51b614dcdc989875a97344e89b0b722729/9401114d7e2264cd34d8b72ed76f44d395f41bb7/,2020-03-12 16:48:10-06:00/2020-03-11 16:04:53-06:00/2020-05-29 18:02:35-06:00/2020-06-12 13:23:21-06:00/2020-06-12 12:54:46-06:00/2020-01-07 16:55:50-07:00/,":bug: Consistently use strings for keys in the embedding dictionary

Much debug code remains."
Assembly,lanl/qmasm,ba212962942b26e0f6d8c605c0f369cde4c654b7,2018-05-22T05:35:59Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/d83f25754ead385b52d736a66e7402afecc7af1a/9b2449243d2b488c8a0363385df68e1f6f65c7e4/,2020-06-03 14:20:44-06:00/2019-02-08 21:45:01-07:00/2018-05-25 01:17:34-06:00/,:bug: Distinguish user-defined chains from embedder-introduced chains
Assembly,lanl/qmasm,41f134f63042973693e247858a9146c64c68129b,2019-12-23T18:32:31Z,80fa70ae36e3c697ccee65bd0fba40aac638384f/64810737abc9d42665d8106cd7d227337f7bba54/59449daa13d9b5a29e2f18ca3834bdc464f1188c/74d4afdc36f4f869601948abc7baf5a60b029fdd/622e9ba948f257704942cedb2c78491aa9dfcc99/,2019-12-23 13:21:52-07:00/2020-07-22 18:49:06-06:00/2019-12-23 14:30:40-07:00/2020-07-20 15:49:13-06:00/2020-07-24 16:47:23-06:00/,Use dimod.roof_duality.fix_variables to simplify the BQM
Assembly,lanl/qmasm,1b32d037d9ca1fd7b102c855c350d69efedcafcb,2018-04-26T05:41:25Z,1a8a8ea956b92656d0139adf41715bf73244c139/e2c3567432ca495cda518bda32ab556ded082c26/deb223e208f6a9ef4e41a70a38c4b192b61743d9/,2018-05-07 00:27:19-06:00/2018-05-07 00:47:43-06:00/2019-05-03 15:20:41-06:00/,Remove useless report of theoretical minimum energy
Assembly,lanl/qmasm,21ab0a75b2d81c1ba1a9093d1397feaee6c66cb5,2018-03-14T22:46:24Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Call fix_variables in ""standard"" mode so as not to discard valid solutions"
Assembly,lanl/qmasm,2b0f887a5ef7492e77ebebcbcf0771a38f9f7b97,2017-01-20T20:25:37Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Correctly handle the case of no weights, all strengths"
Assembly,lanl/qmasm,35e9356b8140ddb99d9ae6b296f902a8c5329487,2017-05-04T18:58:51Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/41f5348bb1c9782f334906026f4af48d7574779d/,2020-06-03 14:20:44-06:00/2017-05-31 00:19:08-06:00/,Use MiniZinc as the front end for both the MIP and the CP run
Assembly,lanl/qmasm,3b2785a022967fde1afe2b3d803acee4ae64f6b4,2017-06-01T19:44:27Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/fb82c362f10c319d952c00fadb21341e3ba8a367/751e5e7d116c243391b3f02b2f717c63d59051be/,2020-06-03 14:20:44-06:00/2017-08-31 13:44:52-04:00/2020-06-03 17:30:21-06:00/,Make -O (and -O1) only reduce qubit counts; -O2 packs the Chimera graph
Assembly,lanl/qmasm,75286a79e6963805eb4fb1a2d1ded23b837eb486,2019-12-20T21:23:38Z,64810737abc9d42665d8106cd7d227337f7bba54/41f134f63042973693e247858a9146c64c68129b/60c0bf91399573416c1acf0d87253c36a603c53b/c9c65e79db99460526e50e5350144ebfabb73c43/f4183367a8fdf74728dd17a0897a7d1792725ce0/7e5e67d518fcb4df62a5274b65b8948297350654/623985cbda433ac3c7da7209289b8e87be084c7f/,2020-07-22 18:49:06-06:00/2019-12-23 11:32:31-07:00/2020-07-21 18:37:25-06:00/2019-12-23 18:49:15-07:00/2020-06-01 16:41:37-06:00/2020-05-21 15:14:56-06:00/2020-07-22 16:12:13-06:00/,Output solver/sampler properties
Assembly,lanl/qmasm,9811485e7e7f10afb0a40470d6ee376c4b4f751c,2017-02-23T16:31:13Z,73f341fc0b8fcf4e6044eae6af3c9f89bf677e3f/,2017-05-31 14:51:02-06:00/,:bug: Corrected formatting when all symbols are a single character
Assembly,lanl/qmasm,65958016fec974d2ed99bbfa7c981e2780fc2432,2018-02-23T01:43:50Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct exception handling for Python3 compatibility
Assembly,lanl/qmasm,c63f0e0c7c60a38d6ac139a128642d2e2231bdc5,2016-10-28T17:41:45Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/adb3a7644b87d1509ddf59da8be454747d782dda/,2018-04-23 00:21:06-06:00/2018-04-06 00:00:35-06:00/,"Say ""minimal energy"" instead of ""ground state""

We don't know for sure that any given solution represents an actual
ground state."
Assembly,lanl/qmasm,b057c38f43f0d1d3725decc64fe433b0bb0c2316,2017-02-23T16:20:21Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/c3acc256e9ee8349330cce11a1ddccb4352da799/,2020-06-03 14:20:44-06:00/2019-01-19 22:33:56-07:00/,":bug: Update to work with new qmasm class structure

Apparently, qmasm-ground-state had been broken since 8c395558f2829d29d2785b0a85c1c467f0a894d9."
Assembly,lanl/qmasm,60053cd11b11c086972629e1d2cf11391f44732a,2019-01-21T07:15:53Z,a91d330607064a34f1f0eb1a558527b006fd31c7/,2019-02-10 14:07:31-07:00/,Give helpful error message if commas are omitted from a !for statement
Assembly,lanl/qmasm,ade1e25b4315125ddaaf5a47d7a93b76bc41558a,2017-05-04T06:20:43Z,d713dab380bc7d8ca14bf9db4172670b0f32c589/e55bc405a3f90b35c5a44b5ae945686a04f2f866/329466fdac7d173e95c57130703a9f3a36d20d2d/bb9fa86838726ff018c541884988c96b2dfe6892/,2017-05-17 11:08:02-06:00/2020-06-03 14:20:44-06:00/2017-05-04 11:32:01-06:00/2017-05-29 23:12:55-06:00/,Added an --extra-args option to pass arguments to qbsolv or mzn-chuffed
Assembly,lanl/qmasm,381bc3c63a14334be278befc50c7951b713b690c,2016-12-24T01:36:00Z,7fabb30e88b52bff8592cd401c94193ddc972f2e/41f5348bb1c9782f334906026f4af48d7574779d/,2017-05-30 09:32:06-06:00/2017-05-31 00:19:08-06:00/,"Formatted MiniZinc output to look like normal QMASM output

A remaining discrepancy is that all solutions are labeled ""Solution
from within a model file when minizinc is run with --all-solutions."
Assembly,lanl/qmasm,6417ed8558009bd5a9eecf65091dfe21d5a514de,2020-05-26T21:16:09Z,b6d17d2105ba9cce5685190ff6e845aeefc6ec9e/fad3b9795f1ea9ce99d374d9857eaf70880306ff/,2020-05-26 16:29:30-06:00/2020-05-28 13:55:00-06:00/,Begin storing individual solutions in Solution objects
Assembly,lanl/qmasm,e122b04780afb9dce9757d2b8f80218861aec214,2019-10-09T21:36:20Z,89f68698ff2eee4d7990358400c39d7b2d2ab770/dd7db9c690c8d31018a1cc4c8272f68e825bc74a/21109e46382da828d8453c916b2127ec476daea9/03e4cd19cc670522ff8c84ec5a9e391ccd592c52/,2020-05-21 17:21:48-06:00/2019-10-10 09:30:01-06:00/2020-06-03 18:27:06-06:00/2019-12-18 14:40:55-07:00/,Update setup.py to install what we have so far
Assembly,lanl/qmasm,00733c98500c619e1d840fcbe07214710c02cba6,2019-01-14T06:30:56Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/c3acc256e9ee8349330cce11a1ddccb4352da799/,2020-06-03 14:20:44-06:00/2019-01-19 22:33:56-07:00/,"Pass parse_file_contents a list of {line number, line} tuples

This change is in preparation for supporting loops, which will cause
lines in the loop body to be evaluated repeatedly."
Assembly,lanl/qmasm,6c8ea845a0f40320e003b8ea85117eb5c6410192,2020-05-26T23:45:22Z,69505d0911f3c949d60a26dfac2651a755566853/fad3b9795f1ea9ce99d374d9857eaf70880306ff/,2020-05-27 15:02:13-06:00/2020-05-28 13:55:00-06:00/,Filter out broken pins
Assembly,lanl/qmasm,af27f78726e6dc160a4610928824b4a3538db47a,2019-02-20T02:50:34Z,32cf33dc31fdaf63ba80ea633cd6712144021197/eec86859c92fb7eb0dbe8a715a735d597ac42e84/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-19 21:49:50-07:00/2019-03-27 17:24:21-07:00/2020-06-03 14:20:44-06:00/,Convert the assertion interpreter to a compiler
Assembly,lanl/qmasm,7fabb30e88b52bff8592cd401c94193ddc972f2e,2017-05-30T15:32:06Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/41f5348bb1c9782f334906026f4af48d7574779d/d97cd459bd1a9439971650c6dd7138b56bb288e6/,2020-06-03 14:20:44-06:00/2017-05-31 00:19:08-06:00/2017-05-30 23:34:55-06:00/,"Have MiniZinc output energy in problem scale, not integer scale"
Assembly,lanl/qmasm,4dfd60cf41d6afe55e1138168ac01597d2ddfff5,2019-03-28T02:37:30Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct the renaming of symbols in assertions within chained macros
Assembly,lanl/qmasm,3717a7991f448a4fe0876837efe89bdbada9a02a,2017-06-21T00:14:39Z,1994378b8589ba353f30ad25c6008fab8f573d45/,2018-03-14 16:48:14-06:00/,"Allow aliases of undefined symbols

Instead of aborting with an error message, trying to alias an
undefined symbol autovivifies the symbol then aliases it."
Assembly,lanl/qmasm,c623159aafd8670f2e7ad91ec9ad9aa9a3f70392,2017-08-25T00:43:11Z,1994378b8589ba353f30ad25c6008fab8f573d45/e55bc405a3f90b35c5a44b5ae945686a04f2f866/5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/84dcbd4975ebce8ff31cbc8aac49d9f630d53c8b/,2018-03-14 16:48:14-06:00/2020-06-03 14:20:44-06:00/2018-05-21 01:07:03-06:00/2018-03-14 17:14:03-06:00/,:bug: Corrected the writing of internal and elided variables for qbsolv
Assembly,lanl/qmasm,d48954b90d71ce0a388b4561d4466c76a95d5111,2016-07-08T20:44:23Z,7c55d9f9f35ebbb042967c340093e33611d57550/,2016-07-08 14:54:46-06:00/,Introduce a 10% fudge factor for chain strength
Assembly,lanl/qmasm,901b813195b9119adbd978cc4d6141b7c62de3fa,2019-01-27T06:54:59Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct the translation of assertions to strings
Assembly,lanl/qmasm,69505d0911f3c949d60a26dfac2651a755566853,2020-05-27T21:02:13Z,72a9c1209260c8a60425bacedab21f2343f7a752/,2020-05-29 18:18:33-06:00/,Filter out solutions that do not exhibit minimal energy
Assembly,lanl/qmasm,514b72ad91caf23f8a6d73a36c797929f010a21e,2018-12-17T18:31:45Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"More aggressively merge qubits

Previously, user-defined chains would be converted to aliases (i.e.,
multiple qubits would be merged) only when the qubits at each end of
the chain have the same weight.  This change aliases qubits regardless
of weights.  Mathematically, this ought to be a correct operation, and
so far, the change does not appear to have degraded correctness."
Assembly,lanl/qmasm,58b679241a9b2c1a0dca0248e8a636acdab3af43,2017-06-03T05:20:01Z,1994378b8589ba353f30ad25c6008fab8f573d45/e55bc405a3f90b35c5a44b5ae945686a04f2f866/08e80c4b0a4fb469315dbee680670f1dfec66748/,2018-03-14 16:48:14-06:00/2020-06-03 14:20:44-06:00/2018-05-21 20:36:09-06:00/,Include richer metadata in bqpjson output
Assembly,lanl/qmasm,22a2b01e6d00e77f87c2661dd0633bd907acde6e,2019-02-07T07:12:13Z,b28f50600eceba74d59e43dc8e570e8ab4601626/,2019-02-13 23:22:25-07:00/,:bug: Make --show=valid discard results that fail an assertion
Assembly,lanl/qmasm,61ff7c060d05883b316b5f000a58716be9010fd0,2018-02-24T01:32:19Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Adapt qmasm-qbsolv to the latest qbsolv output formatting

Resolves #4"
Assembly,lanl/qmasm,2ea095083f688d062a03e79970fbc24c24e37488,2017-08-22T19:40:17Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Define a fake fix_variables so QMASM can run without SAPI
Assembly,lanl/qmasm,84dcbd4975ebce8ff31cbc8aac49d9f630d53c8b,2018-03-14T23:14:03Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Fix crash when generating qbsolv input
Assembly,lanl/qmasm,ca419ba423766f0955a2de241b1fb819385ba5d4,2018-06-20T07:22:50Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Fake unembed_answer, needed for qbsolv execution"
Assembly,lanl/qmasm,cd49d2469e7dc74af47fe890e10f0860ece672c5,2016-11-03T00:34:01Z,ee542375ae3544d0837033ef3a489b146ee9ce21/c623159aafd8670f2e7ad91ec9ad9aa9a3f70392/b64bb9384e62da2be1dd929b3b2414e1b509a0a0/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/398236e7ba67893dc1eb2bdc0750057f3ea11e24/3df14bc70e791f86aea778a54d1c9893ec51c5ec/d550a0bf58f3ad8d18feeb321bed664b042acd23/,2017-02-23 09:23:27-07:00/2017-08-24 18:43:11-06:00/2016-11-03 09:26:28-04:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/2017-05-03 23:58:49-06:00/2017-05-04 16:14:29-06:00/2017-05-24 16:05:32-06:00/,"Output qbsolv files before, not after, embedding

The main point of qbsolv is to run programs too large to fit on a
single chip.  Trying to embed a large problem, failing, and aborting
the program before even writing qbsolv output makes no sense.  We now
write qbsolv files first, then exit with a success code."
Assembly,lanl/qmasm,b64bb9384e62da2be1dd929b3b2414e1b509a0a0,2016-11-03T13:26:28Z,433720570fe34d49f9e656e37f60ca9d40860e8e/03d7550592ab06af3b924e1eec2b2c6694e51e84/d97cd459bd1a9439971650c6dd7138b56bb288e6/e55bc405a3f90b35c5a44b5ae945686a04f2f866/fb82c362f10c319d952c00fadb21341e3ba8a367/03d4201d7d8b5999ab6b907ed41be2414f88fbfd/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-07-02 18:39:35-06:00/2017-06-07 12:04:42-04:00/2017-05-30 23:34:55-06:00/2020-06-03 14:20:44-06:00/2017-08-31 13:44:52-04:00/2018-05-21 00:33:19-06:00/2017-05-04 16:14:29-06:00/,"Consistently store weights as a defaultdict

Previously, problem weights were usually stored as a defaultdict but
were sometimes stored as a list.  This revision consistently stores
weights as a defaultdict and provides dict_to_list and list_to_dict
functions for converting between the two representations."
Assembly,lanl/qmasm,b4387aca4b0807154114f31eba18494e174d5d14,2017-03-20T22:13:33Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,":bug: Correct the determination of whether embedding is impossible

This revision additionally outputs (when verbosity is at least 2) a
histogram of the initial problem's node degree."
Assembly,lanl/qmasm,83144a8cbb32ad4a4ada47bcb5de5d3a9aaeb1ee,2016-07-08T20:18:04Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/,2016-10-26 16:56:24-06:00/,Shortened QASM's description in the README file
Assembly,lanl/qmasm,69b1c994c1f479bfd612cb8c071d2f6d0825d213,2017-08-04T20:56:07Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Sort timing information alphabetically by key
Assembly,lanl/qmasm,9bb58a3d91a0467a5931d884b31b9dc30204eb18,2017-03-20T20:43:45Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/,2018-04-23 00:21:06-06:00/,":bug: Pass hs and Js to `unembed_answer(..., broken_chains=""minimize_energy"")`

In addition, this revision removes a redundant call to
`unembed_answer` for the `--discard=no` and `--discard=maybe` cases."
Assembly,lanl/qmasm,4e976d9404501f437bbf5f817ac8e64875b4c0f2,2016-08-15T17:16:29Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/77dcb44604e4f32a38b1b03a635236b084b5900d/d5ddf8c3cf017497659f395512cf7f2964a4be45/,2016-10-26 16:56:24-06:00/2016-08-19 17:42:58-06:00/2019-01-27 20:28:20-07:00/,Initial `examples` and `extras` directories
Assembly,lanl/qmasm,f54e91d8eec83b6fe33fc1717d21d93e20612dca,2016-08-18T16:33:36Z,4bbf247a59b31bf1e225733bcefdd2a3fe131f9f/,2016-10-19 16:52:53-06:00/,:bug: Correct the parsing of --pin's argument
Assembly,lanl/qmasm,a50b5a6b8b1c02ba02f5694accf370efc5f82e48,2019-02-14T05:36:48Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Correct solution tallies

Previously, summing all the solution tallies could result in a number
greater than N when taking N samples (and reporting via `--show=all`)."
Assembly,lanl/qmasm,dc9870a046f8fcb701377951dc2c2dce9cdee31a,2017-05-31T20:53:49Z,751e5e7d116c243391b3f02b2f717c63d59051be/,2020-06-03 17:30:21-06:00/,Test QMASM against PyPy
Assembly,lanl/qmasm,89f68698ff2eee4d7990358400c39d7b2d2ab770,2020-05-21T23:21:48Z,aee335544ba1b6a1f6a0834a2ca54acee9f4051b/f2ecf156217eeae45ab942f1a134bcb32ea7f23b/5b35930a78f19b78d67cbb96e223650ebfb823a2/0d51c9bdd3a262cd5778dbbca084816c3effa5dc/751e5e7d116c243391b3f02b2f717c63d59051be/83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/a327111cf516594ddaa69a2e62417428a2274722/,2020-07-23 17:08:41-06:00/2020-05-28 17:14:01-06:00/2020-07-23 17:00:29-06:00/2020-06-01 18:23:04-06:00/2020-06-03 17:30:21-06:00/2020-05-29 18:02:35-06:00/2020-07-20 23:54:09-06:00/,"Work around an Ocean bug that causes asynchronous invocation to complete early

See dwavesystems/dwave-system#297 for the full discussion."
Assembly,lanl/qmasm,c8b5dc0f23cfe5612786839aa09ff6f86ded2706,2020-07-28T21:37:34Z,b5ff7903e9eb1c801327d2b6b7c25d711969e592/,2020-07-28 18:01:55-06:00/,Specify a sampler even when only generating Ocean code
Assembly,lanl/qmasm,3d2a8d7aedb863b2bfbe5e204af117307faeaecb,2016-12-03T01:54:49Z,d1a39fd7bbe7a4b6e579c0b7637c5f9c2e120ab7/d2a8853c30afa37214559fa9d2603ced237184bb/d3045915257228114374e0e996ac4b55196a9472/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-01-26 18:56:44-07:00/2017-01-24 13:25:13-07:00/2017-06-02 00:24:06-06:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/,"Support for --format=qmasm

This option writes a flattened QMASM input file by expanding macros."
Assembly,lanl/qmasm,33061dfc20f9cffb0d1e05ed904fb2cfcecd6bc8,2017-03-25T06:00:41Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/e55bc405a3f90b35c5a44b5ae945686a04f2f866/1e70ed13484eecb96006fdd605e08167c720f39d/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2018-04-23 00:21:06-06:00/2020-06-03 14:20:44-06:00/2017-03-25 16:10:26-06:00/2017-05-04 16:14:29-06:00/,Moved the solution-output routine from qmasm.py to output.py
Assembly,lanl/qmasm,d83f25754ead385b52d736a66e7402afecc7af1a,2019-02-09T04:45:01Z,b28f50600eceba74d59e43dc8e570e8ab4601626/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-13 23:22:25-07:00/2020-06-03 14:20:44-06:00/,"Refactored solution-filtering code from qmasm.py into solutions.py

Also improved the handling of --show=best."
Assembly,lanl/qmasm,8069e3fff1d9f014d3b16d3ed274ff5fbe707a72,2019-02-21T04:42:58Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/b93df3340243745ae4db13a038ddf3eb238a0129/,2020-06-03 14:20:44-06:00/2019-02-20 22:21:34-07:00/,Forbid the use of operators within variable names
Assembly,lanl/qmasm,d70f6ba6e5df38e7999c3a119d02cdb96afa45f6,2019-01-28T05:12:53Z,5dc38c8bfc45cc4a00de3c9574f79b31a2f3ebf8/bd62a1579b7d3bc87ed452f1cb13f14a26c18dc6/8069e3fff1d9f014d3b16d3ed274ff5fbe707a72/,2019-01-27 23:41:37-07:00/2019-02-20 22:53:12-07:00/2019-02-20 21:42:58-07:00/,Introduce a do-nothing example that uses all QMASM features
Assembly,lanl/qmasm,a51ce391ca634d3cbac846de8ff111ac35141c64,2020-05-29T22:15:09Z,2750ecad81088297068c8a247d8d9ce748c970c4/,2020-06-02 16:39:56-06:00/,Distribute the qb2qmasm script for translating Qubist to QMASM
Assembly,lanl/qmasm,1a8a8ea956b92656d0139adf41715bf73244c139,2018-05-07T06:27:19Z,e2c3567432ca495cda518bda32ab556ded082c26/,2018-05-07 00:47:43-06:00/,Output an estimate of minimum energy using a majorization technique
Assembly,lanl/qmasm,661a507062f4b0a024755259438e85bff51acaf8,2017-05-26T00:17:36Z,88e2aa3275fe2d7c56beec04afaa63d1affa5469/514b72ad91caf23f8a6d73a36c797929f010a21e/a926de9c883cf1b8ce079e361735b8f3823e7a25/1994378b8589ba353f30ad25c6008fab8f573d45/e55bc405a3f90b35c5a44b5ae945686a04f2f866/08e80c4b0a4fb469315dbee680670f1dfec66748/,2017-05-25 18:37:06-06:00/2018-12-17 11:31:45-07:00/2017-05-30 18:50:38-06:00/2018-03-14 16:48:14-06:00/2020-06-03 14:20:44-06:00/2018-05-21 20:36:09-06:00/,":bug: Rewrote the chain-optimization function from scratch

I started noticing programs giving correct results without -O but
incorrect results with -O.  In this revision, I completely rethought
and rewrote convert_chains_to_aliases.  Initial results are
encouraging; the new code appears to preserve solution quality when -O
is used."
Assembly,lanl/qmasm,e10bf68dc5aa3218df4f81f7554c2e838022cbe2,2017-10-10T19:56:31Z,681c0e59b9a2ae96ab0ac0d62bcbe899e39d78f7/194d47038a57f1d0ede41181cb8f63511580d221/,2020-05-29 18:38:20-06:00/2017-10-11 20:40:26-07:00/,"Make maze validation robust to ""qmasm -v -v"""
Assembly,lanl/qmasm,0ebd51e774cfd1aa656c5b0ff425ae45178fd9c2,2017-02-24T01:13:38Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/73f341fc0b8fcf4e6044eae6af3c9f89bf677e3f/,2020-06-03 14:20:44-06:00/2017-05-31 14:51:02-06:00/,"Renamed --verbose to --all in qmasm-ground-state

The option currently outputs all states, not just the ground state.
Renaming the option to --all frees up --verbose for later definition."
Assembly,lanl/qmasm,7f70d8fda1ae60806f2fdb36cd5d42c7c4d49fbb,2016-08-17T06:04:46Z,bb9fa86838726ff018c541884988c96b2dfe6892/,2017-05-29 23:12:55-06:00/,:bug: Corrected refactoring for -v and -vv options
Assembly,lanl/qmasm,8b93525c12d04b24b04b8a75d9efd2d7682c0b6e,2016-06-28T15:10:26Z,d1f1f7d382c2da418e3a88f29cdc5f1c7e5b3724/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2016-07-08 10:46:18-06:00/2020-06-03 14:20:44-06:00/,Minor modifications
Assembly,lanl/qmasm,16165697004e65ae9bf3cdd0cab7cbae7bd9b23e,2020-05-20T20:53:28Z,2f53108320fa3cf33f8b80a66908342a6c2a9e9e/0e1eb0fae72fab92d5e4088c5250c0f3779fb2c4/,2020-06-02 15:16:48-06:00/2020-06-02 17:26:18-06:00/,Introduce support for outputting qbsolv code
Assembly,lanl/qmasm,6900401ad01e4474d2db7a9bdc9a6955f31cdc3f,2020-06-02T20:33:00Z,21109e46382da828d8453c916b2127ec476daea9/,2020-06-03 18:27:06-06:00/,:bug: Don't crash when outputting Qubist data with a software solver
Assembly,lanl/qmasm,35cbdbcf59a6dcf75e0f28f09320d2e7ab02503c,2016-11-17T07:28:39Z,5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/e55bc405a3f90b35c5a44b5ae945686a04f2f866/fb5df0af32a59ba4bc432bbc2e158c41e7126d97/,2018-05-21 01:07:03-06:00/2020-06-03 14:20:44-06:00/2016-12-21 17:41:25-07:00/,"Made the pinning weights and strengths more sensible

We now use a weight to bias the pinning qubit towards -1 or +1 and a
chain to associate that with the target qubit."
Assembly,lanl/qmasm,1e78ded97d9d1971a1bf8b909c006cf24983922b,2016-11-11T23:13:12Z,c841e1b116a3576df8fce07412c0f5b31ccd8af7/41f5348bb1c9782f334906026f4af48d7574779d/381bc3c63a14334be278befc50c7951b713b690c/e55bc405a3f90b35c5a44b5ae945686a04f2f866/398236e7ba67893dc1eb2bdc0750057f3ea11e24/,2017-02-03 01:24:10-05:00/2017-05-31 00:19:08-06:00/2016-12-23 18:36:00-07:00/2020-06-03 14:20:44-06:00/2017-05-03 23:58:49-06:00/,"MiniZinc output includes energy

The generated MiniZinc source file now also includes instructions on
how to run MiniZinc twice: once to compute the minimum energy and once
to find all solutions corresponding to that minimum energy."
Assembly,lanl/qmasm,71a0406842266177ee0b5de9f091f00ce488bbf4,2019-01-20T19:56:07Z,dba5af14bba79c5f2bc077bce2d79362cc601d27/1dc06566d14f1110c4b59cd17169274f8583151f/e55bc405a3f90b35c5a44b5ae945686a04f2f866/73695257c7b4be21c22ed94405a0bf8301877008/43c5aa861ff0fec4e59825cb6ec54d674662cfb7/,2019-01-26 22:36:30-07:00/2019-01-27 17:14:26-07:00/2020-06-03 14:20:44-06:00/2019-01-21 00:36:06-07:00/2019-01-20 18:52:13-07:00/,Begin writing code to process loops
Assembly,lanl/qmasm,740aa55bc286772ca4b218990e9e9415df1666b0,2019-01-20T07:59:16Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Issue better error messages on bad directives
Assembly,lanl/qmasm,8316b1ded244f2c75061bb65d0ec880dbda14ba1,2020-07-06T23:13:03Z,915496754333c17998c6decb54bd5e1f5f0fd528/,2020-07-23 18:01:47-06:00/,Introduce a --physical option for control over physical placement
Assembly,lanl/qmasm,6125bf648f2dc68da2b3a88407d4e848d76b5ad4,2020-07-30T21:17:06Z,e1650b7bbece2da2b6675ad6a8a29a9527504b33/f47ffd3f5a596ea4b0580a4afa630b372f7414b9/,2020-07-30 16:15:10-06:00/2020-07-30 16:19:27-06:00/,Honor arguments related to D-Wave sampling when generating Ocean code
Assembly,lanl/qmasm,8ab0e8a53d0fcbdf8e09e917932b871fe820e8d9,2020-06-12T17:51:28Z,3bb3de98e519a547abbb3b05aaafaa9fec01562d/c1197af6140efbee621aaab43c3b09ff0988d658/915496754333c17998c6decb54bd5e1f5f0fd528/,2020-06-12 12:09:09-06:00/2020-07-01 17:12:25-06:00/2020-07-23 18:01:47-06:00/,Abort cleanly if the embedder fails to find an embedding
Assembly,lanl/qmasm,037479fe81c97c2e57c96d67c5f3d592147d7260,2016-06-28T20:38:54Z,eacb7728db6652f58fa716e22d157e1ad29b6d86/b32105a75c991bf33ffea380cc7b54fd6649b35e/32a848d45ffc1ef285939304f842a402824bde47/6fa6e34cebc93f83ccccaa9ae7ba14e6094f63e1/049afffdf6ffd812a4c4305658f7e2baff9030ed/cef680b1fa9b1927addebf7dfc38581af4eb1dae/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2016-07-08 10:33:42-06:00/2016-06-28 19:41:37-06:00/2016-07-05 16:04:36-06:00/2016-08-17 01:07:18-06:00/2016-07-01 11:19:43-06:00/2016-07-01 18:34:50-06:00/2016-10-26 16:56:24-06:00/2017-05-04 16:14:29-06:00/,Fixed multi-file package scoping problem
Assembly,lanl/qmasm,adb3a7644b87d1509ddf59da8be454747d782dda,2018-04-06T06:00:35Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/,2018-04-23 00:21:06-06:00/,Improve formatting of solution statistics
Assembly,lanl/qmasm,21109e46382da828d8453c916b2127ec476daea9,2020-06-04T00:27:06Z,eb77446bb64b66e3e70157f8f3e75c177adb2213/,2020-06-03 19:19:45-06:00/,Update the Python package metadata
Assembly,lanl/qmasm,59449daa13d9b5a29e2f18ca3834bdc464f1188c,2019-12-23T21:30:40Z,1aab3fcc08876951d46404b1ae052986fbe6940d/,2019-12-23 15:02:03-07:00/,"Refactor Problem to maintain a BQM internally

It was previously awkward for Problem to return a BQM with a back
pointer then sometimes invoke methods directly on the BQM and
sometimes on the Problem, going through the BQM.  The new scheme
lets the caller work exclusively with Problem objects."
Assembly,lanl/qmasm,83fc0e638df9ab2e3cefa74818b9a2b94fd01c13,2020-05-30T00:02:35Z,aee335544ba1b6a1f6a0834a2ca54acee9f4051b/5b35930a78f19b78d67cbb96e223650ebfb823a2/f4183367a8fdf74728dd17a0897a7d1792725ce0/74d4afdc36f4f869601948abc7baf5a60b029fdd/751e5e7d116c243391b3f02b2f717c63d59051be/6fdc8c51b614dcdc989875a97344e89b0b722729/,2020-07-23 17:08:41-06:00/2020-07-23 17:00:29-06:00/2020-06-01 16:41:37-06:00/2020-07-20 15:49:13-06:00/2020-06-03 17:30:21-06:00/2020-06-12 12:54:46-06:00/,:bug: Work around solver features not present in software solvers
Assembly,lanl/qmasm,4fe87a5039eaa3c350d5ecf08f82886c19815cc0,2018-02-26T00:39:41Z,af27f78726e6dc160a4610928824b4a3538db47a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/2570435bacfa873b1a92a301b43314a99c9173bb/,2019-02-19 19:50:34-07:00/2020-06-03 14:20:44-06:00/2019-02-06 23:56:31-07:00/,Support if...then...else...endif expressions in !assert directives
Assembly,lanl/qmasm,acaf3e36850aacb70acf4b4bb4c0a4ed5ae0b2c6,2016-06-28T01:01:42Z,c629678e6dff4358edcb00e050dc4d412b3847ef/,2016-06-27 19:45:18-06:00/,Move file-parsing functions into their own file
Assembly,lanl/qmasm,f6e8c9df3949c68f9d57622f0feb8fc336f6d44f,2017-08-17T19:19:31Z,600754685e6b1eb1b460fd5ebabe4b03454b94a0/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-08-31 10:12:04-04:00/2020-06-03 14:20:44-06:00/,"Improved the formatting of the list of submitted problem IDs

Columns now grow wide enough to hold the widest number in the column.
This looks nicer when requesting huge numbers of samples."
Assembly,lanl/qmasm,091c10d6ae1b500766f63fd23de7423fbcda9664,2019-03-27T22:48:41Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/eec86859c92fb7eb0dbe8a715a735d597ac42e84/,2020-06-03 14:20:44-06:00/2019-03-27 17:24:21-07:00/,Add support for `->` to rename symbols
Assembly,lanl/qmasm,9ca2b876ce278af2acae43a09d563df90229163e,2016-11-09T01:05:27Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/329466fdac7d173e95c57130703a9f3a36d20d2d/381bc3c63a14334be278befc50c7951b713b690c/,2020-06-03 14:20:44-06:00/2017-05-04 11:32:01-06:00/2016-12-23 18:36:00-07:00/,Sort variables in MiniZinc output
Assembly,lanl/qmasm,558eda351a2f8a8fb34c228b011247cafbceb8c5,2019-01-28T03:15:04Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Support ""!let <symbol> := <symbol>"""
Assembly,lanl/qmasm,ee542375ae3544d0837033ef3a489b146ee9ce21,2017-02-23T16:23:27Z,bb9fa86838726ff018c541884988c96b2dfe6892/e4b54f8d91e9324b575ac008a7e519e45a64d8cd/398236e7ba67893dc1eb2bdc0750057f3ea11e24/,2017-05-29 23:12:55-06:00/2017-05-03 22:58:13-06:00/2017-05-03 23:58:49-06:00/,Write MiniZinc output before embedding
Assembly,lanl/qmasm,2359ad7160e009d5c629db88ecd2b1205f60270a,2017-05-24T15:34:01Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Report the number of active qubits and active couplers
Assembly,lanl/qmasm,bcb88e81d7bc275bfb3f3caf6c73ff90a3c7ca1a,2016-12-24T00:45:37Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/7f562550b874e5dd77b5352fd8192d4dd5e7fc91/61ff7c060d05883b316b5f000a58716be9010fd0/a64f15726c638eaf128e673aa2e6aa17f0d6d6c5/bb9fa86838726ff018c541884988c96b2dfe6892/73ef40cda3c70a25ebe1361f40849e728c315afc/e122b04780afb9dce9757d2b8f80218861aec214/9e5be93dcb0b6940267d441fc666d17fc9ac5cb3/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2020-06-03 14:20:44-06:00/2017-05-06 07:21:05-06:00/2018-02-23 18:32:19-07:00/2017-08-23 16:19:36-06:00/2017-05-29 23:12:55-06:00/2017-05-04 22:26:44-06:00/2019-10-09 15:36:20-06:00/2018-06-20 00:21:31-06:00/2017-05-04 16:14:29-06:00/,qmasm-qbsolv wrapper for qbsolv
Assembly,lanl/qmasm,41d96133e11b7d327fcbb815f6a14925dd729689,2019-01-08T06:05:49Z,49ea06cf83a87cc16de43854eadfde312b9f3f3d/9a4e8d8908533314c461ad0a2bf87a689dd5f90e/734c4a4b6675b523c99d898595b112898f146500/67d69f7a5625e606a5da7e45b2505181fcef3a13/f6aac7ca9b999660cf41f554f039201add21a347/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-01-08 23:58:42-07:00/2019-01-27 20:05:52-07:00/2019-01-10 23:29:26-07:00/2019-01-12 16:30:01-07:00/2019-01-19 23:25:03-07:00/2020-06-03 14:20:44-06:00/,"Parse, but don't yet process, ""!let"" directives"
Assembly,lanl/qmasm,d2a8853c30afa37214559fa9d2603ced237184bb,2017-01-24T20:25:13Z,bfe3c25cf817d1d4165828d27001deb1ed707804/242cd540fa8d0bce0ba77e2c9582682dc5990d38/,2017-01-25 10:14:04-07:00/2017-01-25 14:55:08-07:00/,"Support for !begin_replace_sym...!end_replace_sym

This revision enables programs to perform regular-expression
search-and-replace operations on symbol names _after_ macro expansion."
Assembly,lanl/qmasm,623985cbda433ac3c7da7209289b8e87be084c7f,2020-07-22T22:12:13Z,64810737abc9d42665d8106cd7d227337f7bba54/,2020-07-22 18:49:06-06:00/,Merge solver properties recursively from all child solvers
Assembly,lanl/qmasm,e47c19dba70b88cec54276cd1c4a325d42fb7714,2016-12-14T07:21:40Z,d713dab380bc7d8ca14bf9db4172670b0f32c589/3b2785a022967fde1afe2b3d803acee4ae64f6b4/5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/fa910926a75a54cadae952f34f386fbb3e3ebeda/433720570fe34d49f9e656e37f60ca9d40860e8e/b769691bb24afd35e48cf371407f417b78fff1b9/9b09d248c66c6b75c39eba2a534dc9a5e743a726/03821361d95dad2ca4fec6d87dbc945e5ec2723d/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-05-17 11:08:02-06:00/2017-06-01 13:44:27-06:00/2018-05-21 01:07:03-06:00/2016-12-14 00:44:24-07:00/2017-07-02 18:39:35-06:00/2017-07-02 19:34:36-06:00/2018-04-23 00:21:06-06:00/2017-03-17 16:28:09-06:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,Specify spin reversals with --spin-revs
Assembly,lanl/qmasm,5c79ec1f5919327b626158de7210a96f71f452ca,2020-03-13T00:17:29Z,ba08023f199021f0ce0745c0b992df931f86cef9/6125bf648f2dc68da2b3a88407d4e848d76b5ad4/70691a80494d60ba098b9f20c0a4ae1bf8999af9/,2020-05-19 11:51:33-06:00/2020-07-30 15:17:06-06:00/2020-05-19 18:38:59-06:00/,Begin coding post-embedding file output
Assembly,lanl/qmasm,24f79616fd41156ee72c56d0e646f4e74ea4df67,2018-02-25T23:15:19Z,af27f78726e6dc160a4610928824b4a3538db47a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/8069e3fff1d9f014d3b16d3ed274ff5fbe707a72/,2019-02-19 19:50:34-07:00/2020-06-03 14:20:44-06:00/2019-02-20 21:42:58-07:00/,Support logical negation (!)
Assembly,lanl/qmasm,ebf6d801342478bfe6073de3db2ff998b9e860f2,2019-01-21T02:06:49Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct the handling of the final loop value being unreachable
Assembly,lanl/qmasm,6c93bd8a90db0cb8091113681fd473d049ba86c7,2019-05-10T22:53:53Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Connect to the solver before aborting for lack of work to do

This change lets `qmasm -v /dev/null` serve as a convenient mechanism
for querying solver properties."
Assembly,lanl/qmasm,dba5af14bba79c5f2bc077bce2d79362cc601d27,2019-01-27T05:36:30Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Correct the ""no progression"" error invocation"
Assembly,lanl/qmasm,67d69f7a5625e606a5da7e45b2505181fcef3a13,2019-01-12T23:30:01Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/00733c98500c619e1d840fcbe07214710c02cba6/c3acc256e9ee8349330cce11a1ddccb4352da799/,2020-06-03 14:20:44-06:00/2019-01-13 23:30:56-07:00/2019-01-19 22:33:56-07:00/,Introduce parse_file_contents to enable random access of file contents
Assembly,lanl/qmasm,7cdbf54d1f358d1023a4505dd1b1bbbea1259c20,2019-02-09T07:27:26Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Let Python cast implicitly between ints and bools
Assembly,lanl/qmasm,1994378b8589ba353f30ad25c6008fab8f573d45,2018-03-14T22:48:14Z,587186ee496569df00b5e0731ce4954c53cbad6e/e55bc405a3f90b35c5a44b5ae945686a04f2f866/84dcbd4975ebce8ff31cbc8aac49d9f630d53c8b/,2019-02-23 01:14:25-07:00/2020-06-03 14:20:44-06:00/2018-03-14 17:14:03-06:00/,Encapsulate qmasm.sym2num and qmasm.next_sym_num into a single object
Assembly,lanl/qmasm,36fc8ef56dbcd1602df1bd38e60021340d58a750,2019-12-19T01:12:30Z,923ce5bedb40e74812c7546168865233f4cc4862/39eb40836f255d18a205c69c3ef5b5dc40d8e998/,2019-12-19 18:15:52-07:00/2020-06-09 18:25:05-06:00/,Compute a strength for user-defined chains
Assembly,lanl/qmasm,a926de9c883cf1b8ce079e361735b8f3823e7a25,2017-05-31T00:50:38Z,e12ba75f135bbc971b371f74c7725ea6f43e21cd/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-18 11:58:46-07:00/2020-06-03 14:20:44-06:00/,:bug: Don't crash if a coupler connects an optimized-away qubit
Assembly,lanl/qmasm,ccfd87643c15352ec30e53e067f344dc15134230,2020-05-28T22:19:26Z,34996cb3bfec9dec0414dce973d820c60af5eb64/6b0527c8a1a601c5af5f4832bad932b5957fb524/,2020-05-29 14:54:52-06:00/2020-05-29 15:27:58-06:00/,Report statistics of solution energies
Assembly,lanl/qmasm,cbda313b0e3fff71e351f418d9a263968bab3776,2020-06-10T00:21:04Z,5c5ed432a66c8db8cbce186b02eeac12243f1b7b/,2020-06-09 19:28:53-06:00/,"Introduce a ""!bqm_type"" directive"
Assembly,lanl/qmasm,dd5f3842f532e2415db32fdf85db6990d8ab1414,2019-02-09T18:19:23Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Replace ""<>"" with ""/="" in assertions for expressing ""not equal to""

It is now easier to remember that ""/="" is used both for ""not equal to""
and for anti-chains, just like ""="" is used both for ""equal to"" and for
regular chains."
Assembly,lanl/qmasm,513b7e3d2f34fd49c20d4beb38b105e3cdad83b1,2019-01-28T07:22:22Z,e122b04780afb9dce9757d2b8f80218861aec214/,2019-10-09 15:36:20-06:00/,Increase the version number from 2.0 to 3.0 in preparation for a release
Assembly,lanl/qmasm,6bec5ac217b9170c165e38882847f78e9e78b05a,2016-08-19T17:17:57Z,c623159aafd8670f2e7ad91ec9ad9aa9a3f70392/d46b0e2204d2114a2cb054f62f88764c85eef12a/b64bb9384e62da2be1dd929b3b2414e1b509a0a0/e55bc405a3f90b35c5a44b5ae945686a04f2f866/cd49d2469e7dc74af47fe890e10f0860ece672c5/,2017-08-24 18:43:11-06:00/2017-01-31 19:28:22-05:00/2016-11-03 09:26:28-04:00/2020-06-03 14:20:44-06:00/2016-11-02 20:34:01-04:00/,Made output.py more consistent w.r.t. QUBO vs. Ising
Assembly,lanl/qmasm,b02225fdb65dae449064760baef394fe34e77a08,2019-06-10T22:36:49Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Update querying of maximum run duration

This information is now provided by SAPI as
`problem_run_duration_range` instead of `max_run_duration`."
Assembly,lanl/qmasm,0731aa59b448f63a8f8d4c97dd7f2c25212e6bb9,2017-01-30T16:55:59Z,076d15687fc97b3864650c32a81834303640b11e/5012287e813adaa40c8707708b05dab73f850829/dbc089dac73571c373a2a78de8605a03596b8651/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-02-23 18:46:14-07:00/2017-02-01 09:51:35-05:00/2017-01-31 11:40:57-05:00/2020-06-03 14:20:44-06:00/,"Use an embedding cache

The QMASMCACHE environment variable names a directory in which to
save/restore embeddings."
Assembly,lanl/qmasm,d4501382a04c94a010ef879bba08738263c29109,2020-06-11T23:37:28Z,6dc07136bc3a7b84b9d69e9980c474fd931bea90/60c0bf91399573416c1acf0d87253c36a603c53b/5b35930a78f19b78d67cbb96e223650ebfb823a2/,2020-06-12 11:14:18-06:00/2020-07-21 18:37:25-06:00/2020-07-23 17:00:29-06:00/,"Add the ability to wrap composites around samplers

Currently, only the VirtualGraphComposite is supported."
Assembly,lanl/qmasm,cc7891bd8d3cda58f6ec63d3f2dcf555632467c2,2018-05-29T12:55:08Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Output a symbolic energy function

N.B.  This is shown only at `-v -v` verbosity."
Assembly,lanl/qmasm,0592f762a5e31c6c51c46b1d639ab3e0e5e0f4f4,2018-06-21T05:32:06Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct error handling when running without D-Wave proprietary files
Assembly,lanl/qmasm,e91b353e47aabcda8dec91d70d2d789f1278aeee,2016-08-19T23:32:17Z,3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-05-04 16:14:29-06:00/,Doubled the default chain strength
Assembly,lanl/qmasm,793104570c745f0b8ad7f1df1feed26b3e333a1c,2019-01-13T00:51:04Z,a59280e93d1442add5a48b2ebfb4b13de6d34843/1dc06566d14f1110c4b59cd17169274f8583151f/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-01-12 17:58:51-07:00/2019-01-27 17:14:26-07:00/2020-06-03 14:20:44-06:00/,Move is_float from top level to a method of class FileParser
Assembly,lanl/qmasm,d0b9d75cff4fac9da613163c1c14d9837c673405,2019-12-20T18:28:36Z,06676e9fc7ea8a1646be68a2e1caa3207741d546/41f134f63042973693e247858a9146c64c68129b/68d839a70523239b501b2fee3e22b16041167d12/f4183367a8fdf74728dd17a0897a7d1792725ce0/7e5e67d518fcb4df62a5274b65b8948297350654/74d4afdc36f4f869601948abc7baf5a60b029fdd/75286a79e6963805eb4fb1a2d1ded23b837eb486/,2019-12-20 11:35:25-07:00/2019-12-23 11:32:31-07:00/2020-07-21 14:08:53-06:00/2020-06-01 16:41:37-06:00/2020-05-21 15:14:56-06:00/2020-07-20 15:49:13-06:00/2019-12-20 14:23:38-07:00/,Improve error handling
Assembly,lanl/qmasm,00da1df5a6deb05e15e9ab13dc0884780ab3a85d,2018-06-20T06:07:33Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Pass all command-line arguments to process_classical

Previously, a particular six command-line arguments were passed to
process_classical.  By replacing those six with one, the new approach
is less unwieldy."
Assembly,lanl/qmasm,e1811a181eab7f46f498a0bc735a5e756da8e4c1,2017-05-28T14:40:25Z,bb9fa86838726ff018c541884988c96b2dfe6892/751e5e7d116c243391b3f02b2f717c63d59051be/,2017-05-29 23:12:55-06:00/2020-06-03 17:30:21-06:00/,"Removed continuous-integration tests of --topology-file

I just realized that without access to D-Wave's SAPI library, the
--topology-file option has no effect."
Assembly,lanl/qmasm,d97af6fc851d4af1d4991d6bad52361c321aa025,2016-12-13T04:44:49Z,bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/329466fdac7d173e95c57130703a9f3a36d20d2d/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/2017-05-04 11:32:01-06:00/2017-05-04 16:14:29-06:00/,"Optimized performance of generated MiniZinc models

With advice and help from @ccoffrin, rewrote QMASM's MiniZinc output
to work with MIP and CP solvers, which are highly optimized for {0, 1}
variables."
Assembly,lanl/qmasm,82873c9ba36f180f02b4be78c0e332e3272b73c2,2016-11-09T00:06:46Z,329466fdac7d173e95c57130703a9f3a36d20d2d/9ca2b876ce278af2acae43a09d563df90229163e/398236e7ba67893dc1eb2bdc0750057f3ea11e24/d97af6fc851d4af1d4991d6bad52361c321aa025/3d2a8d7aedb863b2bfbe5e204af117307faeaecb/381bc3c63a14334be278befc50c7951b713b690c/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/1e78ded97d9d1971a1bf8b909c006cf24983922b/,2017-05-04 11:32:01-06:00/2016-11-08 18:05:27-07:00/2017-05-03 23:58:49-06:00/2016-12-12 21:44:49-07:00/2016-12-02 18:54:49-07:00/2016-12-23 18:36:00-07:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/2016-11-11 16:13:12-07:00/,Add support for MiniZinc output
Assembly,lanl/qmasm,7f02bee4b80e8e19d3dce256b86b77c1c8e4105e,2019-02-18T07:07:48Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Work around variables lost by SAPI's fix_variables

In rare cases, fix_variables can lose variables, meaning that a
variable that appears in a given input QUBO may appear in neither the
new_Q (retained) nor fixed_variables (removed) return values.  The
following QMASM code demonstrates the problem:

```
q0  1
q1  1
q2 -1
q0 q1 1
q1 q2 1

A 2
B 2
C 2
A B 1
B C 1
C A 1

!assert q0 + q1 > 0
```"
Assembly,lanl/qmasm,52a4d8a2e4201f0ab8f4c8bc909aac9764dd1a8c,2018-02-23T20:59:26Z,cf55b4a60330acf6d101c230a99ccadb78f7ef74/af27f78726e6dc160a4610928824b4a3538db47a/37eebbcdade93338d11e398c661baa9d08a81fae/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2018-03-14 18:12:42-06:00/2019-02-19 19:50:34-07:00/2018-02-23 17:24:49-07:00/2020-06-03 14:20:44-06:00/,"Support bit shifts (""<<"" and "">>"") in !assert directives"
Assembly,lanl/qmasm,b14e920bd921322073a37aeedb16d6bd45020d00,2020-01-07T22:43:17Z,975bb6eb8da49418924d0210e88c36a2c7dbbd29/803d301abedae259bd34466a669e0f76944b750b/16d501d4be17852beaabfb1cb06c9c62fa453737/83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/1bc122180830027ea8987b70a5ef1e5666246857/,2020-01-07 17:22:15-07:00/2020-03-12 16:08:03-06:00/2020-01-07 16:50:04-07:00/2020-05-29 18:02:35-06:00/2020-05-19 16:10:30-06:00/,"Abort if disconnected (implying unembedded) variables exist

Debug code still remains in this commit."
Assembly,lanl/qmasm,b32105a75c991bf33ffea380cc7b54fd6649b35e,2016-06-29T01:41:37Z,71a0406842266177ee0b5de9f091f00ce488bbf4/38f13a56162a7555fb2908d415d50a09c6f0c2b7/d2a8853c30afa37214559fa9d2603ced237184bb/b93df3340243745ae4db13a038ddf3eb238a0129/1dc06566d14f1110c4b59cd17169274f8583151f/f54e91d8eec83b6fe33fc1717d21d93e20612dca/8069e3fff1d9f014d3b16d3ed274ff5fbe707a72/a59280e93d1442add5a48b2ebfb4b13de6d34843/734c4a4b6675b523c99d898595b112898f146500/b8ecbd653983237498f08a44fa4e718b1859655a/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/d1f1f7d382c2da418e3a88f29cdc5f1c7e5b3724/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/b11d0f7b3c472f4eaa607c58f5e90f2407cf9ca2/4bbf247a59b31bf1e225733bcefdd2a3fe131f9f/8c395558f2829d29d2785b0a85c1c467f0a894d9/793104570c745f0b8ad7f1df1feed26b3e333a1c/3c767be11f0f04be7f097d520d9a770a047b3cd9/d1a39fd7bbe7a4b6e579c0b7637c5f9c2e120ab7/c896937b74bac51f1508b3d693c4e333de375267/1326f5f92b772152ab4b8f7093e8ccd48d496cdd/1994378b8589ba353f30ad25c6008fab8f573d45/bfe3c25cf817d1d4165828d27001deb1ed707804/3717a7991f448a4fe0876837efe89bdbada9a02a/,2019-01-20 12:56:07-07:00/2019-02-10 13:56:06-07:00/2017-01-24 13:25:13-07:00/2019-02-20 22:21:34-07:00/2019-01-27 17:14:26-07:00/2016-08-18 10:33:36-06:00/2019-02-20 21:42:58-07:00/2019-01-12 17:58:51-07:00/2019-01-10 23:29:26-07:00/2019-01-21 00:55:07-07:00/2016-10-26 16:56:24-06:00/2016-07-08 10:46:18-06:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/2016-07-11 11:39:12-06:00/2016-10-19 16:52:53-06:00/2017-01-25 18:56:21-07:00/2019-01-12 17:51:04-07:00/2017-01-25 18:46:42-07:00/2017-01-26 18:56:44-07:00/2016-08-16 23:40:11-06:00/2019-01-12 17:54:35-07:00/2018-03-14 16:48:14-06:00/2017-01-25 10:14:04-07:00/2017-06-20 18:14:39-06:00/,Moved file-parsing functions into their own file
Assembly,lanl/qmasm,882f6e819325488735a4f698d0b1c2b133bb867f,2019-01-28T07:17:04Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Make LoopIterator compatible with both Python 2 and Python 3
Assembly,lanl/qmasm,8200f89cdc6e5f7abc061824bbd07f5ea9eeb466,2016-10-28T20:42:55Z,1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2018-02-22 18:38:48-07:00/2017-05-04 16:14:29-06:00/,"Output the theoretical minimum energy

When maximum verbosity is enables, the energy histogram now
additionally lists the theoretical minimum energy (the sum of absolute
values of all weights and strengths)."
Assembly,lanl/qmasm,1bc122180830027ea8987b70a5ef1e5666246857,2020-05-19T22:10:30Z,70691a80494d60ba098b9f20c0a4ae1bf8999af9/6fdc8c51b614dcdc989875a97344e89b0b722729/,2020-05-19 18:38:59-06:00/2020-06-12 12:54:46-06:00/,:bug: Correct the Qubist output to use the physical problem
Assembly,lanl/qmasm,f7efe15255c0ea1984e2ac258a9deb137075e245,2016-10-17T22:10:29Z,9bb58a3d91a0467a5931d884b31b9dc30204eb18/6a38716fe0cc8646c37c3d9bc1454a22e75419a8/4bbf247a59b31bf1e225733bcefdd2a3fe131f9f/9b09d248c66c6b75c39eba2a534dc9a5e743a726/03821361d95dad2ca4fec6d87dbc945e5ec2723d/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/33061dfc20f9cffb0d1e05ed904fb2cfcecd6bc8/,2017-03-20 14:43:45-06:00/2016-10-28 13:23:11-06:00/2016-10-19 16:52:53-06:00/2018-04-23 00:21:06-06:00/2017-03-17 16:28:09-06:00/2016-10-26 16:56:24-06:00/2017-03-25 00:00:41-06:00/,Tally the number of occurrences of each solution
Assembly,lanl/qmasm,1094b13290d52211bf5c8236fc763704312d3bb0,2016-10-27T00:46:18Z,f9d6ab9af7e8de11aaf0ae185d5cc253578d0f03/,2016-12-06 18:45:39-07:00/,Reference the HPEC 2016 publication
Assembly,lanl/qmasm,a7744cd958ce55f7b87bc3669c6baf9c67728639,2016-12-23T18:17:04Z,d178793d6704af43e4d62a7bf76f1cf8130e6e17/,2019-01-27 20:19:11-07:00/,"Replaced the 5x5 maze with a 6x6 maze

Defining a room with 5 qubits instead of 6 made it possible to embed
the larger maze in the D-Wave 2X's Chimera graph."
Assembly,lanl/qmasm,47535ce13412a5bdc472a70f1ae94aa45c07e76e,2018-06-21T17:25:53Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Initialize hs even for variables named only by couplers

This revision addresses the `-q` bug reported in issue #5."
Assembly,lanl/qmasm,e12ba75f135bbc971b371f74c7725ea6f43e21cd,2019-02-18T18:58:46Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Don't crash if given an isolated, circular chain

The following code no longer crashes QMASM:
```
A = B
B = C
C = A
```"
Assembly,lanl/qmasm,60c0bf91399573416c1acf0d87253c36a603c53b,2020-07-22T00:37:25Z,aee335544ba1b6a1f6a0834a2ca54acee9f4051b/64810737abc9d42665d8106cd7d227337f7bba54/623985cbda433ac3c7da7209289b8e87be084c7f/5b35930a78f19b78d67cbb96e223650ebfb823a2/,2020-07-23 17:08:41-06:00/2020-07-22 18:49:06-06:00/2020-07-22 16:12:13-06:00/2020-07-23 17:00:29-06:00/,"Replace the --qbsolv option with --solver=qbsolv,<solver>

This change makes qbsolv more consistent with kerberos."
Assembly,lanl/qmasm,398236e7ba67893dc1eb2bdc0750057f3ea11e24,2017-05-04T05:58:49Z,ade1e25b4315125ddaaf5a47d7a93b76bc41558a/329466fdac7d173e95c57130703a9f3a36d20d2d/35e9356b8140ddb99d9ae6b296f902a8c5329487/41f5348bb1c9782f334906026f4af48d7574779d/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-05-04 00:20:43-06:00/2017-05-04 11:32:01-06:00/2017-05-04 12:58:51-06:00/2017-05-31 00:19:08-06:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/,Allow --run to be used with --format=minizinc
Assembly,lanl/qmasm,190f3ad989a40b99801dfc4d432dc489b82288e5,2017-05-23T23:57:06Z,d550a0bf58f3ad8d18feeb321bed664b042acd23/,2017-05-24 16:05:32-06:00/,:bug: Output .qubo files always with i < j as per the specification
Assembly,lanl/qmasm,da23f0fea9ed87eaebd318916f2fe7cc969f77d0,2017-05-29T05:13:25Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Made --postproc accept ""none"" instead of """" for no postprocessing"
Assembly,lanl/qmasm,db385a61c57f32573096f0d42d6a90e1e15e8d98,2017-03-01T23:20:53Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/b4387aca4b0807154114f31eba18494e174d5d14/,2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/2017-03-20 16:13:33-06:00/,"Report embeddability metrics in verbose output

Thanks to Carleton Coffrin (@ccoffrin) for proposing a simple metric
for ""can definitely not be embedded""."
Assembly,lanl/qmasm,998e11b16d8de22e255b77195d2cd7654517bf73,2018-05-26T01:11:58Z,a023c5a3b3160eb54512d08da26fddefcf95c9ab/,2019-02-14 00:09:47-07:00/,:bug: Correct the conversion of (anti-)chains to aliases
Assembly,lanl/qmasm,729dafcd6564d4a4ee2ca74dba06690186e533a4,2020-06-09T21:35:41Z,5c5ed432a66c8db8cbce186b02eeac12243f1b7b/0d00f3b9dfae704f659a12453aaa0243b0b42497/003652cb7c1ca0bb5a0c398360b7c76f75490d30/,2020-06-09 19:28:53-06:00/2020-06-09 19:21:12-06:00/2020-06-09 19:14:00-06:00/,Add placeholders to eventually support mixed Ising/QUBO problems
Assembly,lanl/qmasm,eacb7728db6652f58fa716e22d157e1ad29b6d86,2016-07-08T16:33:42Z,ce3ca616f6c3a87cc5b99afef71031588b912368/d46b0e2204d2114a2cb054f62f88764c85eef12a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/d1f1f7d382c2da418e3a88f29cdc5f1c7e5b3724/c896937b74bac51f1508b3d693c4e333de375267/521a3e5b7fd9723746eca322ad94ba38e5eda78b/6bec5ac217b9170c165e38882847f78e9e78b05a/bb9fa86838726ff018c541884988c96b2dfe6892/c47f7bddeb19c536b12e7ee5424cc052f7575b15/108e31e7578c1d4d8aef686ac6dfe091c7d3195a/d46a78e6ccacf5696fe6bf87f3e25c4e18bff809/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/3df14bc70e791f86aea778a54d1c9893ec51c5ec/7f70d8fda1ae60806f2fdb36cd5d42c7c4d49fbb/0b4d17de763b9101219cca4f70a44420fa539b3f/fb82c362f10c319d952c00fadb21341e3ba8a367/cd49d2469e7dc74af47fe890e10f0860ece672c5/,2016-08-19 17:14:43-06:00/2017-01-31 19:28:22-05:00/2020-06-03 14:20:44-06:00/2016-07-08 10:46:18-06:00/2016-08-16 23:40:11-06:00/2017-08-31 11:48:04-04:00/2016-08-19 11:17:57-06:00/2017-05-29 23:12:55-06:00/2017-05-31 08:42:29-06:00/2016-10-18 15:32:40-06:00/2016-09-27 17:56:14-06:00/2016-10-26 16:56:24-06:00/2017-05-04 16:14:29-06:00/2016-08-17 00:04:46-06:00/2016-10-20 17:08:43-06:00/2017-08-31 13:44:52-04:00/2016-11-02 20:34:01-04:00/,Separate file for output routines
Assembly,lanl/qmasm,734c4a4b6675b523c99d898595b112898f146500,2019-01-11T06:29:26Z,9a4e8d8908533314c461ad0a2bf87a689dd5f90e/1dc06566d14f1110c4b59cd17169274f8583151f/b8ecbd653983237498f08a44fa4e718b1859655a/f6aac7ca9b999660cf41f554f039201add21a347/e55bc405a3f90b35c5a44b5ae945686a04f2f866/73695257c7b4be21c22ed94405a0bf8301877008/,2019-01-27 20:05:52-07:00/2019-01-27 17:14:26-07:00/2019-01-21 00:55:07-07:00/2019-01-19 23:25:03-07:00/2020-06-03 14:20:44-06:00/2019-01-21 00:36:06-07:00/,Substitute let-bound variables in symbol names
Assembly,lanl/qmasm,7b034c50b06bde875ff9401b9dc1183f1af91a6a,2018-02-23T18:24:13Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2018-04-23 00:21:06-06:00/2020-06-03 14:20:44-06:00/,Output assertions only when given --all-solns and/or -v -v
Assembly,lanl/qmasm,10f51141ae3f8742f5069a0c08280d8bcba40586,2017-08-16T17:37:14Z,600754685e6b1eb1b460fd5ebabe4b03454b94a0/f6e8c9df3949c68f9d57622f0feb8fc336f6d44f/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-08-31 10:12:04-04:00/2017-08-17 13:19:31-06:00/2020-06-03 14:20:44-06:00/,"At increased verbosity, give progress updates for QMI completion"
Assembly,lanl/qmasm,331bba068ce90f402a7af687bda0c00d3cef9a22,2016-08-19T23:37:39Z,5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/,2018-05-21 01:07:03-06:00/,"Halved the default pin strength

Pin strength now defaults to half the chain strength, as the inline
comments claim."
Assembly,lanl/qmasm,c96e3eb69a35212b0a894bd427a7490ea274d5a2,2016-12-16T00:34:17Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/50851d9fd958314b3b7c71d9366a649bc0b9db09/9beb82d19d713991b5ffca2bb60fa16f4b82b26d/fa65a9b489faa2038dea364b5af6a5d144d7e710/,2020-06-03 14:20:44-06:00/2016-12-20 11:11:04-07:00/2016-12-23 14:52:20-07:00/2019-06-17 17:22:03-06:00/,qb2qmasm script for converting Qubist to QMASM
Assembly,lanl/qmasm,5ee86fa800a398f40b7bb1aa92626fe3351851eb,2019-12-20T18:10:09Z,06676e9fc7ea8a1646be68a2e1caa3207741d546/5c79ec1f5919327b626158de7210a96f71f452ca/f4183367a8fdf74728dd17a0897a7d1792725ce0/5e6379cb72d249a86c71049b0648f17f771cdd16/7e5e67d518fcb4df62a5274b65b8948297350654/74d4afdc36f4f869601948abc7baf5a60b029fdd/d0b9d75cff4fac9da613163c1c14d9837c673405/,2019-12-20 11:35:25-07:00/2020-03-12 18:17:29-06:00/2020-06-01 16:41:37-06:00/2020-03-11 16:04:53-06:00/2020-05-21 15:14:56-06:00/2020-07-20 15:49:13-06:00/2019-12-20 11:28:36-07:00/,Write initial code for connecting to a solver or using a software sampler
Assembly,lanl/qmasm,f7d1fb6400582f4c2fb9510c05527ff4091cd041,2020-01-24T22:55:35Z,f981684a5d995c3a235226b5579d094a5c2b3fc4/5e6379cb72d249a86c71049b0648f17f771cdd16/83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/6fdc8c51b614dcdc989875a97344e89b0b722729/6b65277f31e7b772c122a148da8cf8047391a74f/,2020-03-12 16:48:10-06:00/2020-03-11 16:04:53-06:00/2020-05-29 18:02:35-06:00/2020-06-12 12:54:46-06:00/2020-06-12 13:23:21-06:00/,Report the embedding even when verbosity is disabled
Assembly,lanl/qmasm,8c395558f2829d29d2785b0a85c1c467f0a894d9,2017-01-26T01:56:21Z,71a0406842266177ee0b5de9f091f00ce488bbf4/d1a39fd7bbe7a4b6e579c0b7637c5f9c2e120ab7/1dc06566d14f1110c4b59cd17169274f8583151f/734c4a4b6675b523c99d898595b112898f146500/c3acc256e9ee8349330cce11a1ddccb4352da799/67d69f7a5625e606a5da7e45b2505181fcef3a13/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2019-01-20 12:56:07-07:00/2017-01-26 18:56:44-07:00/2019-01-27 17:14:26-07:00/2019-01-10 23:29:26-07:00/2019-01-19 22:33:56-07:00/2019-01-12 16:30:01-07:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,"Code cleanup: Moved file-parsing functions into a class

This change eliminates a bunch of global variables."
Assembly,lanl/qmasm,600754685e6b1eb1b460fd5ebabe4b03454b94a0,2017-08-31T14:12:04Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Don't crash with `-v -v` when used with a D-Wave simulator

Thanks to Anastasiia Butko for reporting the bug."
Assembly,lanl/qmasm,5dc38c8bfc45cc4a00de3c9574f79b31a2f3ebf8,2019-01-28T06:41:37Z,751e5e7d116c243391b3f02b2f717c63d59051be/,2020-06-03 17:30:21-06:00/,:bug: Remove CI dependence on D-Wave's proprietary SAPI library
Assembly,lanl/qmasm,9beb82d19d713991b5ffca2bb60fa16f4b82b26d,2016-12-23T21:52:20Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/6fb566264e918e1067d1d48f119cadc60fda9728/,2020-06-03 14:20:44-06:00/2016-12-23 15:04:24-07:00/,New --renumber-from argument to qb2qmasm
Assembly,lanl/qmasm,9b2449243d2b488c8a0363385df68e1f6f65c7e4,2018-05-25T07:17:34Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Don't access out-of-bounds spins caused by elided variables
Assembly,lanl/qmasm,0c96642fe5709f2576416bc964e4a0e93bdf8dee,2019-02-24T07:42:44Z,6c93bd8a90db0cb8091113681fd473d049ba86c7/,2019-05-10 16:53:53-06:00/,Distinguish --run from no --run when the program is optimized to emptiness
Assembly,lanl/qmasm,39eb40836f255d18a205c69c3ef5b5dc40d8e998,2020-06-10T00:25:05Z,a327111cf516594ddaa69a2e62417428a2274722/,2020-07-20 23:54:09-06:00/,Always produce an Ising-model BQM
Assembly,lanl/qmasm,108e31e7578c1d4d8aef686ac6dfe091c7d3195a,2016-10-18T21:32:40Z,6c93bd8a90db0cb8091113681fd473d049ba86c7/1994378b8589ba353f30ad25c6008fab8f573d45/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2019-05-10 16:53:53-06:00/2018-03-14 16:48:14-06:00/2016-10-26 16:56:24-06:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,"Fail when given disconnected variables

Typically, a disconnected variable (i.e., no or only zero-strength
connections to other variables) is a programmer error.  In any case,
it usually causes the embedder to fail, especially after
optimizations.  Issuing a message like ""Disconnected variables
encountered"" followed by a list of variable names is a lot more
user-friendly than blowing up with a mysterious ""Failed to embed the
problem in the solver (h has more variables than embeddings)"" error
later in the execution."
Assembly,lanl/qmasm,7fa7d3c2f17d448875ee5b633dc64b3cc7e4c9f3,2020-05-20T18:04:10Z,6900401ad01e4474d2db7a9bdc9a6955f31cdc3f/,2020-06-02 14:33:00-06:00/,Scale coefficients to the hardware's range when outputting Qubist code
Assembly,lanl/qmasm,5e6379cb72d249a86c71049b0648f17f771cdd16,2020-03-11T22:04:53Z,803d301abedae259bd34466a669e0f76944b750b/f981684a5d995c3a235226b5579d094a5c2b3fc4/c1197af6140efbee621aaab43c3b09ff0988d658/1bc122180830027ea8987b70a5ef1e5666246857/6fdc8c51b614dcdc989875a97344e89b0b722729/,2020-03-12 16:08:03-06:00/2020-03-12 16:48:10-06:00/2020-07-01 17:12:25-06:00/2020-05-19 16:10:30-06:00/2020-06-12 12:54:46-06:00/,":bug: Correct the data types involved in embedding

Embedding keys are once again stored as integers instead of strings.

The hardware adjacency is now stored in the format required by
embed_bqm (a map from vertices to neighbors) as opposed to the format
required by minorminer's find_embedding (a list of pairs of vertices).

Additionally, the code now outputs embedding statistics."
Assembly,lanl/qmasm,0c98de5cf8f692eb4516d49bc9c16090cd334cb1,2017-10-10T07:00:18Z,3fea1a48e3675e1cd5b23833f3ee9ae290cfa218/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-10-10 14:39:46-07:00/2020-06-03 14:20:44-06:00/,"Simplified merge_answers

I suspect the previous code was incorrect.  The new code, if not
correct, is at least easier to follow."
Assembly,lanl/qmasm,31be234d5c4804391dfb40dfbbc4ef20e6d6ecb5,2019-02-06T13:57:04Z,c0d5deb7b625809b8b8310e63b4f0f3354a21460/2570435bacfa873b1a92a301b43314a99c9173bb/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-09 00:13:09-07:00/2019-02-06 23:56:31-07:00/2020-06-03 14:20:44-06:00/,"Allow relational sub-expressions to be parenthesized

Previously, only arithmetic sub-expressions could be parenthesized.
Parenthesized relational sub-expressions produced (perhaps
surprisingly) a parse error."
Assembly,lanl/qmasm,06676e9fc7ea8a1646be68a2e1caa3207741d546,2019-12-20T18:35:25Z,41f134f63042973693e247858a9146c64c68129b/,2019-12-23 11:32:31-07:00/,":bug: Replace ""ExactSampler"" with ""ExactSolver"""
Assembly,lanl/qmasm,c7fec3f434ae8d3a09774b4a5b3811492630ebc6,2017-05-04T20:04:13Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Updated the ""no D-Wave libraries"" error message to suggest MiniZinc"
Assembly,lanl/qmasm,f21cc157a6994e7ab172bc30de12038ca808fcce,2016-11-03T13:48:20Z,2822b0570b25004e7c29eb5f1f44855105403803/a22202836fa2f93bd7bb0279feb50039d0bf1c0e/,2016-12-20 18:28:31-07:00/2016-11-03 09:52:23-04:00/,Use array syntax in the sorting-network example
Assembly,lanl/qmasm,fb5df0af32a59ba4bc432bbc2e158c41e7126d97,2016-12-22T00:41:25Z,6b00f179bee4bb3fa3cf635d50b45942250a7504/a7744cd958ce55f7b87bc3669c6baf9c67728639/d178793d6704af43e4d62a7bf76f1cf8130e6e17/681c0e59b9a2ae96ab0ac0d62bcbe899e39d78f7/e10bf68dc5aa3218df4f81f7554c2e838022cbe2/194d47038a57f1d0ede41181cb8f63511580d221/ffa98260f8c7af3aeae9ab8142451e3dda28f602/,2016-12-21 17:54:27-07:00/2016-12-23 11:17:04-07:00/2019-01-27 20:19:11-07:00/2020-05-29 18:38:20-06:00/2017-10-10 12:56:31-07:00/2017-10-11 20:40:26-07:00/2016-12-23 17:59:56-07:00/,"Replaced generate-maze with qmasm-maze and extended functionality

Unlike generate-maze, qmasm-maze can both generate and validate mazes."
Assembly,lanl/qmasm,b61619a6ccbe9ef53f9720dba230706e4fb69c18,2019-10-09T20:28:24Z,545bd3025375142966314848e5e3f24930b6aaef/,2019-10-09 14:45:22-06:00/,"Move existing code into an old/ subdirectory

My plan is to start from scratch and do it right."
Assembly,lanl/qmasm,73695257c7b4be21c22ed94405a0bf8301877008,2019-01-21T07:36:06Z,b8ecbd653983237498f08a44fa4e718b1859655a/1dc06566d14f1110c4b59cd17169274f8583151f/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-01-21 00:55:07-07:00/2019-01-27 17:14:26-07:00/2020-06-03 14:20:44-06:00/,Modify the Environment class to copy its contents only lazily
Assembly,lanl/qmasm,08e80c4b0a4fb469315dbee680670f1dfec66748,2018-05-22T02:36:09Z,ba212962942b26e0f6d8c605c0f369cde4c654b7/998e11b16d8de22e255b77195d2cd7654517bf73/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2018-05-21 23:35:59-06:00/2018-05-25 19:11:58-06:00/2020-06-03 14:20:44-06:00/,Represent (anti-)chains as sets instead of as dicts with dummy values
Assembly,lanl/qmasm,1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47,2018-02-23T01:38:48Z,b93df3340243745ae4db13a038ddf3eb238a0129/deb223e208f6a9ef4e41a70a38c4b192b61743d9/9b09d248c66c6b75c39eba2a534dc9a5e743a726/67d69f7a5625e606a5da7e45b2505181fcef3a13/7b034c50b06bde875ff9401b9dc1183f1af91a6a/52a4d8a2e4201f0ab8f4c8bc909aac9764dd1a8c/b3d1dbb997b1ae57ad5848841479eb07d0c06c1a/734c4a4b6675b523c99d898595b112898f146500/2570435bacfa873b1a92a301b43314a99c9173bb/1b32d037d9ca1fd7b102c855c350d69efedcafcb/31be234d5c4804391dfb40dfbbc4ef20e6d6ecb5/e55bc405a3f90b35c5a44b5ae945686a04f2f866/dd5f3842f532e2415db32fdf85db6990d8ab1414/73695257c7b4be21c22ed94405a0bf8301877008/901b813195b9119adbd978cc4d6141b7c62de3fa/37eebbcdade93338d11e398c661baa9d08a81fae/c3acc256e9ee8349330cce11a1ddccb4352da799/65958016fec974d2ed99bbfa7c981e2780fc2432/cf55b4a60330acf6d101c230a99ccadb78f7ef74/c0d5deb7b625809b8b8310e63b4f0f3354a21460/af27f78726e6dc160a4610928824b4a3538db47a/1994378b8589ba353f30ad25c6008fab8f573d45/24f79616fd41156ee72c56d0e646f4e74ea4df67/adb3a7644b87d1509ddf59da8be454747d782dda/,2019-02-20 22:21:34-07:00/2019-05-03 15:20:41-06:00/2018-04-23 00:21:06-06:00/2019-01-12 16:30:01-07:00/2018-02-23 11:24:13-07:00/2018-02-23 13:59:26-07:00/2019-05-03 16:43:41-06:00/2019-01-10 23:29:26-07:00/2019-02-06 23:56:31-07:00/2018-04-25 23:41:25-06:00/2019-02-06 06:57:04-07:00/2020-06-03 14:20:44-06:00/2019-02-09 11:19:23-07:00/2019-01-21 00:36:06-07:00/2019-01-26 23:54:59-07:00/2018-02-23 17:24:49-07:00/2019-01-19 22:33:56-07:00/2018-02-22 18:43:50-07:00/2018-03-14 18:12:42-06:00/2019-02-09 00:13:09-07:00/2019-02-19 19:50:34-07:00/2018-03-14 16:48:14-06:00/2018-02-25 16:15:19-07:00/2018-04-06 00:00:35-06:00/,Support a new !assert directive
Assembly,lanl/qmasm,7f562550b874e5dd77b5352fd8192d4dd5e7fc91,2017-05-06T13:21:05Z,51723a0315a982fb9a9d72fbcb7d44cfa38f94bf/a64f15726c638eaf128e673aa2e6aa17f0d6d6c5/61ff7c060d05883b316b5f000a58716be9010fd0/,2019-11-13 18:19:42-07:00/2017-08-23 16:19:36-06:00/2018-02-23 18:32:19-07:00/,Adds byte string literals for py2/3 compatibility
Assembly,lanl/qmasm,6b00f179bee4bb3fa3cf635d50b45942250a7504,2016-12-22T00:54:27Z,a7744cd958ce55f7b87bc3669c6baf9c67728639/da23f0fea9ed87eaebd318916f2fe7cc969f77d0/,2016-12-23 11:17:04-07:00/2017-05-28 23:13:25-06:00/,"Abbreviate postprocessing types

To reduce typing tedium, one now specifies --postproc=opt instead of
--postproc=optimization and --postproc=sample instead of
--postproc=sampling."
Assembly,lanl/qmasm,a9b829f53dfe57dc0c3ee6d32588b684d74aedc5,2017-08-22T19:31:35Z,a899787b5c669c97a307e32e425081b7a6a452b4/7f02bee4b80e8e19d3dce256b86b77c1c8e4105e/9b09d248c66c6b75c39eba2a534dc9a5e743a726/1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/21ab0a75b2d81c1ba1a9093d1397feaee6c66cb5/13bc63ed5a7aea0b1e5954b08f8bc2dbb1bf3b1a/1994378b8589ba353f30ad25c6008fab8f573d45/e55bc405a3f90b35c5a44b5ae945686a04f2f866/08e80c4b0a4fb469315dbee680670f1dfec66748/,2017-11-03 11:26:05-06:00/2019-02-18 00:07:48-07:00/2018-04-23 00:21:06-06:00/2018-02-22 18:38:48-07:00/2018-03-14 16:46:24-06:00/2017-08-22 13:44:51-06:00/2018-03-14 16:48:14-06:00/2020-06-03 14:20:44-06:00/2018-05-21 20:36:09-06:00/,"Perform more aggressive qubit-count reduction at -O1

Use SAPI's fix_variables to sometimes substantially cut down on the
number of qubits required."
Assembly,lanl/qmasm,03d4201d7d8b5999ab6b907ed41be2414f88fbfd,2018-05-21T06:33:19Z,5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2018-05-21 01:07:03-06:00/2020-06-03 14:20:44-06:00/,Make scale_weights_strengths a method of Problem
Assembly,lanl/qmasm,74baf4a69d88d803817f2c9e7e51f3f18fea2ba8,2016-06-28T00:20:33Z,d1f1f7d382c2da418e3a88f29cdc5f1c7e5b3724/32819ea0943992bbc87ca842c0d8762e1324a145/037479fe81c97c2e57c96d67c5f3d592147d7260/e55bc405a3f90b35c5a44b5ae945686a04f2f866/8b93525c12d04b24b04b8a75d9efd2d7682c0b6e/,2016-07-08 10:46:18-06:00/2017-01-27 16:34:52-07:00/2016-06-28 14:38:54-06:00/2020-06-03 14:20:44-06:00/2016-06-28 09:10:26-06:00/,Begin moving utility functions into their own file
Assembly,lanl/qmasm,e52703a53474673141555e5352a9a5ff8b529a37,2016-10-19T23:17:32Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Case-insensitive processing of ""TRUE"" and ""FALSE"" in pin statements"
Assembly,lanl/qmasm,f4183367a8fdf74728dd17a0897a7d1792725ce0,2020-06-01T22:41:37Z,0d51c9bdd3a262cd5778dbbca084816c3effa5dc/d4501382a04c94a010ef879bba08738263c29109/60c0bf91399573416c1acf0d87253c36a603c53b/,2020-06-01 18:23:04-06:00/2020-06-11 17:37:28-06:00/2020-07-21 18:37:25-06:00/,Include initial QBSolv support
Assembly,lanl/qmasm,2f53108320fa3cf33f8b80a66908342a6c2a9e9e,2020-06-02T21:16:48Z,f32654fb53a72ec7c1b70e5f98d3cfaf2da0fa62/,2020-07-28 15:30:49-06:00/,"Remove most single-letter command-line options

It was getting too confusing remembering what things like ""-s"" and
""-q"" referred to."
Assembly,lanl/qmasm,b8ecbd653983237498f08a44fa4e718b1859655a,2019-01-21T07:55:07Z,1dc06566d14f1110c4b59cd17169274f8583151f/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-01-27 17:14:26-07:00/2020-06-03 14:20:44-06:00/,"Hoist process_{pin,chain,antichain,process_alias} into class FileParser"
Assembly,lanl/qmasm,f981684a5d995c3a235226b5579d094a5c2b3fc4,2020-03-12T22:48:10Z,1bc122180830027ea8987b70a5ef1e5666246857/0e1eb0fae72fab92d5e4088c5250c0f3779fb2c4/6fdc8c51b614dcdc989875a97344e89b0b722729/,2020-05-19 16:10:30-06:00/2020-06-02 17:26:18-06:00/2020-06-12 12:54:46-06:00/,Don't treat contracted variables as dangling
Assembly,lanl/qmasm,8ef63814275e32edc7d563615f79bb72e0d5daa7,2018-05-09T06:25:37Z,9c5d53e2419b045a53e42dc71881596eb31a3bfe/,2019-03-04 09:23:48-07:00/,"Replace the copyright year with the original copyright year

I was instructed by my employer not to update the copyright year to
the current year but rather retain the year in which copyright was
originally asserted."
Assembly,lanl/qmasm,9e5be93dcb0b6940267d441fc666d17fc9ac5cb3,2018-06-20T06:21:31Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Honor `--values=ints` when run with `-f qbsolv`

This revision addresses the `--values` bug reported in issue #5."
Assembly,lanl/qmasm,8b0e265df8a8f46fd915cabd2e97a3ec9ef9b084,2017-02-10T01:41:39Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Don't crash if `-vv` is specified and `QMASMCACHE` is not set
Assembly,lanl/qmasm,0d51c9bdd3a262cd5778dbbca084816c3effa5dc,2020-06-02T00:23:04Z,aee335544ba1b6a1f6a0834a2ca54acee9f4051b/d4501382a04c94a010ef879bba08738263c29109/60c0bf91399573416c1acf0d87253c36a603c53b/,2020-07-23 17:08:41-06:00/2020-06-11 17:37:28-06:00/2020-07-21 18:37:25-06:00/,Run QBSolv at high verbosity if QMASM is run at verbosity level 2
Assembly,lanl/qmasm,58b7dd4700d2ac1a8d23969f4c42eac1f0827b99,2020-05-22T00:17:43Z,aee335544ba1b6a1f6a0834a2ca54acee9f4051b/ad1a7c1407abe895364252ee3b89cba5a794e6d9/83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/2c197a875543b4d535c80faf3bfc6e81366ad1dd/fad3b9795f1ea9ce99d374d9857eaf70880306ff/,2020-07-23 17:08:41-06:00/2020-05-26 17:39:58-06:00/2020-05-29 18:02:35-06:00/2020-05-26 16:04:15-06:00/2020-05-28 13:55:00-06:00/,Output solver timing information
Assembly,lanl/qmasm,40c48d7621bf86f257bcd73b9a9feaa16e27a3f1,2016-07-08T20:08:29Z,9c5d53e2419b045a53e42dc71881596eb31a3bfe/21109e46382da828d8453c916b2127ec476daea9/c841e1b116a3576df8fce07412c0f5b31ccd8af7/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/5185b86271e7810af028e381c0026c71448956c1/83144a8cbb32ad4a4ada47bcb5de5d3a9aaeb1ee/,2019-03-04 09:23:48-07:00/2020-06-03 18:27:06-06:00/2017-02-03 01:24:10-05:00/2016-10-26 16:56:24-06:00/2016-08-15 09:10:51-06:00/2016-07-08 14:18:04-06:00/,Wrote a README and a LICENSE file
Assembly,lanl/qmasm,661b8b56f1c47d171d557781438d6963b9176fa8,2019-01-28T06:44:45Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct the invocation of --pin
Assembly,lanl/qmasm,bfe3c25cf817d1d4165828d27001deb1ed707804,2017-01-25T17:14:04Z,3c767be11f0f04be7f097d520d9a770a047b3cd9/e55bc405a3f90b35c5a44b5ae945686a04f2f866/242cd540fa8d0bce0ba77e2c9582682dc5990d38/8c395558f2829d29d2785b0a85c1c467f0a894d9/,2017-01-25 18:46:42-07:00/2020-06-03 14:20:44-06:00/2017-01-25 14:55:08-07:00/2017-01-25 18:56:21-07:00/,:bug: Localized filename and lineno to correct line attributions
Assembly,lanl/qmasm,f8e45c95469f8e7f0602b527bcdf07fe01c0e3e7,2016-11-30T00:35:56Z,13bc63ed5a7aea0b1e5954b08f8bc2dbb1bf3b1a/,2017-08-22 13:44:51-06:00/,:bug: Corrected canonicalized file output
Assembly,lanl/qmasm,ebd27c45b283fbc5c7cac142def77721ac4ce5d4,2016-09-29T17:13:43Z,b9a8669fbd48f2fa507d700246b350094be0578b/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-05-28 00:03:07-06:00/2020-06-03 14:20:44-06:00/,Facilitate embedding of problems with the ising-heuristic solver
Assembly,lanl/qmasm,88e2aa3275fe2d7c56beec04afaa63d1affa5469,2017-05-26T00:37:06Z,c623159aafd8670f2e7ad91ec9ad9aa9a3f70392/e995db20ce37dddb3812d35ef357e5e4b10c889f/433720570fe34d49f9e656e37f60ca9d40860e8e/9b09d248c66c6b75c39eba2a534dc9a5e743a726/1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/13bc63ed5a7aea0b1e5954b08f8bc2dbb1bf3b1a/1994378b8589ba353f30ad25c6008fab8f573d45/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/03d4201d7d8b5999ab6b907ed41be2414f88fbfd/08e80c4b0a4fb469315dbee680670f1dfec66748/,2017-08-24 18:43:11-06:00/2018-05-21 20:22:36-06:00/2017-07-02 18:39:35-06:00/2018-04-23 00:21:06-06:00/2018-02-22 18:38:48-07:00/2017-08-22 13:44:51-06:00/2018-03-14 16:48:14-06:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/2018-05-21 00:33:19-06:00/2018-05-21 20:36:09-06:00/,"Removed unnecessary conversions to lists

I think it was 2to3 that wrapped all occurrences of my_var.keys(),
my_var.values(), and my_var.items() in list().  As far as I can tell,
almost all of these conversions are unnecessary.  This revision
removes all conversions when used in iterator context (which is most
of the time) but leaves them in when used in list context."
Assembly,lanl/qmasm,3e63a7d7dba1cb19f1dfd35d6fe6ee488f0f3731,2016-08-18T17:31:57Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Map logical pins to physical pins
Assembly,lanl/qmasm,77dcb44604e4f32a38b1b03a635236b084b5900d,2016-08-19T23:42:58Z,f21cc157a6994e7ab172bc30de12038ca808fcce/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/,2016-11-03 09:48:20-04:00/2016-10-26 16:56:24-06:00/,"Removed --chain parameters, which are no longer needed"
Assembly,lanl/qmasm,3df14bc70e791f86aea778a54d1c9893ec51c5ec,2017-05-04T22:14:29Z,3b2785a022967fde1afe2b3d803acee4ae64f6b4/9b09d248c66c6b75c39eba2a534dc9a5e743a726/661a507062f4b0a024755259438e85bff51acaf8/d713dab380bc7d8ca14bf9db4172670b0f32c589/13bc63ed5a7aea0b1e5954b08f8bc2dbb1bf3b1a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/9e5be93dcb0b6940267d441fc666d17fc9ac5cb3/d625b3210069540d287448384c66a20f8b1909d2/e1811a181eab7f46f498a0bc735a5e756da8e4c1/dc9870a046f8fcb701377951dc2c2dce9cdee31a/d550a0bf58f3ad8d18feeb321bed664b042acd23/73f341fc0b8fcf4e6044eae6af3c9f89bf677e3f/5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/88e2aa3275fe2d7c56beec04afaa63d1affa5469/20b92b291a2c4c91b39807f56b13ee5f286e1362/751e5e7d116c243391b3f02b2f717c63d59051be/1994378b8589ba353f30ad25c6008fab8f573d45/bb9fa86838726ff018c541884988c96b2dfe6892/03d4201d7d8b5999ab6b907ed41be2414f88fbfd/,2017-06-01 13:44:27-06:00/2018-04-23 00:21:06-06:00/2017-05-25 18:17:36-06:00/2017-05-17 11:08:02-06:00/2017-08-22 13:44:51-06:00/2020-06-03 14:20:44-06:00/2018-06-20 00:21:31-06:00/2017-05-28 00:34:09-06:00/2017-05-28 08:40:25-06:00/2017-05-31 14:53:49-06:00/2017-05-24 16:05:32-06:00/2017-05-31 14:51:02-06:00/2018-05-21 01:07:03-06:00/2017-05-25 18:37:06-06:00/2017-05-30 09:52:04-06:00/2020-06-03 17:30:21-06:00/2018-03-14 16:48:14-06:00/2017-05-29 23:12:55-06:00/2018-05-21 00:33:19-06:00/,Made the code compatible with both Python 2 and Python 3
Assembly,lanl/qmasm,2cea5dda67912e9fe7e6906faa87216531ed880a,2017-08-23T16:05:05Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Don't buffer all embedding output before reporting it

There's still more buffering than I'd like, alas."
Assembly,lanl/qmasm,b6d17d2105ba9cce5685190ff6e845aeefc6ec9e,2020-05-26T22:29:30Z,ad1a7c1407abe895364252ee3b89cba5a794e6d9/69505d0911f3c949d60a26dfac2651a755566853/ccfd87643c15352ec30e53e067f344dc15134230/6c8ea845a0f40320e003b8ea85117eb5c6410192/fad3b9795f1ea9ce99d374d9857eaf70880306ff/,2020-05-26 17:39:58-06:00/2020-05-27 15:02:13-06:00/2020-05-28 16:19:26-06:00/2020-05-26 17:45:22-06:00/2020-05-28 13:55:00-06:00/,Filter out broken chains
Assembly,lanl/qmasm,e2c3567432ca495cda518bda32ab556ded082c26,2018-05-07T06:47:43Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Move energy-bounding logic from output.py to problem.py

Estimate minimum energy for both the logical and physical problems."
Assembly,lanl/qmasm,a64f15726c638eaf128e673aa2e6aa17f0d6d6c5,2017-08-23T22:19:36Z,51723a0315a982fb9a9d72fbcb7d44cfa38f94bf/0592f762a5e31c6c51c46b1d639ab3e0e5e0f4f4/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-11-13 18:19:42-07:00/2018-06-20 23:32:06-06:00/2020-06-03 14:20:44-06:00/,Don't buffer all qbsolv output before reporting it
Assembly,lanl/qmasm,a899787b5c669c97a307e32e425081b7a6a452b4,2017-11-03T17:26:05Z,1994378b8589ba353f30ad25c6008fab8f573d45/,2018-03-14 16:48:14-06:00/,:bug: Don't crash if all values can be determined a priori
Assembly,lanl/qmasm,0b4d17de763b9101219cca4f70a44420fa539b3f,2016-10-20T23:08:43Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Make topology calculation more robust to lots of lost couplers
Assembly,lanl/qmasm,6fdc8c51b614dcdc989875a97344e89b0b722729,2020-06-12T18:54:46Z,6b65277f31e7b772c122a148da8cf8047391a74f/,2020-06-12 13:23:21-06:00/,Move redundant embedding-output code into its own internal method
Assembly,lanl/qmasm,7e5e67d518fcb4df62a5274b65b8948297350654,2020-05-21T21:14:56Z,89f68698ff2eee4d7990358400c39d7b2d2ab770/aee335544ba1b6a1f6a0834a2ca54acee9f4051b/5b35930a78f19b78d67cbb96e223650ebfb823a2/d4501382a04c94a010ef879bba08738263c29109/751e5e7d116c243391b3f02b2f717c63d59051be/83fc0e638df9ab2e3cefa74818b9a2b94fd01c13/58b7dd4700d2ac1a8d23969f4c42eac1f0827b99/,2020-05-21 17:21:48-06:00/2020-07-23 17:08:41-06:00/2020-07-23 17:00:29-06:00/2020-06-11 17:37:28-06:00/2020-06-03 17:30:21-06:00/2020-05-29 18:02:35-06:00/2020-05-21 18:17:43-06:00/,"Submit the problem to the solver

Testing for completion of asynchronous calls does not yet seem
correct.  Some debug code remains."
Assembly,lanl/qmasm,f32654fb53a72ec7c1b70e5f98d3cfaf2da0fa62,2020-07-28T21:30:49Z,b5ff7903e9eb1c801327d2b6b7c25d711969e592/6125bf648f2dc68da2b3a88407d4e848d76b5ad4/c8b5dc0f23cfe5612786839aa09ff6f86ded2706/,2020-07-28 18:01:55-06:00/2020-07-30 15:17:06-06:00/2020-07-28 15:37:34-06:00/,Add support for generating standalone Ocean code from QMASM source
Assembly,lanl/qmasm,3c767be11f0f04be7f097d520d9a770a047b3cd9,2017-01-26T01:46:42Z,71a0406842266177ee0b5de9f091f00ce488bbf4/d1a39fd7bbe7a4b6e579c0b7637c5f9c2e120ab7/1dc06566d14f1110c4b59cd17169274f8583151f/8c395558f2829d29d2785b0a85c1c467f0a894d9/eb09048d3665d1d0844149223bf32efa8c902866/c3acc256e9ee8349330cce11a1ddccb4352da799/1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/793104570c745f0b8ad7f1df1feed26b3e333a1c/67d69f7a5625e606a5da7e45b2505181fcef3a13/f6aac7ca9b999660cf41f554f039201add21a347/e55bc405a3f90b35c5a44b5ae945686a04f2f866/2526948f9ee032aa951b5795dab61e82c4790813/,2019-01-20 12:56:07-07:00/2017-01-26 18:56:44-07:00/2019-01-27 17:14:26-07:00/2017-01-25 18:56:21-07:00/2018-06-16 15:57:25-06:00/2019-01-19 22:33:56-07:00/2018-02-22 18:38:48-07:00/2019-01-12 17:51:04-07:00/2019-01-12 16:30:01-07:00/2019-01-19 23:25:03-07:00/2020-06-03 14:20:44-06:00/2017-03-07 14:14:47-06:00/,Code cleanup: Split parse_file into separate helper functions
Assembly,lanl/qmasm,1326f5f92b772152ab4b8f7093e8ccd48d496cdd,2019-01-13T00:54:35Z,a59280e93d1442add5a48b2ebfb4b13de6d34843/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-01-12 17:58:51-07:00/2020-06-03 14:20:44-06:00/,Move find_file_in_path from top level to a method of class FileParser
Assembly,lanl/qmasm,b9a8669fbd48f2fa507d700246b350094be0578b,2017-05-28T06:03:07Z,3b2785a022967fde1afe2b3d803acee4ae64f6b4/45f14cb65409147ff739d2c7fa7950fe23341eb2/bb9fa86838726ff018c541884988c96b2dfe6892/e55bc405a3f90b35c5a44b5ae945686a04f2f866/fb82c362f10c319d952c00fadb21341e3ba8a367/,2017-06-01 13:44:27-06:00/2020-06-02 16:37:34-06:00/2017-05-29 23:12:55-06:00/2020-06-03 14:20:44-06:00/2017-08-31 13:44:52-04:00/,Let the user specify a topology with --topology-file
Assembly,lanl/qmasm,1dc06566d14f1110c4b59cd17169274f8583151f,2019-01-28T00:14:26Z,9a4e8d8908533314c461ad0a2bf87a689dd5f90e/e55bc405a3f90b35c5a44b5ae945686a04f2f866/8069e3fff1d9f014d3b16d3ed274ff5fbe707a72/b93df3340243745ae4db13a038ddf3eb238a0129/,2019-01-27 20:05:52-07:00/2020-06-03 14:20:44-06:00/2019-02-20 21:42:58-07:00/2019-02-20 22:21:34-07:00/,Implement aliases in terms of the current variable environment
Assembly,lanl/qmasm,a023c5a3b3160eb54512d08da26fddefcf95c9ab,2019-02-14T07:09:47Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Update anti-chains after problem simplification

Previously, chains were updated, but anti-chains were overlooked.
This led to spurious rejections of all solutions as having broken
anti-chains."
Assembly,lanl/qmasm,32819ea0943992bbc87ca842c0d8762e1324a145,2017-01-27T23:34:52Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/2526948f9ee032aa951b5795dab61e82c4790813/eb09048d3665d1d0844149223bf32efa8c902866/,2020-06-03 14:20:44-06:00/2017-03-07 14:14:47-06:00/2018-06-16 15:57:25-06:00/,"Replace ""!next."" with the next macro instantiation in QMI generation"
Assembly,lanl/qmasm,a22202836fa2f93bd7bb0279feb50039d0bf1c0e,2016-11-03T13:52:23Z,2822b0570b25004e7c29eb5f1f44855105403803/,2016-12-20 18:28:31-07:00/,Fixed a copy-and-paste error in the examples README file
Assembly,lanl/qmasm,521a3e5b7fd9723746eca322ad94ba38e5eda78b,2017-08-31T15:48:04Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Better error message for dw output on a non-Chimera topology

Thanks to Anastasiia Butko for reporting the problem."
Assembly,lanl/qmasm,2750ecad81088297068c8a247d8d9ce748c970c4,2020-06-02T22:39:56Z,21109e46382da828d8453c916b2127ec476daea9/,2020-06-03 18:27:06-06:00/,Install extras/qmasm-gen-*
Assembly,lanl/qmasm,c3acc256e9ee8349330cce11a1ddccb4352da799,2019-01-20T05:33:56Z,f6aac7ca9b999660cf41f554f039201add21a347/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-01-19 23:25:03-07:00/2020-06-03 14:20:44-06:00/,Make initial preparations for supporting !if ... !end_if
Assembly,lanl/qmasm,d3ef0c62bfa8171eb26bcccb1bf01ec6a68576af,2016-06-15T23:53:45Z,3b2785a022967fde1afe2b3d803acee4ae64f6b4/ce3ca616f6c3a87cc5b99afef71031588b912368/eacb7728db6652f58fa716e22d157e1ad29b6d86/d54fc827d96fd412f2006b7b574d5ebaa7f554f7/f7efe15255c0ea1984e2ac258a9deb137075e245/59437a9d3ce24a759b7318ddd524644d5829a677/049afffdf6ffd812a4c4305658f7e2baff9030ed/9b09d248c66c6b75c39eba2a534dc9a5e743a726/f8e45c95469f8e7f0602b527bcdf07fe01c0e3e7/03821361d95dad2ca4fec6d87dbc945e5ec2723d/c63f0e0c7c60a38d6ac139a128642d2e2231bdc5/69b1c994c1f479bfd612cb8c071d2f6d0825d213/32a848d45ffc1ef285939304f842a402824bde47/3d2a8d7aedb863b2bfbe5e204af117307faeaecb/cef680b1fa9b1927addebf7dfc38581af4eb1dae/13bc63ed5a7aea0b1e5954b08f8bc2dbb1bf3b1a/c629678e6dff4358edcb00e050dc4d412b3847ef/7f70d8fda1ae60806f2fdb36cd5d42c7c4d49fbb/33061dfc20f9cffb0d1e05ed904fb2cfcecd6bc8/e55bc405a3f90b35c5a44b5ae945686a04f2f866/d83f25754ead385b52d736a66e7402afecc7af1a/2476603698226037e9ecccd8c55c9901744aa32e/3df14bc70e791f86aea778a54d1c9893ec51c5ec/b32105a75c991bf33ffea380cc7b54fd6649b35e/8a076300a40d162562b8ffe3cbb48e0135afbf61/831fe9525797795fb251f165a6bf462c1472aeb9/29a7bf57de9332a8f8fa1df335ac2ae527313306/108e31e7578c1d4d8aef686ac6dfe091c7d3195a/57f268a4455944ee4c2c731f2e90c119c9d593ec/8200f89cdc6e5f7abc061824bbd07f5ea9eeb466/acaf3e36850aacb70acf4b4bb4c0a4ed5ae0b2c6/c896937b74bac51f1508b3d693c4e333de375267/a9b829f53dfe57dc0c3ee6d32588b684d74aedc5/88e2aa3275fe2d7c56beec04afaa63d1affa5469/bb9fa86838726ff018c541884988c96b2dfe6892/a023c5a3b3160eb54512d08da26fddefcf95c9ab/1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/037479fe81c97c2e57c96d67c5f3d592147d7260/74baf4a69d88d803817f2c9e7e51f3f18fea2ba8/adb3a7644b87d1509ddf59da8be454747d782dda/,2017-06-01 13:44:27-06:00/2016-08-19 17:14:43-06:00/2016-07-08 10:33:42-06:00/2016-09-27 18:41:39-06:00/2016-10-17 16:10:29-06:00/2018-05-09 00:05:04-06:00/2016-07-01 11:19:43-06:00/2018-04-23 00:21:06-06:00/2016-11-29 17:35:56-07:00/2017-03-17 16:28:09-06:00/2016-10-28 11:41:45-06:00/2017-08-04 14:56:07-06:00/2016-07-05 16:04:36-06:00/2016-12-02 18:54:49-07:00/2016-07-01 18:34:50-06:00/2017-08-22 13:44:51-06:00/2016-06-27 19:45:18-06:00/2016-08-17 00:04:46-06:00/2017-03-25 00:00:41-06:00/2020-06-03 14:20:44-06:00/2019-02-08 21:45:01-07:00/2016-11-04 17:13:32-06:00/2017-05-04 16:14:29-06:00/2016-06-28 19:41:37-06:00/2017-02-01 11:23:37-05:00/2016-08-17 00:37:09-06:00/2016-06-27 15:37:30-06:00/2016-10-18 15:32:40-06:00/2017-02-01 11:11:46-05:00/2016-10-28 14:42:55-06:00/2016-06-27 19:01:42-06:00/2016-08-16 23:40:11-06:00/2017-08-22 13:31:35-06:00/2017-05-25 18:37:06-06:00/2017-05-29 23:12:55-06:00/2019-02-14 00:09:47-07:00/2018-02-22 18:38:48-07:00/2016-06-28 14:38:54-06:00/2016-06-27 18:20:33-06:00/2018-04-06 00:00:35-06:00/,Import qasm from another repository
Assembly,lanl/qmasm,0e1eb0fae72fab92d5e4088c5250c0f3779fb2c4,2020-06-02T23:26:18Z,6fdc8c51b614dcdc989875a97344e89b0b722729/,2020-06-12 12:54:46-06:00/,:bug: Prevent qbsolv output from crashing when used with --always-embed
Assembly,lanl/qmasm,b3d1dbb997b1ae57ad5848841479eb07d0c06c1a,2019-05-03T22:43:41Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Output both raw and adjusted energy levels
Assembly,lanl/qmasm,8a076300a40d162562b8ffe3cbb48e0135afbf61,2017-02-01T16:23:37Z,1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/,2018-02-22 18:38:48-07:00/,:bug: Work around ising-heuristic's lack of num_occurrences
Assembly,lanl/qmasm,49ea06cf83a87cc16de43854eadfde312b9f3f3d,2019-01-09T06:58:42Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/734c4a4b6675b523c99d898595b112898f146500/,2020-06-03 14:20:44-06:00/2019-01-10 23:29:26-07:00/,Define an Environment class for maintaining variable scopes
Assembly,lanl/qmasm,9655928ad942e7ac12dbbe69db1cb23652ceb7f3,2017-05-28T06:41:24Z,e1811a181eab7f46f498a0bc735a5e756da8e4c1/,2017-05-28 08:40:25-06:00/,:bug: Correct a missing semicolon in the test script
Assembly,lanl/qmasm,433720570fe34d49f9e656e37f60ca9d40860e8e,2017-07-03T00:39:35Z,10f51141ae3f8742f5069a0c08280d8bcba40586/b769691bb24afd35e48cf371407f417b78fff1b9/0c98de5cf8f692eb4516d49bc9c16090cd334cb1/b02225fdb65dae449064760baef394fe34e77a08/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2017-08-16 11:37:14-06:00/2017-07-02 19:34:36-06:00/2017-10-10 00:00:18-07:00/2019-06-10 16:36:49-06:00/2020-06-03 14:20:44-06:00/,"Split large sample counts across multiple QMI submissions

The user no longer needs to worry about keeping the product of the
annealing time and the number of samples (plus the thermalization
time) below some threshold time.  QMASM will automatically split the
sample count and merge the results as if they were part of a single
submission."
Assembly,lanl/qmasm,bcb66e851a875991abf3046d4f70c8d1e39d4808,2016-08-17T06:57:52Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Corrected refactoring for the --chain option
Assembly,lanl/qmasm,6fb566264e918e1067d1d48f119cadc60fda9728,2016-12-23T22:04:24Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,Compact numbers when --renumber-from is used
Assembly,lanl/qmasm,f762c0edd67f3f5894f0898a1db815fbce587baf,2019-02-19T03:10:29Z,af27f78726e6dc160a4610928824b4a3538db47a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/6c93bd8a90db0cb8091113681fd473d049ba86c7/eec86859c92fb7eb0dbe8a715a735d597ac42e84/,2019-02-19 19:50:34-07:00/2020-06-03 14:20:44-06:00/2019-05-10 16:53:53-06:00/2019-03-27 17:24:21-07:00/,"Convert user-specified chains, anti-chains, and pins to assertions

With this change, --show=best and --show=all provide additional
information about result validity."
Assembly,lanl/qmasm,e3d9ba422c2f507648f3750c8403e1954205e222,2020-06-10T19:42:29Z,aa310e8054cdd86cbd388e28bcb3fcb9d21d2857/,2020-06-30 19:00:10-06:00/,Include a test of !bqm_type in feature_test.qmasm
Assembly,lanl/qmasm,d625b3210069540d287448384c66a20f8b1909d2,2017-05-28T06:34:09Z,9655928ad942e7ac12dbbe69db1cb23652ceb7f3/e1811a181eab7f46f498a0bc735a5e756da8e4c1/,2017-05-28 00:41:24-06:00/2017-05-28 08:40:25-06:00/,Add continuous-integration tests for --topology-file
Assembly,lanl/qmasm,dbc089dac73571c373a2a78de8605a03596b8651,2017-01-31T16:40:57Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Minor modifications to verbose output
Assembly,lanl/qmasm,d54fc827d96fd412f2006b7b574d5ebaa7f554f7,2016-09-28T00:41:39Z,33061dfc20f9cffb0d1e05ed904fb2cfcecd6bc8/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-03-25 00:00:41-06:00/2017-05-04 16:14:29-06:00/,":bug: Handle the case of unused qubits

SAPI tends to choke when embedding a problem containing a zero-weight
node whose adjacent couplers all have zero strength.  (Tested with
SAPI 2.4.2)  To help out SAPI, we simply remove all zero-strength
couplers before embedding.  For example, the following input file used
to break QASM but no longer does:
```
q1 -0.6
q2 -0.2
q3 0
q4 0
q5 0.8

q1 q2 0.2
q1 q3 0
q1 q4 0
q1 q5 -0.8
q2 q3 0
q2 q4 0
q2 q5 -0.4
q3 q4 0
q3 q5 0
q4 q5 0
```"
Assembly,lanl/qmasm,d46b0e2204d2114a2cb054f62f88764c85eef12a,2017-02-01T00:28:22Z,7c47d361e47db07a8ee78654c4e130faebce4fd3/21109e46382da828d8453c916b2127ec476daea9/0592f762a5e31c6c51c46b1d639ab3e0e5e0f4f4/47535ce13412a5bdc472a70f1ae94aa45c07e76e/d97cd459bd1a9439971650c6dd7138b56bb288e6/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2017-02-01 10:50:39-05:00/2020-06-03 18:27:06-06:00/2018-06-20 23:32:06-06:00/2018-06-21 11:25:53-06:00/2017-05-30 23:34:55-06:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,"Support generating qbsolv input in the absence of SAPI

We introduce a fake SAPI module with just enough functionality for
QMASM to produce qbsolv files."
Assembly,lanl/qmasm,5185b86271e7810af028e381c0026c71448956c1,2016-08-15T15:10:51Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/,2016-10-26 16:56:24-06:00/,Reference the QASM wiki
Assembly,lanl/qmasm,e06faacf268fb97e38e1c498d15d1d4a44a33ea9,2016-10-19T00:53:32Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/,2016-10-26 16:56:24-06:00/,":bug: Round up the minimum number of unit cells needed

SAPI 2.4 was segfaulting in find_embedding when the number of logical
qubits exceeded the number of qubits in the physical topology.  (I had
tried embedding 12 qubits in a single unit cell.)"
Assembly,lanl/qmasm,29a7bf57de9332a8f8fa1df335ac2ae527313306,2016-06-27T21:37:30Z,d713dab380bc7d8ca14bf9db4172670b0f32c589/82873c9ba36f180f02b4be78c0e332e3272b73c2/e47c19dba70b88cec54276cd1c4a325d42fb7714/e55bc405a3f90b35c5a44b5ae945686a04f2f866/fa65a9b489faa2038dea364b5af6a5d144d7e710/6bec5ac217b9170c165e38882847f78e9e78b05a/c96e3eb69a35212b0a894bd427a7490ea274d5a2/db63fd9c239c3534c70ec29546ee76290fff8271/0bfed7c0d07962417e7dc51420fdd576f81d3494/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/da23f0fea9ed87eaebd318916f2fe7cc969f77d0/3df14bc70e791f86aea778a54d1c9893ec51c5ec/037479fe81c97c2e57c96d67c5f3d592147d7260/e122b04780afb9dce9757d2b8f80218861aec214/50851d9fd958314b3b7c71d9366a649bc0b9db09/2476603698226037e9ecccd8c55c9901744aa32e/,2017-05-17 11:08:02-06:00/2016-11-08 17:06:46-07:00/2016-12-14 00:21:40-07:00/2020-06-03 14:20:44-06:00/2019-06-17 17:22:03-06:00/2016-08-19 11:17:57-06:00/2016-12-15 17:34:17-07:00/2017-05-05 17:50:25-06:00/2016-12-23 13:21:27-07:00/2016-10-26 16:56:24-06:00/2017-05-28 23:13:25-06:00/2017-05-04 16:14:29-06:00/2016-06-28 14:38:54-06:00/2019-10-09 15:36:20-06:00/2016-12-20 11:11:04-07:00/2016-11-04 17:13:32-06:00/,Begin refactoring qasm into smaller pieces
Assembly,lanl/qmasm,fa65a9b489faa2038dea364b5af6a5d144d7e710,2019-06-17T23:22:03Z,e122b04780afb9dce9757d2b8f80218861aec214/,2019-10-09 15:36:20-06:00/,":bug: Make the recorded plist match the files actually installed

Resolves #9

Co-authored-by: Yuri Victorovich <yuri@FreeBSD.org>"
Assembly,lanl/qmasm,f2ecf156217eeae45ab942f1a134bcb32ea7f23b,2020-05-28T23:14:01Z,34996cb3bfec9dec0414dce973d820c60af5eb64/,2020-05-29 14:54:52-06:00/,Output solutions as scalar Booleans
Assembly,lanl/qmasm,9a4e8d8908533314c461ad0a2bf87a689dd5f90e,2019-01-28T03:05:52Z,77f6d32cbccf0b86fd61fe3bedf20154403c8ab4/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-01-27 20:08:51-07:00/2020-06-03 14:20:44-06:00/,Apply substitutions to !let and !assert
Assembly,lanl/qmasm,32cf33dc31fdaf63ba80ea633cd6712144021197,2019-02-20T04:49:50Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/eec86859c92fb7eb0dbe8a715a735d597ac42e84/,2020-06-03 14:20:44-06:00/2019-03-27 17:24:21-07:00/,"Require ASTs to be compiled explicitly, not implicitly during parsing"
Assembly,lanl/qmasm,4bbf247a59b31bf1e225733bcefdd2a3fe131f9f,2016-10-19T22:52:53Z,836980fe317ac8d7171f13f727f3617fbc3f4d9c/9b09d248c66c6b75c39eba2a534dc9a5e743a726/b8ecbd653983237498f08a44fa4e718b1859655a/e52703a53474673141555e5352a9a5ff8b529a37/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/c589beb2cb232d4927bf457f6f0aca377dfdded7/,2016-10-20 14:42:41-06:00/2018-04-23 00:21:06-06:00/2019-01-21 00:55:07-07:00/2016-10-19 17:17:32-06:00/2016-10-26 16:56:24-06:00/2020-06-03 14:20:44-06:00/2016-10-26 18:27:45-06:00/,"Support for array notation in pin statements

The language now accepts statements like, ""foo[3..0] := 1011"".  The
command line further accepts multiple left- and right-hand sides, as
in ""--pin=""foo[5] foo[3..0] := 1 1011""."
Assembly,lanl/qmasm,2476603698226037e9ecccd8c55c9901744aa32e,2016-11-04T23:13:32Z,e47c19dba70b88cec54276cd1c4a325d42fb7714/fa910926a75a54cadae952f34f386fbb3e3ebeda/f5a28ac6de85950ad64b37043f828d9c588c5eca/,2016-12-14 00:21:40-07:00/2016-12-14 00:44:24-07:00/2017-03-24 23:47:40-06:00/,"New --add-solns option to output all solutions, not just minimal energy

The shortcut form is -a.  The shortcut for the --anneal-time option
has been renamed to -A."
Assembly,lanl/qmasm,57f268a4455944ee4c2c731f2e90c119c9d593ec,2017-02-01T16:11:46Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Report the connection name and solver name when available
Assembly,lanl/qmasm,19610088836b778a42ef1972028cf4434980f30f,2020-05-19T22:51:37Z,e38b1f0edbe0a20c6593fc615c508e044a2ec0b7/39eb40836f255d18a205c69c3ef5b5dc40d8e998/,2020-05-19 17:19:10-06:00/2020-06-09 18:25:05-06:00/,Introduce support for outputting MiniZinc models
Assembly,lanl/qmasm,ce3ca616f6c3a87cc5b99afef71031588b912368,2016-08-19T23:14:43Z,3b2785a022967fde1afe2b3d803acee4ae64f6b4/e55bc405a3f90b35c5a44b5ae945686a04f2f866/2cea5dda67912e9fe7e6906faa87216531ed880a/b9a8669fbd48f2fa507d700246b350094be0578b/0731aa59b448f63a8f8d4c97dd7f2c25212e6bb9/e06faacf268fb97e38e1c498d15d1d4a44a33ea9/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/076d15687fc97b3864650c32a81834303640b11e/fb82c362f10c319d952c00fadb21341e3ba8a367/,2017-06-01 13:44:27-06:00/2020-06-03 14:20:44-06:00/2017-08-23 10:05:05-06:00/2017-05-28 00:03:07-06:00/2017-01-30 11:55:59-05:00/2016-10-18 18:53:32-06:00/2016-10-26 16:56:24-06:00/2017-02-23 18:46:14-07:00/2017-08-31 13:44:52-04:00/,"Cleaned up the code for optimizing embeddings

Now, a single function finds both unoptimized and optimized
embeddings, which reduces redundancy in the code."
Assembly,lanl/qmasm,5b35930a78f19b78d67cbb96e223650ebfb823a2,2020-07-23T23:00:29Z,aee335544ba1b6a1f6a0834a2ca54acee9f4051b/6125bf648f2dc68da2b3a88407d4e848d76b5ad4/6b88139ec799760cf7fc41d5e0f8183107ca53fe/,2020-07-23 17:08:41-06:00/2020-07-30 15:17:06-06:00/2020-07-23 17:40:41-06:00/,Enable the user to control the annealing schedule
Assembly,lanl/qmasm,1e70ed13484eecb96006fdd605e08167c720f39d,2017-03-25T22:10:26Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/1daa1a14b873685f5c7ffff6c7d31cd5b45c4c47/51723a0315a982fb9a9d72fbcb7d44cfa38f94bf/2a5f1aeea476f2c3ee653c4298818478028d0e3d/e55bc405a3f90b35c5a44b5ae945686a04f2f866/3df14bc70e791f86aea778a54d1c9893ec51c5ec/,2018-04-23 00:21:06-06:00/2018-02-22 18:38:48-07:00/2019-11-13 18:19:42-07:00/2017-05-03 18:51:20-06:00/2020-06-03 14:20:44-06:00/2017-05-04 16:14:29-06:00/,Two output styles: --values=bools and --values=ints
Assembly,lanl/qmasm,836980fe317ac8d7171f13f727f3617fbc3f4d9c,2016-10-20T20:42:41Z,b8ecbd653983237498f08a44fa4e718b1859655a/b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/d2a8853c30afa37214559fa9d2603ced237184bb/,2019-01-21 00:55:07-07:00/2016-10-26 16:56:24-06:00/2020-06-03 14:20:44-06:00/2017-01-24 13:25:13-07:00/,"Support for array notation in chain statements

The language now accepts statements like, ""foo[3..0] = bar[3..0]""."
Assembly,lanl/qmasm,fb82c362f10c319d952c00fadb21341e3ba8a367,2017-08-31T17:44:52Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Cleaned up the handling of non-Chimera topologies

We no longer pretend we have a Chimera graph when we don't."
Assembly,lanl/qmasm,b1d5f3ed7e8d2ed142e19ee35fe60955f5b24eb7,2017-01-27T18:09:11Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/eb09048d3665d1d0844149223bf32efa8c902866/,2020-06-03 14:20:44-06:00/2018-06-16 15:57:25-06:00/,"Replace ""!next."" with the next macro instantiation in string generation"
Assembly,lanl/qmasm,38f13a56162a7555fb2908d415d50a09c6f0c2b7,2019-02-10T20:56:06Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/b93df3340243745ae4db13a038ddf3eb238a0129/,2020-06-03 14:20:44-06:00/2019-02-20 22:21:34-07:00/,Perform symbol substitution in !use_macro (macro and instance names)
Assembly,lanl/qmasm,c47f7bddeb19c536b12e7ee5424cc052f7575b15,2017-05-31T14:42:29Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Drop unused import
Assembly,lanl/qmasm,c629678e6dff4358edcb00e050dc4d412b3847ef,2016-06-28T01:45:18Z,32a848d45ffc1ef285939304f842a402824bde47/,2016-07-05 16:04:36-06:00/,Begin moving weight/strength update functions into their own file
Assembly,lanl/qmasm,dae3cedbfd4dfbb6021cfbf544368605b78b2173,2019-12-19T01:57:07Z,59449daa13d9b5a29e2f18ca3834bdc464f1188c/39eb40836f255d18a205c69c3ef5b5dc40d8e998/,2019-12-23 14:30:40-07:00/2020-06-09 18:25:05-06:00/,Begin converting a Problem to a BinaryQuadraticModel
Assembly,lanl/qmasm,5b8b4564673a49193c7146c40f349dd2c9f0eef6,2018-03-15T03:55:31Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Accumulate weights and strengths when repeated
Assembly,lanl/qmasm,2526948f9ee032aa951b5795dab61e82c4790813,2017-03-07T20:14:47Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,":bug: Correct the handling of aliases (""<->"" statements)"
Assembly,lanl/qmasm,d46a78e6ccacf5696fe6bf87f3e25c4e18bff809,2016-09-27T23:56:14Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/fb82c362f10c319d952c00fadb21341e3ba8a367/,2020-06-03 14:20:44-06:00/2017-08-31 13:44:52-04:00/,":bug: Don't blow up when using the ising-heuristic solver

ising-heuristic appears to be the default solver in SAPI 2.3+."
Assembly,lanl/qmasm,6017925f49cba0451b562b197fd56df093014141,2018-05-25T19:00:01Z,d83f25754ead385b52d736a66e7402afecc7af1a/,2019-02-08 21:45:01-07:00/,:bug: Don't abort with --show=best if no solutions are found
Assembly,lanl/qmasm,751e5e7d116c243391b3f02b2f717c63d59051be,2020-06-03T23:30:21Z,aee335544ba1b6a1f6a0834a2ca54acee9f4051b/e3d9ba422c2f507648f3750c8403e1954205e222/60c0bf91399573416c1acf0d87253c36a603c53b/21109e46382da828d8453c916b2127ec476daea9/,2020-07-23 17:08:41-06:00/2020-06-10 13:42:29-06:00/2020-07-21 18:37:25-06:00/2020-06-03 18:27:06-06:00/,Rewrite the Travis CI support to more suitably test the Ocean version of QMASM
Assembly,lanl/qmasm,84b2cacb79fa64bb36ab999a733813ca6fd016c4,2016-12-20T18:28:52Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/0ebd51e774cfd1aa656c5b0ff425ae45178fd9c2/ed7644179b4b8716da8454fb6d1d4903fca29eb7/,2020-06-03 14:20:44-06:00/2017-02-23 18:13:38-07:00/2017-05-30 18:33:52-06:00/,Perform inexact floating-point comparisons
Assembly,lanl/qmasm,7081df0bee8f5f69491fd6f610fae201ff01463a,2020-05-27T19:54:50Z,a10188ff3597f84337ef7627e7a93f6f0454b842/69505d0911f3c949d60a26dfac2651a755566853/fad3b9795f1ea9ce99d374d9857eaf70880306ff/,2020-05-29 15:50:45-06:00/2020-05-27 15:02:13-06:00/2020-05-28 13:55:00-06:00/,Filter out failed assertions
Assembly,lanl/qmasm,6dc09ff32987c11568138c3f95bb8e7862d1c28f,2018-02-25T22:20:21Z,af27f78726e6dc160a4610928824b4a3538db47a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2019-02-19 19:50:34-07:00/2020-06-03 14:20:44-06:00/,":bug: Correct the handling of OR (""|"") and XOR (""^"")"
Assembly,lanl/qmasm,558a42375059f6d49df083ea04d12f5c0985179e,2016-10-26T23:09:47Z,d2dc300167d8dc15e434b9d9c45c62d01a446484/cae464a3a19e6226ce8f797c0b3a57f95c5f521a/,2016-11-11 16:54:16-07:00/2016-11-11 16:36:14-07:00/,Increased the version number from 1.0 to 1.1
Assembly,lanl/qmasm,eb09048d3665d1d0844149223bf32efa8c902866,2018-06-16T21:57:25Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Allow !use_macro to take only a single argument

In this case, it instantiates the macro within the current scope as
opposed to including an additional name prefix."
Assembly,lanl/qmasm,a896291e00784ff52e68d3453b291978fa0fc1df,2018-06-20T06:37:14Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,:bug: Correct the use of `-f qbsolv --run` with `-v -v`
Assembly,lanl/qmasm,9beee2371867cbafc1fdacd61d0dd96bb1d67a6d,2018-08-04T00:30:07Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,Ignore !assert directives in qmasm-ground-state
Assembly,lanl/qmasm,32974974627ff1ce7198a271ee23ff7cdb13f48e,2018-05-30T03:44:24Z,e55bc405a3f90b35c5a44b5ae945686a04f2f866/,2020-06-03 14:20:44-06:00/,"Abort if any disconnected variables are encountered

I can't count the number of times I misspelled a variable name in
a --pin option and spent ages figuring out why I was getting
incorrect results.  This revision addresses that."
Assembly,lanl/qmasm,003652cb7c1ca0bb5a0c398360b7c76f75490d30,2020-06-10T01:14:00Z,5c5ed432a66c8db8cbce186b02eeac12243f1b7b/,2020-06-09 19:28:53-06:00/,Honor state changes introduced by the !bqm_type directive
Assembly,lanl/qmasm,aee335544ba1b6a1f6a0834a2ca54acee9f4051b,2020-07-23T23:08:41Z,e66b7494e799c2c5bcf00c961725b895f6d0dbec/,2020-07-23 17:21:14-06:00/,Refactor acquire_samples into acquire_samples and complete_sample_acquisition
Assembly,lanl/qmasm,c589beb2cb232d4927bf457f6f0aca377dfdded7,2016-10-27T00:27:45Z,b8ecbd653983237498f08a44fa4e718b1859655a/e55bc405a3f90b35c5a44b5ae945686a04f2f866/d2a8853c30afa37214559fa9d2603ced237184bb/,2019-01-21 00:55:07-07:00/2020-06-03 14:20:44-06:00/2017-01-24 13:25:13-07:00/,"Allow array expressions in aliases

In addition, "":"" is accepted as a synonym for "".."", and array parse
failures no longer abort the program.  They simply don't expand."
Assembly,lanl/qmasm,959ecde66d043872230f67f80331fef0f3052974,2016-08-17T12:54:16Z,b7e7a707b84a72ec622b7fd6c58a5d9237beef8a/77dcb44604e4f32a38b1b03a635236b084b5900d/,2016-10-26 16:56:24-06:00/2016-08-19 17:42:58-06:00/,Added 1of5 example
Assembly,lanl/qmasm,77f6d32cbccf0b86fd61fe3bedf20154403c8ab4,2019-01-28T03:08:51Z,036323688539bb285b52e3ea7eb26811f4ba17a9/,2019-01-27 21:24:38-07:00/,Adapt ident_re to toks_re for consistency
Assembly,lanl/qmasm,d713dab380bc7d8ca14bf9db4172670b0f32c589,2017-05-17T17:08:02Z,5bcb3cbf827a3fd90c7dd2698518b64f1a66a8bd/e55bc405a3f90b35c5a44b5ae945686a04f2f866/d3045915257228114374e0e996ac4b55196a9472/da23f0fea9ed87eaebd318916f2fe7cc969f77d0/,2018-05-21 01:07:03-06:00/2020-06-03 14:20:44-06:00/2017-06-02 00:24:06-06:00/2017-05-28 23:13:25-06:00/,Report the command line used when -v is specified
Assembly,lanl/qmasm,f5a28ac6de85950ad64b37043f828d9c588c5eca,2017-03-25T05:47:40Z,9b09d248c66c6b75c39eba2a534dc9a5e743a726/,2018-04-23 00:21:06-06:00/,"Make `-v -v` no longer imply `--all-solns`

Sometimes one might want to see all internal variables without
necessarily also seeing non-minimal solutions.  This revision gives
the user separate control over those two possibilities."
Assembly,lanl/qmasm,c1cf8ab1ae065ef181c13cbda007e9678fdeead9,2017-02-10T22:30:09Z,9e5be93dcb0b6940267d441fc666d17fc9ac5cb3/,2018-06-20 00:21:31-06:00/,End in a blank line for compatibility with edif2qmasm's friendly-mult
Assembly,lanl/qmasm,d1a39fd7bbe7a4b6e579c0b7637c5f9c2e120ab7,2017-01-27T01:56:44Z,38f13a56162a7555fb2908d415d50a09c6f0c2b7/b93df3340243745ae4db13a038ddf3eb238a0129/734c4a4b6675b523c99d898595b112898f146500/eb09048d3665d1d0844149223bf32efa8c902866/b1d5f3ed7e8d2ed142e19ee35fe60955f5b24eb7/32819ea0943992bbc87ca842c0d8762e1324a145/,2019-02-10 13:56:06-07:00/2019-02-20 22:21:34-07:00/2019-01-10 23:29:26-07:00/2018-06-16 15:57:25-06:00/2017-01-27 11:09:11-07:00/2017-01-27 16:34:52-07:00/,Support for multiple macro instantiations per !use_macro directive
Assembly,lanl/qmasm,cf55b4a60330acf6d101c230a99ccadb78f7ef74,2018-03-15T00:12:42Z,2570435bacfa873b1a92a301b43314a99c9173bb/6af86c7c68df5a8191a8896c7d74b4d0d14f29cd/,2019-02-06 23:56:31-07:00/2018-03-15 17:20:52-06:00/,Make addition and multiplication left-associative in !assert statements
Assembly,XanaduAI/blackbird,4e67f1cac71f5a9f1f0929414d8f2bf9c0b43787,2019-03-29T23:49:37Z,10c7e3a456653e6d8d27fcd88a0ebfd8256dde8f/d53c4bb3f75c1df4228b91dc06eb04da7505e987/b059c68531a608a0a8ae60ec47b0b29fa1bb9794/bd91ef598efcc975caafe811581949e0dd9c0b63/588540531cc8336aeed4071d3f16bd6297c27e7b/ba0ea546d3baf4bc2d4ae9fe7809cbfa61baeac1/,2019-03-29 19:56:03-04:00/2019-04-03 16:05:40-04:00/2019-03-29 19:55:31-04:00/2019-03-29 19:54:10-04:00/2019-03-29 19:51:42-04:00/2019-04-02 16:13:16-04:00/,updated readme
Assembly,XanaduAI/blackbird,10c7e3a456653e6d8d27fcd88a0ebfd8256dde8f,2019-03-29T23:56:03Z,d53c4bb3f75c1df4228b91dc06eb04da7505e987/,2019-04-03 16:05:40-04:00/,updated readme
Assembly,XanaduAI/blackbird,b48d400c111a63c0f3b0d955b0af8567fbef4b0f,2018-11-22T18:47:25Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/cbb4f1362e7ff5cd73b48c63f80cb3bc955fad14/fdf725dd85053326e5c9ee86010740d1b0dadba9/5ee1a2a74dfbade0374fe45204a31180b7759f87/f335c73a809834e1115b521be9bd95164c25e944/,2019-05-18 21:54:39-04:00/2019-04-22 23:23:00-04:00/2020-07-29 10:08:20-04:00/2018-11-30 18:26:55-05:00/2018-11-22 18:29:56-05:00/2019-04-25 13:19:00-04:00/2018-11-22 15:14:17-05:00/2019-04-20 17:22:41-04:00/,added python listener
Assembly,XanaduAI/blackbird,ea5f16dd202d4b5ca31aec76223404be160824e9,2018-10-25T21:24:08Z,d68b90d08e0f9eae1ce5f7fcd017c3cf3085a438/,2018-11-28 16:58:38-05:00/,Initial commit
Assembly,XanaduAI/blackbird,e0c4aad163fb3312ec118082cbc089fc9a904c02,2018-12-04T06:10:50Z,77a97eedc467e868ef214aadb3e6ce7af0f9598d/c7cd663fb754ea1f7ae8368e10ffdc67e473ec93/7bddd635c106256a3b47a65a10b73d8372aeeeb6/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2018-12-06 12:30:31-05:00/2018-12-05 18:35:21-05:00/2018-12-04 14:48:34-05:00/2018-12-06 17:07:09-05:00/,almost there...
Assembly,XanaduAI/blackbird,59c0e86c95865b7e4c17d683ae4d719b5590f1a7,2018-11-30T23:26:55Z,84ac7863f302c56601a3c5bbf668260bc081ba47/a8d4377a71a63df75c6a31441b5186574f6c76bd/11d1de40352b212d36c8d1ad6d1152cb80810cff/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/e51023b13c04eb5d6111ed5d939651786825dd28/7bddd635c106256a3b47a65a10b73d8372aeeeb6/e0c4aad163fb3312ec118082cbc089fc9a904c02/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/626e0596e98efc8990c87b36fc4b7a2ae349e8c2/f335c73a809834e1115b521be9bd95164c25e944/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2019-04-25 19:22:54-04:00/2018-12-04 15:49:26-05:00/2019-05-30 18:58:55-04:00/2020-07-29 10:08:20-04:00/2018-12-03 19:27:53-05:00/2018-12-04 14:48:34-05:00/2018-12-04 01:10:50-05:00/2019-04-22 23:23:00-04:00/2020-09-29 11:05:58-04:00/2019-04-20 17:22:41-04:00/2018-12-06 17:07:09-05:00/,refactored CPP program
Assembly,XanaduAI/blackbird,134600724db33c7cca9fe78ec8f36717190edcfe,2018-11-28T20:06:53Z,59c0e86c95865b7e4c17d683ae4d719b5590f1a7/,2018-11-30 18:26:55-05:00/,added cpp visitor files
Assembly,XanaduAI/blackbird,fdf725dd85053326e5c9ee86010740d1b0dadba9,2019-04-25T17:19:00Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/84ac7863f302c56601a3c5bbf668260bc081ba47/11d1de40352b212d36c8d1ad6d1152cb80810cff/958ade18cb6957a38249f6adb08b6a74053c14ec/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/,2019-05-18 21:54:39-04:00/2019-04-25 19:22:54-04:00/2019-05-30 18:58:55-04:00/2019-07-11 00:01:03+08:00/2020-07-29 10:08:20-04:00/,added additional intrinsic functions
Assembly,XanaduAI/blackbird,b6a1f72f910b171e151e6320e39d4221ba3684e9,2019-05-19T02:05:51Z,7262d499c412a66c4baf71cf0387b39b7c9744ee/b5ee1385b456645748b8a7ccd2eba344dac9e3b1/3d47b1f1d2e94223ee46f66b4d378b41fd486726/,2019-05-20 14:28:15-04:00/2019-05-20 17:28:36-04:00/2020-02-04 17:36:59-05:00/,bug fixes
Assembly,XanaduAI/blackbird,d20c4b125d7f2b6cc1b3e1f6f755faac56ff10be,2020-02-05T19:43:57Z,fccaab1287bff46d01a95007d4daf05abcc6e513/,2020-10-01 11:03:39-04:00/,revert merge
Assembly,XanaduAI/blackbird,8ebc309a8fd0ce6892866bf868d17119df39fc95,2019-04-03T20:17:26Z,958ade18cb6957a38249f6adb08b6a74053c14ec/639ff30f6ecb7d10d4af48bf68ff3a338bf7805f/,2019-07-11 00:01:03+08:00/2019-04-03 16:21:42-04:00/,try new travis config
Assembly,XanaduAI/blackbird,71e6fbe37a9c95877f1f129c6fe0f1a0e4567be1,2018-11-28T22:19:44Z,f9776a888c4439d204b95dac5b0f0077ae4b6573/,2019-05-03 12:59:18+08:00/,fixed setup.py to allow import blackbird
Assembly,XanaduAI/blackbird,9c786bf4d71b8fc76b65509445d4df63b47d457d,2019-04-23T18:45:47Z,d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/3a409ac02542915c2b8183f5e2f25554043a95fd/,2019-04-23 19:55:06-04:00/2019-05-02 13:34:10+08:00/,fixed up rest of docs
Assembly,XanaduAI/blackbird,3a409ac02542915c2b8183f5e2f25554043a95fd,2019-05-02T05:34:10Z,f9776a888c4439d204b95dac5b0f0077ae4b6573/,2019-05-03 12:59:18+08:00/,"removed deprecated SF listener, replaced it with a doc example page"
Assembly,XanaduAI/blackbird,17e325131279903c181c4d5413e204edb0549254,2018-11-22T19:14:51Z,63d0b0d3f1cf7c925e48e8f981f875348384d8b8/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/7bddd635c106256a3b47a65a10b73d8372aeeeb6/cbb4f1362e7ff5cd73b48c63f80cb3bc955fad14/5ee1a2a74dfbade0374fe45204a31180b7759f87/,2018-11-23 11:29:40-05:00/2018-11-30 18:26:55-05:00/2018-12-04 14:48:34-05:00/2018-11-22 18:29:56-05:00/2018-11-22 15:14:17-05:00/,added CPP code
Assembly,XanaduAI/blackbird,63d0b0d3f1cf7c925e48e8f981f875348384d8b8,2018-11-23T16:29:40Z,d68b90d08e0f9eae1ce5f7fcd017c3cf3085a438/84ac7863f302c56601a3c5bbf668260bc081ba47/a8d4377a71a63df75c6a31441b5186574f6c76bd/77a97eedc467e868ef214aadb3e6ce7af0f9598d/3a409ac02542915c2b8183f5e2f25554043a95fd/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e3f330ca60fae01862d10eab31dfbc93785dbbc2/e51023b13c04eb5d6111ed5d939651786825dd28/69d8c341551689030a47d59d568ba1243ef6ce3a/8efe12fcb73d09461aa18ff29805a580b738a1f5/5880031d5a2056e52370aea901ae61762fa27f1f/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/bbbeccdf86ac8bb2d5de901d9550de4c62afac48/f335c73a809834e1115b521be9bd95164c25e944/,2018-11-28 16:58:38-05:00/2019-04-25 19:22:54-04:00/2018-12-04 15:49:26-05:00/2018-12-06 12:30:31-05:00/2019-05-02 13:34:10+08:00/2018-11-30 18:26:55-05:00/2018-11-29 16:31:56-05:00/2018-12-03 19:27:53-05:00/2018-11-28 18:07:40-05:00/2018-11-29 17:20:52-05:00/2018-12-07 17:48:06-05:00/2019-04-22 23:23:00-04:00/2018-12-07 17:09:29-05:00/2019-04-20 17:22:41-04:00/,first hopefully fully working version
Assembly,XanaduAI/blackbird,5be67471a32f5c8335033261670535aaae64929c,2018-11-29T19:04:48Z,a8d4377a71a63df75c6a31441b5186574f6c76bd/596d1fc7bfc7cc474e4e3aac81482319c29a85be/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e3f330ca60fae01862d10eab31dfbc93785dbbc2/e51023b13c04eb5d6111ed5d939651786825dd28/7bddd635c106256a3b47a65a10b73d8372aeeeb6/e0c4aad163fb3312ec118082cbc089fc9a904c02/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2018-12-04 15:49:26-05:00/2018-12-06 15:10:29-05:00/2018-11-30 18:26:55-05:00/2018-11-29 16:31:56-05:00/2018-12-03 19:27:53-05:00/2018-12-04 14:48:34-05:00/2018-12-04 01:10:50-05:00/2018-12-06 17:07:09-05:00/,starting writing C++ parser
Assembly,XanaduAI/blackbird,5ee1a2a74dfbade0374fe45204a31180b7759f87,2018-11-22T20:14:17Z,eb6a54cd876dc7b5236f6ecdd1335ef54e0a3251/a7d806e43eea150e7c784b04b48848047c0db7fe/63d0b0d3f1cf7c925e48e8f981f875348384d8b8/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/7bddd635c106256a3b47a65a10b73d8372aeeeb6/cbb4f1362e7ff5cd73b48c63f80cb3bc955fad14/97285481a7dba1f45d1c68384c2cf139afc7c1ee/c4636db73674d557ae7fe2060104a7d1d1ddd005/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/f335c73a809834e1115b521be9bd95164c25e944/74d70f3fb8a962329b8b0ca0705e401eac718fed/0481345b36c9014634afc2cdafe1fa6a2e152f6c/,2018-11-22 21:46:17-05:00/2018-11-22 22:37:57-05:00/2018-11-23 11:29:40-05:00/2018-11-30 18:26:55-05:00/2018-12-04 14:48:34-05:00/2018-11-22 18:29:56-05:00/2019-04-01 16:30:41-04:00/2018-11-28 17:31:11-05:00/2019-04-22 23:23:00-04:00/2019-04-20 17:22:41-04:00/2018-12-06 17:07:09-05:00/2018-11-28 17:23:30-05:00/,added more details to example.xbb
Assembly,XanaduAI/blackbird,d0497131888421250a6faabcb9c6a79efefa69f9,2019-04-23T18:25:35Z,71eb3aeb0307673a5f7f57c77cede87d95e8850e/,2019-04-23 19:56:27-04:00/,fixed documentation
Assembly,XanaduAI/blackbird,806f3ae5bd92e4f032f360f26e0fcd2273b15786,2019-04-24T03:53:45Z,11d1de40352b212d36c8d1ad6d1152cb80810cff/3b577e1b50c7bb4e62a23a9513bcb4f829818c3d/3a409ac02542915c2b8183f5e2f25554043a95fd/958ade18cb6957a38249f6adb08b6a74053c14ec/ade25a056fe14478fba46c52cabda07692c6035d/,2019-05-30 18:58:55-04:00/2019-04-24 15:18:39-04:00/2019-05-02 13:34:10+08:00/2019-07-11 00:01:03+08:00/2019-04-24 15:43:13-04:00/,added final tests
Assembly,XanaduAI/blackbird,60e1ae43cd97e8759496a5ecc177b16f9b0b8299,2020-07-29T14:08:20Z,626e0596e98efc8990c87b36fc4b7a2ae349e8c2/fccaab1287bff46d01a95007d4daf05abcc6e513/,2020-09-29 11:05:58-04:00/2020-10-01 11:03:39-04:00/,"Support for for-loops (#24)

* Add for-loop

* Fix kwarg tests

* Add support for expressions in for

* Change var name to _in_for

* Add support for parameter lists

* Update example test-script

* Add support for start, stop, step ranges

* Pythonise for-loop

* Update blackbird files

* Update for-loop in listener

* Remove f-strings

* Fix expression in modes

* Add tests for for-loops and indexing

* Fix mode bug

* Add error raise test

* Add for-loop error test

* Add clear vars at enterProgram

* Remove string-support in modes

* Fix coverage

* Add tests

* Add error type

* Add array test"
Assembly,XanaduAI/blackbird,44506b80a0fd6f48a65978af1bd7c21ca6ebcb89,2020-05-25T03:00:46Z,60e1ae43cd97e8759496a5ecc177b16f9b0b8299/,2020-07-29 10:08:20-04:00/,Add bool and string cases to kwarg test
Assembly,XanaduAI/blackbird,958ade18cb6957a38249f6adb08b6a74053c14ec,2019-07-10T16:01:03Z,d20c4b125d7f2b6cc1b3e1f6f755faac56ff10be/,2020-02-05 14:43:57-05:00/,removed numpy from Blackbird
Assembly,XanaduAI/blackbird,c4636db73674d557ae7fe2060104a7d1d1ddd005,2018-11-28T22:31:11Z,97285481a7dba1f45d1c68384c2cf139afc7c1ee/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/7bddd635c106256a3b47a65a10b73d8372aeeeb6/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2019-04-01 16:30:41-04:00/2019-04-22 23:23:00-04:00/2018-12-04 14:48:34-05:00/2018-12-06 17:07:09-05:00/,bug fixes in makefile
Assembly,XanaduAI/blackbird,77a97eedc467e868ef214aadb3e6ce7af0f9598d,2018-12-06T17:30:31Z,0605d449fe20be9d121a76363119c9e314a855d5/9e1f0fd973ce5a4d59331a1d94250a62a626c6df/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/bbbeccdf86ac8bb2d5de901d9550de4c62afac48/f335c73a809834e1115b521be9bd95164c25e944/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2019-03-29 19:14:29-04:00/2018-12-13 15:43:14-05:00/2019-04-22 23:23:00-04:00/2018-12-07 17:09:29-05:00/2019-04-20 17:22:41-04:00/2018-12-06 17:07:09-05:00/,"finished C++ parser, now has feature parity with blackbird."
Assembly,XanaduAI/blackbird,0605d449fe20be9d121a76363119c9e314a855d5,2019-03-29T23:14:29Z,4e67f1cac71f5a9f1f0929414d8f2bf9c0b43787/8c6243b0533d2dced786865bbe24825094b247b8/,2019-03-29 19:49:37-04:00/2019-04-02 18:38:04-04:00/,finished C++ documentation
Assembly,XanaduAI/blackbird,5b2ccf28bd308b40cff5ac1c1f1a0d61dc587e17,2019-05-31T15:40:19Z,74f57ba8d13df0cb51f8dcd528b372bf47a8430b/a7dd1121e218982aec63ac77c137c708355c7e63/68cb2d06d7ac5974f306e8325532a5f9cbc2ed50/,2019-06-08 19:47:13-04:00/2019-06-08 19:48:57-04:00/2019-06-10 22:48:05-04:00/,added docs
Assembly,XanaduAI/blackbird,ec96c34eba6e19dc9b92e6ffd47af61b5e3582b0,2020-05-24T18:00:40Z,60e1ae43cd97e8759496a5ecc177b16f9b0b8299/44506b80a0fd6f48a65978af1bd7c21ca6ebcb89/,2020-07-29 10:08:20-04:00/2020-05-24 23:00:46-04:00/,Expand tests
Assembly,XanaduAI/blackbird,9699b82690149d3155833cbd943cbc24f4268468,2018-11-28T23:02:28Z,1bc47263012a7b83ca30948ece0a867ca0053d15/a8d4377a71a63df75c6a31441b5186574f6c76bd/cd31b2c03102ab1c71314b350684c0d2da6ffc51/8e46637c40257fadf495d45af49a7ec51686ad81/,2018-11-28 18:03:03-05:00/2018-12-04 15:49:26-05:00/2018-12-06 17:14:20-05:00/2018-11-28 18:04:35-05:00/,update readme
Assembly,XanaduAI/blackbird,8e46637c40257fadf495d45af49a7ec51686ad81,2018-11-28T23:04:35Z,69d8c341551689030a47d59d568ba1243ef6ce3a/cd31b2c03102ab1c71314b350684c0d2da6ffc51/,2018-11-28 18:07:40-05:00/2018-12-06 17:14:20-05:00/,typo
Assembly,XanaduAI/blackbird,763e0eb7ccdcc31b4297ca6152919e8cb4db31ae,2020-04-17T14:07:17Z,1bc671d159ad91aa43a79e7aa042eabafb42adca/,2020-05-24 14:00:24-04:00/,pin antlr to 4.7.2
Assembly,XanaduAI/blackbird,277a8f4ef6c9bbbfb6483384a5ab43c77196cf49,2019-05-30T23:19:41Z,be7f21659255679af9e46be9bca3308d49de3a1d/,2019-05-31 12:50:28-04:00/,added error handling
Assembly,XanaduAI/blackbird,0481345b36c9014634afc2cdafe1fa6a2e152f6c,2018-11-28T22:23:30Z,c4636db73674d557ae7fe2060104a7d1d1ddd005/,2018-11-28 17:31:11-05:00/,update makefile for new python package location
Assembly,XanaduAI/blackbird,ba0ea546d3baf4bc2d4ae9fe7809cbfa61baeac1,2019-04-02T20:13:16Z,47a6f9ac53101ea5ff9571386b87acbc4bf46c54/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/8c6243b0533d2dced786865bbe24825094b247b8/,2019-04-02 17:43:33-04:00/2019-04-23 19:55:06-04:00/2019-04-02 18:38:04-04:00/,docs suggestions
Assembly,XanaduAI/blackbird,bd91ef598efcc975caafe811581949e0dd9c0b63,2019-03-29T23:54:10Z,d53c4bb3f75c1df4228b91dc06eb04da7505e987/,2019-04-03 16:05:40-04:00/,updated readme
Assembly,XanaduAI/blackbird,a8d4377a71a63df75c6a31441b5186574f6c76bd,2018-12-04T20:49:26Z,60e1ae43cd97e8759496a5ecc177b16f9b0b8299/596d1fc7bfc7cc474e4e3aac81482319c29a85be/cd31b2c03102ab1c71314b350684c0d2da6ffc51/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/0fdaa8674b1ddf8831bc43c72e0ee7a446a9ccfb/bbbeccdf86ac8bb2d5de901d9550de4c62afac48/f335c73a809834e1115b521be9bd95164c25e944/,2020-07-29 10:08:20-04:00/2018-12-06 15:10:29-05:00/2018-12-06 17:14:20-05:00/2019-04-22 23:23:00-04:00/2019-04-03 15:59:19-04:00/2018-12-07 17:09:29-05:00/2019-04-20 17:22:41-04:00/,updated readme
Assembly,XanaduAI/blackbird,e8d6c7fb7b62e420e748d0ecd9ac9ac36469bd31,2020-05-23T02:02:28Z,60e1ae43cd97e8759496a5ecc177b16f9b0b8299/626e0596e98efc8990c87b36fc4b7a2ae349e8c2/,2020-07-29 10:08:20-04:00/2020-09-29 11:05:58-04:00/,Update bb-files
Assembly,XanaduAI/blackbird,d1957807f5391fbe812af055b781d2c07f1dc50e,2019-04-01T22:26:34Z,8c6243b0533d2dced786865bbe24825094b247b8/,2019-04-02 18:38:04-04:00/,updated doc conf
Assembly,XanaduAI/blackbird,d53c4bb3f75c1df4228b91dc06eb04da7505e987,2019-04-03T20:05:40Z,681a445c6a598e3fdad6570843b3e17a7b14e91e/98e43efdac0ab2fcb06c0913f32a14c6c0c7c405/,2019-04-04 21:03:02-04:00/2019-04-04 21:03:11-04:00/,updated readme based on new documentation
Assembly,XanaduAI/blackbird,66b5b32e32067096165d029bb057100f868717ed,2019-04-02T21:59:40Z,07019bdab128ef75e199b7b28658ad1636a9781a/,2019-04-23 13:59:17-04:00/,"fixed incorrect name in parse input with mocked device fixture, and updated rest of tests"
Assembly,XanaduAI/blackbird,69d8c341551689030a47d59d568ba1243ef6ce3a,2018-11-28T23:07:40Z,77a97eedc467e868ef214aadb3e6ce7af0f9598d/f335c73a809834e1115b521be9bd95164c25e944/cd31b2c03102ab1c71314b350684c0d2da6ffc51/,2018-12-06 12:30:31-05:00/2019-04-20 17:22:41-04:00/2018-12-06 17:14:20-05:00/,more changes
Assembly,XanaduAI/blackbird,626e0596e98efc8990c87b36fc4b7a2ae349e8c2,2020-09-29T15:05:58Z,2388941a1f6acc7dd9a3cf5d6b1b754927f0d143/fccaab1287bff46d01a95007d4daf05abcc6e513/,2020-09-29 11:59:49-04:00/2020-10-01 11:03:39-04:00/,"TDMProgram type support (#30)

* Add type to grammar

* Add declaretype

* Add tests

* Update parser and lexer files

* Add docstring to type

* Change name from type to programtype"
Assembly,XanaduAI/blackbird,11d1de40352b212d36c8d1ad6d1152cb80810cff,2019-05-30T22:58:55Z,e8d6c7fb7b62e420e748d0ecd9ac9ac36469bd31/5b2ccf28bd308b40cff5ac1c1f1a0d61dc587e17/626e0596e98efc8990c87b36fc4b7a2ae349e8c2/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/277a8f4ef6c9bbbfb6483384a5ab43c77196cf49/,2020-05-22 22:02:28-04:00/2019-05-31 11:40:19-04:00/2020-09-29 11:05:58-04:00/2020-07-29 10:08:20-04:00/2019-05-30 19:19:41-04:00/,added include capabilities
Assembly,XanaduAI/blackbird,1bc47263012a7b83ca30948ece0a867ca0053d15,2018-11-28T23:03:03Z,8e46637c40257fadf495d45af49a7ec51686ad81/,2018-11-28 18:04:35-05:00/,typo
Assembly,XanaduAI/blackbird,9e1f0fd973ce5a4d59331a1d94250a62a626c6df,2018-12-13T20:43:14Z,0605d449fe20be9d121a76363119c9e314a855d5/,2019-03-29 19:14:29-04:00/,"renamed parse_blackbird to parse, added overloading for strings"
Assembly,XanaduAI/blackbird,677d0b1f4f9fe1bb464b35173b69bd38554e4653,2018-11-30T00:23:22Z,59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e51023b13c04eb5d6111ed5d939651786825dd28/7bddd635c106256a3b47a65a10b73d8372aeeeb6/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2018-11-30 18:26:55-05:00/2018-12-03 19:27:53-05:00/2018-12-04 14:48:34-05:00/2019-04-22 23:23:00-04:00/2018-12-06 17:07:09-05:00/,arrays stored in variables
Assembly,XanaduAI/blackbird,74d70f3fb8a962329b8b0ca0705e401eac718fed,2018-12-06T22:07:09Z,8c6243b0533d2dced786865bbe24825094b247b8/0605d449fe20be9d121a76363119c9e314a855d5/52dbe382d348f5dc1bec1ade779aef347aa034ac/cfd961b58add55c0eff8449bdf5aaa43e14a4ee3/ba0ea546d3baf4bc2d4ae9fe7809cbfa61baeac1/9e1f0fd973ce5a4d59331a1d94250a62a626c6df/,2019-04-02 18:38:04-04:00/2019-03-29 19:14:29-04:00/2019-04-03 13:47:03-04:00/2019-04-24 15:55:05-04:00/2019-04-02 16:13:16-04:00/2018-12-13 15:43:14-05:00/,"moved library to the blackbird namespace, worked more on the documentation"
Assembly,XanaduAI/blackbird,84ac7863f302c56601a3c5bbf668260bc081ba47,2019-04-25T23:22:54Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/b5ee1385b456645748b8a7ccd2eba344dac9e3b1/11d1de40352b212d36c8d1ad6d1152cb80810cff/90ae5e85ff6b0959d33d0fe2fa6129d7096456a9/,2019-05-18 21:54:39-04:00/2019-05-20 17:28:36-04:00/2019-05-30 18:58:55-04:00/2019-05-03 13:12:45+08:00/,"fixed grammar bug, allowing operation to have both args and kwargs"
Assembly,XanaduAI/blackbird,e23d79c20159004122c29215d286e6052197293d,2019-04-01T02:35:15Z,81f0e0297b4845f2a1d9fe09710bf31410aa6afa/97285481a7dba1f45d1c68384c2cf139afc7c1ee/958ade18cb6957a38249f6adb08b6a74053c14ec/07019bdab128ef75e199b7b28658ad1636a9781a/f335c73a809834e1115b521be9bd95164c25e944/,2019-04-02 16:12:12-04:00/2019-04-01 16:30:41-04:00/2019-07-11 00:01:03+08:00/2019-04-23 13:59:17-04:00/2019-04-20 17:22:41-04:00/,added test for auxillary functions
Assembly,XanaduAI/blackbird,d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07,2019-04-23T23:55:06Z,84ac7863f302c56601a3c5bbf668260bc081ba47/11d1de40352b212d36c8d1ad6d1152cb80810cff/c41bff33e6e17b577dbf96c50386159cb83e6a12/806f3ae5bd92e4f032f360f26e0fcd2273b15786/b5ee1385b456645748b8a7ccd2eba344dac9e3b1/ade25a056fe14478fba46c52cabda07692c6035d/4b7b7c55434f8bbb2ae8816618cb8ee41dc003fe/958ade18cb6957a38249f6adb08b6a74053c14ec/d20c4b125d7f2b6cc1b3e1f6f755faac56ff10be/17799b7362fe81e7e11063efa2d696eca6ba6934/,2019-04-25 19:22:54-04:00/2019-05-30 18:58:55-04:00/2019-04-23 20:24:15-04:00/2019-04-23 23:53:45-04:00/2019-05-20 17:28:36-04:00/2019-04-24 15:43:13-04:00/2019-04-23 20:21:00-04:00/2019-07-11 00:01:03+08:00/2020-02-05 14:43:57-05:00/2019-04-25 15:45:15-04:00/,added program files
Assembly,XanaduAI/blackbird,c400fc0a84b07002fd151659318053598fae81ca,2018-11-28T21:59:24Z,8ebc309a8fd0ce6892866bf868d17119df39fc95/90ae5e85ff6b0959d33d0fe2fa6129d7096456a9/3d47b1f1d2e94223ee46f66b4d378b41fd486726/639ff30f6ecb7d10d4af48bf68ff3a338bf7805f/2d57a63e82f2b27a855d9cdf8c2338da9f1cea6b/d0c96bb235a7f316395cd248c1806345e3a81f3b/079681f090f8fe7f2499b503b124f632e0abd22b/71e6fbe37a9c95877f1f129c6fe0f1a0e4567be1/97285481a7dba1f45d1c68384c2cf139afc7c1ee/3d6058ffe87c2318dd6cbc652fe9eccc54338c28/c4636db73674d557ae7fe2060104a7d1d1ddd005/b6a1f72f910b171e151e6320e39d4221ba3684e9/f335c73a809834e1115b521be9bd95164c25e944/,2019-04-03 16:17:26-04:00/2019-05-03 13:12:45+08:00/2020-02-04 17:36:59-05:00/2019-04-03 16:21:42-04:00/2019-04-03 16:27:32-04:00/2019-04-02 17:21:22-04:00/2019-04-20 17:30:36-04:00/2018-11-28 17:19:44-05:00/2019-04-01 16:30:41-04:00/2019-08-02 15:30:52+08:00/2018-11-28 17:31:11-05:00/2019-05-18 22:05:51-04:00/2019-04-20 17:22:41-04:00/,added boilerplate
Assembly,XanaduAI/blackbird,d0c96bb235a7f316395cd248c1806345e3a81f3b,2019-04-02T21:21:22Z,66b5b32e32067096165d029bb057100f868717ed/d561f0d2ab53e4c5dca7306a9bbc9b50b0cd5768/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/ade25a056fe14478fba46c52cabda07692c6035d/07019bdab128ef75e199b7b28658ad1636a9781a/,2019-04-02 17:59:40-04:00/2019-05-31 12:39:19-04:00/2019-04-23 19:55:06-04:00/2019-04-24 15:43:13-04:00/2019-04-23 13:59:17-04:00/,test suggestions
Assembly,XanaduAI/blackbird,e51023b13c04eb5d6111ed5d939651786825dd28,2018-12-04T00:27:53Z,a8d4377a71a63df75c6a31441b5186574f6c76bd/77a97eedc467e868ef214aadb3e6ce7af0f9598d/7bddd635c106256a3b47a65a10b73d8372aeeeb6/e0c4aad163fb3312ec118082cbc089fc9a904c02/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/1e89d7a1de99e4073afcaa24d6a54a53be77658c/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2018-12-04 15:49:26-05:00/2018-12-06 12:30:31-05:00/2018-12-04 14:48:34-05:00/2018-12-04 01:10:50-05:00/2019-04-22 23:23:00-04:00/2018-12-06 00:29:03-05:00/2018-12-06 17:07:09-05:00/,almost there in C++
Assembly,XanaduAI/blackbird,c1571df5560bb77e96b1d1425865d6242490ba72,2018-11-28T22:03:03Z,cd31b2c03102ab1c71314b350684c0d2da6ffc51/,2018-12-06 17:14:20-05:00/,updated readme
Assembly,XanaduAI/blackbird,4298bfd93ea4e98cf4abdfddd123c4f628268833,2020-05-22T19:33:40Z,ec96c34eba6e19dc9b92e6ffd47af61b5e3582b0/,2020-05-24 14:00:40-04:00/,Add test for list kwargs
Assembly,XanaduAI/blackbird,07019bdab128ef75e199b7b28658ad1636a9781a,2019-04-23T17:59:17Z,6c84308cf3200c00cb31a80aefe94c12cbd5f3c2/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/ade25a056fe14478fba46c52cabda07692c6035d/,2019-07-06 08:58:42-04:00/2019-04-23 19:55:06-04:00/2019-04-24 15:43:13-04:00/,fixed tests
Assembly,XanaduAI/blackbird,41267c50009698842c498fe03f8a65bcd8711a47,2019-04-02T22:38:17Z,f84a7903f8842629fc0f173b04f61215dc909bea/,2019-04-03 15:28:44-04:00/,docs changes
Assembly,XanaduAI/blackbird,f335c73a809834e1115b521be9bd95164c25e944,2019-04-20T21:22:41Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/9c786bf4d71b8fc76b65509445d4df63b47d457d/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/3a409ac02542915c2b8183f5e2f25554043a95fd/806f3ae5bd92e4f032f360f26e0fcd2273b15786/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/ade25a056fe14478fba46c52cabda07692c6035d/fdf725dd85053326e5c9ee86010740d1b0dadba9/958ade18cb6957a38249f6adb08b6a74053c14ec/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/07019bdab128ef75e199b7b28658ad1636a9781a/,2019-05-18 21:54:39-04:00/2019-04-23 14:45:47-04:00/2020-07-29 10:08:20-04:00/2019-05-02 13:34:10+08:00/2019-04-23 23:53:45-04:00/2019-04-23 19:55:06-04:00/2019-04-24 15:43:13-04:00/2019-04-25 13:19:00-04:00/2019-07-11 00:01:03+08:00/2019-04-22 23:23:00-04:00/2019-04-23 13:59:17-04:00/,added support for regref transforms
Assembly,XanaduAI/blackbird,97285481a7dba1f45d1c68384c2cf139afc7c1ee,2019-04-01T20:30:41Z,d561f0d2ab53e4c5dca7306a9bbc9b50b0cd5768/d0c96bb235a7f316395cd248c1806345e3a81f3b/806f3ae5bd92e4f032f360f26e0fcd2273b15786/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/ade25a056fe14478fba46c52cabda07692c6035d/958ade18cb6957a38249f6adb08b6a74053c14ec/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/07019bdab128ef75e199b7b28658ad1636a9781a/f335c73a809834e1115b521be9bd95164c25e944/,2019-05-31 12:39:19-04:00/2019-04-02 17:21:22-04:00/2019-04-23 23:53:45-04:00/2019-04-23 19:55:06-04:00/2019-04-24 15:43:13-04:00/2019-07-11 00:01:03+08:00/2019-04-22 23:23:00-04:00/2019-04-23 13:59:17-04:00/2019-04-20 17:22:41-04:00/,added tests for python parser
Assembly,XanaduAI/blackbird,ade25a056fe14478fba46c52cabda07692c6035d,2019-04-24T19:43:13Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/84ac7863f302c56601a3c5bbf668260bc081ba47/6c84308cf3200c00cb31a80aefe94c12cbd5f3c2/958ade18cb6957a38249f6adb08b6a74053c14ec/,2019-05-18 21:54:39-04:00/2019-04-25 19:22:54-04:00/2019-07-06 08:58:42-04:00/2019-07-11 00:01:03+08:00/,suggested changes
Assembly,XanaduAI/blackbird,f14e454792f1f5a49bd17fd0a15428394061525f,2018-12-07T23:21:01Z,0605d449fe20be9d121a76363119c9e314a855d5/4e67f1cac71f5a9f1f0929414d8f2bf9c0b43787/3a409ac02542915c2b8183f5e2f25554043a95fd/8c6243b0533d2dced786865bbe24825094b247b8/,2019-03-29 19:14:29-04:00/2019-03-29 19:49:37-04:00/2019-05-02 13:34:10+08:00/2019-04-02 18:38:04-04:00/,added C++ simulator to docs
Assembly,XanaduAI/blackbird,d561f0d2ab53e4c5dca7306a9bbc9b50b0cd5768,2019-05-31T16:39:19Z,be7f21659255679af9e46be9bca3308d49de3a1d/68cb2d06d7ac5974f306e8325532a5f9cbc2ed50/,2019-05-31 12:50:28-04:00/2019-06-10 22:48:05-04:00/,added include tests
Assembly,XanaduAI/blackbird,bbbeccdf86ac8bb2d5de901d9550de4c62afac48,2018-12-07T22:09:29Z,9e1f0fd973ce5a4d59331a1d94250a62a626c6df/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/5880031d5a2056e52370aea901ae61762fa27f1f/,2018-12-13 15:43:14-05:00/2019-04-22 23:23:00-04:00/2018-12-07 17:48:06-05:00/,added C++ chip0 simulator
Assembly,XanaduAI/blackbird,47a6f9ac53101ea5ff9571386b87acbc4bf46c54,2019-04-02T21:43:33Z,d53c4bb3f75c1df4228b91dc06eb04da7505e987/8c6243b0533d2dced786865bbe24825094b247b8/,2019-04-03 16:05:40-04:00/2019-04-02 18:38:04-04:00/,Update index.rst
Assembly,XanaduAI/blackbird,eb6a54cd876dc7b5236f6ecdd1335ef54e0a3251,2018-11-23T02:46:17Z,d68b90d08e0f9eae1ce5f7fcd017c3cf3085a438/a7d806e43eea150e7c784b04b48848047c0db7fe/63d0b0d3f1cf7c925e48e8f981f875348384d8b8/3a409ac02542915c2b8183f5e2f25554043a95fd/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e51023b13c04eb5d6111ed5d939651786825dd28/e0c4aad163fb3312ec118082cbc089fc9a904c02/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/,2018-11-28 16:58:38-05:00/2018-11-22 22:37:57-05:00/2018-11-23 11:29:40-05:00/2019-05-02 13:34:10+08:00/2018-11-30 18:26:55-05:00/2018-12-03 19:27:53-05:00/2018-12-04 01:10:50-05:00/2019-04-22 23:23:00-04:00/,updates
Assembly,XanaduAI/blackbird,b5ee1385b456645748b8a7ccd2eba344dac9e3b1,2019-05-20T21:28:36Z,e68a2679659f58430cefada0112e82cc68032a73/3b8fca5742f83558de670b20968404d3df1fabb8/,2019-05-21 21:27:53-04:00/2019-05-21 21:30:55-04:00/,suggested changes
Assembly,XanaduAI/blackbird,de5c65e6b15ceda687b761bacbf7aa92737c5e8c,2018-11-22T18:21:51Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/b48d400c111a63c0f3b0d955b0af8567fbef4b0f/5e169aae09baf52329d8be42c54432bd9ef9e61d/e51023b13c04eb5d6111ed5d939651786825dd28/cbb4f1362e7ff5cd73b48c63f80cb3bc955fad14/fdf725dd85053326e5c9ee86010740d1b0dadba9/5ee1a2a74dfbade0374fe45204a31180b7759f87/f335c73a809834e1115b521be9bd95164c25e944/eb6a54cd876dc7b5236f6ecdd1335ef54e0a3251/,2019-05-18 21:54:39-04:00/2019-04-22 23:23:00-04:00/2020-07-29 10:08:20-04:00/2018-11-22 13:47:25-05:00/2018-11-22 14:00:18-05:00/2018-12-03 19:27:53-05:00/2018-11-22 18:29:56-05:00/2019-04-25 13:19:00-04:00/2018-11-22 15:14:17-05:00/2019-04-20 17:22:41-04:00/2018-11-22 21:46:17-05:00/,initial commit
Assembly,XanaduAI/blackbird,7bddd635c106256a3b47a65a10b73d8372aeeeb6,2018-12-04T19:48:34Z,77a97eedc467e868ef214aadb3e6ce7af0f9598d/596d1fc7bfc7cc474e4e3aac81482319c29a85be/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/1e89d7a1de99e4073afcaa24d6a54a53be77658c/bbbeccdf86ac8bb2d5de901d9550de4c62afac48/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2018-12-06 12:30:31-05:00/2018-12-06 15:10:29-05:00/2019-04-22 23:23:00-04:00/2018-12-06 00:29:03-05:00/2018-12-07 17:09:29-05:00/2018-12-06 17:07:09-05:00/,finished C++ parser
Assembly,XanaduAI/blackbird,3d47b1f1d2e94223ee46f66b4d378b41fd486726,2020-02-04T22:36:59Z,763e0eb7ccdcc31b4297ca6152919e8cb4db31ae/b458cfaf32ac34c7c7f5b7e7413f133230d481b0/b4b32c3d790626ed3f9636be2788440f0277af65/,2020-04-17 23:25:17+09:18/2020-02-05 14:44:53-05:00/2020-05-22 22:03:05-04:00/,Pin antlr4 to version 4.7.2
Assembly,XanaduAI/blackbird,588540531cc8336aeed4071d3f16bd6297c27e7b,2019-03-29T23:51:42Z,d53c4bb3f75c1df4228b91dc06eb04da7505e987/bd91ef598efcc975caafe811581949e0dd9c0b63/,2019-04-03 16:05:40-04:00/2019-03-29 19:54:10-04:00/,updated readme
Assembly,XanaduAI/blackbird,c7cd663fb754ea1f7ae8368e10ffdc67e473ec93,2018-12-05T23:35:21Z,8c6243b0533d2dced786865bbe24825094b247b8/612358ea1304cb47fb72f668085407e547aeaa08/0605d449fe20be9d121a76363119c9e314a855d5/d0497131888421250a6faabcb9c6a79efefa69f9/74d70f3fb8a962329b8b0ca0705e401eac718fed/f14e454792f1f5a49bd17fd0a15428394061525f/720fd5eb6492434784f2449b35def379ebc9d93b/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/596d1fc7bfc7cc474e4e3aac81482319c29a85be/ba0ea546d3baf4bc2d4ae9fe7809cbfa61baeac1/f335c73a809834e1115b521be9bd95164c25e944/cc0da1ce4f2cd287e9f4b7ad331d19cabb8f70d5/e23d79c20159004122c29215d286e6052197293d/f84a7903f8842629fc0f173b04f61215dc909bea/806f3ae5bd92e4f032f360f26e0fcd2273b15786/9fa33bdba55cae158340a4077dbce3277d949a32/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/fdf725dd85053326e5c9ee86010740d1b0dadba9/958ade18cb6957a38249f6adb08b6a74053c14ec/9e1f0fd973ce5a4d59331a1d94250a62a626c6df/1e89d7a1de99e4073afcaa24d6a54a53be77658c/,2019-04-02 18:38:04-04:00/2019-04-02 17:37:41-04:00/2019-03-29 19:14:29-04:00/2019-04-23 14:25:35-04:00/2018-12-06 17:07:09-05:00/2018-12-07 18:21:01-05:00/2019-07-05 22:14:08-04:00/2019-04-22 23:23:00-04:00/2018-12-06 15:10:29-05:00/2019-04-02 16:13:16-04:00/2019-04-20 17:22:41-04:00/2019-04-22 17:31:11-04:00/2019-03-31 22:35:15-04:00/2019-04-03 15:28:44-04:00/2019-04-23 23:53:45-04:00/2019-04-02 11:56:17-04:00/2019-04-23 19:55:06-04:00/2019-04-25 13:19:00-04:00/2019-07-11 00:01:03+08:00/2018-12-13 15:43:14-05:00/2018-12-06 00:29:03-05:00/,added documentation
Assembly,XanaduAI/blackbird,0a853a942fbdacd533d7801cd2bb2e4ac4856d56,2019-04-23T23:59:37Z,3a409ac02542915c2b8183f5e2f25554043a95fd/,2019-05-02 13:34:10+08:00/,suggested change
Assembly,XanaduAI/blackbird,810aefdcc3a6d752e0982a32bbe114c872ccd430,2018-11-28T22:34:55Z,69d8c341551689030a47d59d568ba1243ef6ce3a/8e46637c40257fadf495d45af49a7ec51686ad81/cd31b2c03102ab1c71314b350684c0d2da6ffc51/9699b82690149d3155833cbd943cbc24f4268468/,2018-11-28 18:07:40-05:00/2018-11-28 18:04:35-05:00/2018-12-06 17:14:20-05:00/2018-11-28 18:02:28-05:00/,update readme
Assembly,XanaduAI/blackbird,d68b90d08e0f9eae1ce5f7fcd017c3cf3085a438,2018-11-28T21:58:38Z,59c0e86c95865b7e4c17d683ae4d719b5590f1a7/8c6243b0533d2dced786865bbe24825094b247b8/066333f797ff2cc3cf08dbc766844078c161667f/cd31b2c03102ab1c71314b350684c0d2da6ffc51/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/8e46637c40257fadf495d45af49a7ec51686ad81/4e67f1cac71f5a9f1f0929414d8f2bf9c0b43787/3a409ac02542915c2b8183f5e2f25554043a95fd/c400fc0a84b07002fd151659318053598fae81ca/c7cd663fb754ea1f7ae8368e10ffdc67e473ec93/69d8c341551689030a47d59d568ba1243ef6ce3a/97285481a7dba1f45d1c68384c2cf139afc7c1ee/f335c73a809834e1115b521be9bd95164c25e944/a8d4377a71a63df75c6a31441b5186574f6c76bd/e23d79c20159004122c29215d286e6052197293d/810aefdcc3a6d752e0982a32bbe114c872ccd430/806f3ae5bd92e4f032f360f26e0fcd2273b15786/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/958ade18cb6957a38249f6adb08b6a74053c14ec/d20c4b125d7f2b6cc1b3e1f6f755faac56ff10be/c1571df5560bb77e96b1d1425865d6242490ba72/9699b82690149d3155833cbd943cbc24f4268468/,2018-11-30 18:26:55-05:00/2019-04-02 18:38:04-04:00/2020-05-22 15:33:30-04:00/2018-12-06 17:14:20-05:00/2019-04-22 23:23:00-04:00/2020-07-29 10:08:20-04:00/2018-11-28 18:04:35-05:00/2019-03-29 19:49:37-04:00/2019-05-02 13:34:10+08:00/2018-11-28 16:59:24-05:00/2018-12-05 18:35:21-05:00/2018-11-28 18:07:40-05:00/2019-04-01 16:30:41-04:00/2019-04-20 17:22:41-04:00/2018-12-04 15:49:26-05:00/2019-03-31 22:35:15-04:00/2018-11-28 17:34:55-05:00/2019-04-23 23:53:45-04:00/2019-04-23 19:55:06-04:00/2019-07-11 00:01:03+08:00/2020-02-05 14:43:57-05:00/2018-11-28 17:03:03-05:00/2018-11-28 18:02:28-05:00/,updated readme
Assembly,XanaduAI/blackbird,1e89d7a1de99e4073afcaa24d6a54a53be77658c,2018-12-06T05:29:03Z,e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/77a97eedc467e868ef214aadb3e6ce7af0f9598d/596d1fc7bfc7cc474e4e3aac81482319c29a85be/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2019-04-22 23:23:00-04:00/2018-12-06 12:30:31-05:00/2018-12-06 15:10:29-05:00/2018-12-06 17:07:09-05:00/,added more gates to C++ parser
Assembly,XanaduAI/blackbird,5e169aae09baf52329d8be42c54432bd9ef9e61d,2018-11-22T19:00:18Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/a8d4377a71a63df75c6a31441b5186574f6c76bd/63d0b0d3f1cf7c925e48e8f981f875348384d8b8/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/11d1de40352b212d36c8d1ad6d1152cb80810cff/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e8d6c7fb7b62e420e748d0ecd9ac9ac36469bd31/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/cbb4f1362e7ff5cd73b48c63f80cb3bc955fad14/fdf725dd85053326e5c9ee86010740d1b0dadba9/5ee1a2a74dfbade0374fe45204a31180b7759f87/f335c73a809834e1115b521be9bd95164c25e944/,2019-05-18 21:54:39-04:00/2018-12-04 15:49:26-05:00/2018-11-23 11:29:40-05:00/2019-04-22 23:23:00-04:00/2019-05-30 18:58:55-04:00/2018-11-30 18:26:55-05:00/2020-05-22 22:02:28-04:00/2020-07-29 10:08:20-04:00/2018-11-22 18:29:56-05:00/2019-04-25 13:19:00-04:00/2018-11-22 15:14:17-05:00/2019-04-20 17:22:41-04:00/,begun create SF listener
Assembly,XanaduAI/blackbird,2e18208b5c241ad9f8482c000383fab27b6a8913,2019-07-10T08:38:52Z,3d47b1f1d2e94223ee46f66b4d378b41fd486726/,2020-02-04 17:36:59-05:00/,version increment
Assembly,XanaduAI/blackbird,8efe12fcb73d09461aa18ff29805a580b738a1f5,2018-11-29T22:20:52Z,677d0b1f4f9fe1bb464b35173b69bd38554e4653/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e51023b13c04eb5d6111ed5d939651786825dd28/7bddd635c106256a3b47a65a10b73d8372aeeeb6/e0c4aad163fb3312ec118082cbc089fc9a904c02/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2018-11-29 19:23:22-05:00/2018-11-30 18:26:55-05:00/2018-12-03 19:27:53-05:00/2018-12-04 14:48:34-05:00/2018-12-04 01:10:50-05:00/2018-12-06 17:07:09-05:00/,added more numeric types
Assembly,XanaduAI/blackbird,8c6243b0533d2dced786865bbe24825094b247b8,2019-04-02T22:38:04Z,3a409ac02542915c2b8183f5e2f25554043a95fd/af4bd2f99ed9a6e5dcf8a7d2944465996bb4260a/0a853a942fbdacd533d7801cd2bb2e4ac4856d56/52dbe382d348f5dc1bec1ade779aef347aa034ac/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/cfd961b58add55c0eff8449bdf5aaa43e14a4ee3/,2019-05-02 13:34:10+08:00/2019-04-03 15:18:33-04:00/2019-04-23 19:59:37-04:00/2019-04-03 13:47:03-04:00/2019-04-23 19:55:06-04:00/2019-04-24 15:55:05-04:00/,docs changes
Assembly,XanaduAI/blackbird,a7d806e43eea150e7c784b04b48848047c0db7fe,2018-11-23T03:37:57Z,d68b90d08e0f9eae1ce5f7fcd017c3cf3085a438/63d0b0d3f1cf7c925e48e8f981f875348384d8b8/3a409ac02542915c2b8183f5e2f25554043a95fd/,2018-11-28 16:58:38-05:00/2018-11-23 11:29:40-05:00/2019-05-02 13:34:10+08:00/,added docstrings
Assembly,XanaduAI/blackbird,596d1fc7bfc7cc474e4e3aac81482319c29a85be,2018-12-06T20:10:29Z,4e67f1cac71f5a9f1f0929414d8f2bf9c0b43787/ba0ea546d3baf4bc2d4ae9fe7809cbfa61baeac1/9e1f0fd973ce5a4d59331a1d94250a62a626c6df/0fdaa8674b1ddf8831bc43c72e0ee7a446a9ccfb/bbbeccdf86ac8bb2d5de901d9550de4c62afac48/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2019-03-29 19:49:37-04:00/2019-04-02 16:13:16-04:00/2018-12-13 15:43:14-05:00/2019-04-03 15:59:19-04:00/2018-12-07 17:09:29-05:00/2018-12-06 17:07:09-05:00/,converted Blackbird C++ to a library
Assembly,XanaduAI/blackbird,cbb4f1362e7ff5cd73b48c63f80cb3bc955fad14,2018-11-22T23:29:56Z,d68b90d08e0f9eae1ce5f7fcd017c3cf3085a438/a7d806e43eea150e7c784b04b48848047c0db7fe/a8d4377a71a63df75c6a31441b5186574f6c76bd/63d0b0d3f1cf7c925e48e8f981f875348384d8b8/84ac7863f302c56601a3c5bbf668260bc081ba47/3a409ac02542915c2b8183f5e2f25554043a95fd/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e8d6c7fb7b62e420e748d0ecd9ac9ac36469bd31/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/e51023b13c04eb5d6111ed5d939651786825dd28/066333f797ff2cc3cf08dbc766844078c161667f/7bddd635c106256a3b47a65a10b73d8372aeeeb6/e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/f335c73a809834e1115b521be9bd95164c25e944/eb6a54cd876dc7b5236f6ecdd1335ef54e0a3251/,2018-11-28 16:58:38-05:00/2018-11-22 22:37:57-05:00/2018-12-04 15:49:26-05:00/2018-11-23 11:29:40-05:00/2019-04-25 19:22:54-04:00/2019-05-02 13:34:10+08:00/2018-11-30 18:26:55-05:00/2020-05-22 22:02:28-04:00/2020-07-29 10:08:20-04:00/2018-12-03 19:27:53-05:00/2020-05-22 15:33:30-04:00/2018-12-04 14:48:34-05:00/2019-04-22 23:23:00-04:00/2019-04-20 17:22:41-04:00/2018-11-22 21:46:17-05:00/,worked on the python listener
Assembly,XanaduAI/blackbird,f9776a888c4439d204b95dac5b0f0077ae4b6573,2019-05-03T04:59:18Z,ecff54c1c8e96e6fe30ff3be7bc380d65c451d39/,2019-05-22 13:23:34-04:00/,change line endings to unix
Assembly,XanaduAI/blackbird,a8fe9d78289fd6d2360184784e35978dfaac8ca8,2019-05-19T01:54:39Z,eff53ccdb11b0d2637f200b01e3713c5752c5036/11d1de40352b212d36c8d1ad6d1152cb80810cff/be7f21659255679af9e46be9bca3308d49de3a1d/7262d499c412a66c4baf71cf0387b39b7c9744ee/b5ee1385b456645748b8a7ccd2eba344dac9e3b1/958ade18cb6957a38249f6adb08b6a74053c14ec/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/b6a1f72f910b171e151e6320e39d4221ba3684e9/e2fd7b1e13fd616ed85b45291132bfc805006fb0/,2019-05-18 22:14:46-04:00/2019-05-30 18:58:55-04:00/2019-05-31 12:50:28-04:00/2019-05-20 14:28:15-04:00/2019-05-20 17:28:36-04:00/2019-07-11 00:01:03+08:00/2020-07-29 10:08:20-04:00/2019-05-18 22:05:51-04:00/2019-05-20 18:11:17-04:00/,finished adding templates
Assembly,XanaduAI/blackbird,066333f797ff2cc3cf08dbc766844078c161667f,2020-05-22T19:33:30Z,60e1ae43cd97e8759496a5ecc177b16f9b0b8299/,2020-07-29 10:08:20-04:00/,Add support for list kwargs
Assembly,XanaduAI/blackbird,ecff54c1c8e96e6fe30ff3be7bc380d65c451d39,2019-05-22T17:23:34Z,2e18208b5c241ad9f8482c000383fab27b6a8913/,2019-07-10 16:38:52+08:00/,version bump
Assembly,XanaduAI/blackbird,e3f330ca60fae01862d10eab31dfbc93785dbbc2,2018-11-29T21:31:56Z,677d0b1f4f9fe1bb464b35173b69bd38554e4653/59c0e86c95865b7e4c17d683ae4d719b5590f1a7/e51023b13c04eb5d6111ed5d939651786825dd28/7bddd635c106256a3b47a65a10b73d8372aeeeb6/8efe12fcb73d09461aa18ff29805a580b738a1f5/74d70f3fb8a962329b8b0ca0705e401eac718fed/,2018-11-29 19:23:22-05:00/2018-11-30 18:26:55-05:00/2018-12-03 19:27:53-05:00/2018-12-04 14:48:34-05:00/2018-11-29 17:20:52-05:00/2018-12-06 17:07:09-05:00/,array parsing working in C++
Assembly,XanaduAI/blackbird,cd31b2c03102ab1c71314b350684c0d2da6ffc51,2018-12-06T22:14:20Z,f14e454792f1f5a49bd17fd0a15428394061525f/4e67f1cac71f5a9f1f0929414d8f2bf9c0b43787/9c786bf4d71b8fc76b65509445d4df63b47d457d/3a409ac02542915c2b8183f5e2f25554043a95fd/8c6243b0533d2dced786865bbe24825094b247b8/,2018-12-07 18:21:01-05:00/2019-03-29 19:49:37-04:00/2019-04-23 14:45:47-04:00/2019-05-02 13:34:10+08:00/2019-04-02 18:38:04-04:00/,updated readme
Assembly,XanaduAI/blackbird,e071a188b1e5ac57491deaa4aa4a3ab2a57b1089,2019-04-23T03:23:00Z,a8fe9d78289fd6d2360184784e35978dfaac8ca8/84ac7863f302c56601a3c5bbf668260bc081ba47/9c786bf4d71b8fc76b65509445d4df63b47d457d/11d1de40352b212d36c8d1ad6d1152cb80810cff/e8d6c7fb7b62e420e748d0ecd9ac9ac36469bd31/3a409ac02542915c2b8183f5e2f25554043a95fd/fdf725dd85053326e5c9ee86010740d1b0dadba9/ade25a056fe14478fba46c52cabda07692c6035d/d4bf317caa0fa3ae3793fa849f0c5ff9a58eef07/958ade18cb6957a38249f6adb08b6a74053c14ec/d20c4b125d7f2b6cc1b3e1f6f755faac56ff10be/60e1ae43cd97e8759496a5ecc177b16f9b0b8299/626e0596e98efc8990c87b36fc4b7a2ae349e8c2/f17dafd8b2e502d8308f3c94e2bf3fba912295a7/,2019-05-18 21:54:39-04:00/2019-04-25 19:22:54-04:00/2019-04-23 14:45:47-04:00/2019-05-30 18:58:55-04:00/2020-05-22 22:02:28-04:00/2019-05-02 13:34:10+08:00/2019-04-25 13:19:00-04:00/2019-04-24 15:43:13-04:00/2019-04-23 19:55:06-04:00/2019-07-11 00:01:03+08:00/2020-02-05 14:43:57-05:00/2020-07-29 10:08:20-04:00/2020-09-29 11:05:58-04:00/2019-04-23 20:37:45-04:00/,revised blackbird syntax
Assembly,XanaduAI/blackbird,079681f090f8fe7f2499b503b124f632e0abd22b,2019-04-20T21:30:36Z,e071a188b1e5ac57491deaa4aa4a3ab2a57b1089/11d1de40352b212d36c8d1ad6d1152cb80810cff/,2019-04-22 23:23:00-04:00/2019-05-30 18:58:55-04:00/,changed library name
Assembly,BBN-Q/pyqgl2,a7895d9422cf21b9beb83be6c650e1809fba5e48,2015-12-11T03:38:33Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/c1ca2f051f40ec7f16a6c338ecf33f30a4e18af4/,2017-04-06 10:01:35-04:00/2016-04-06 16:30:50-04:00/,"start to use type declarations consistently

there's more to do; this is incomplete

instead of making assumptions about the type signatures
of functions, actually use the declared types"
Assembly,BBN-Q/pyqgl2,2b1458eb04bb1aba1e1ffad24355ab5fa71888bc,2019-06-12T20:31:27Z,dd9394c625a7c6c5138f3534431a34add267f79b/,2019-06-21 11:30:29-04:00/,minor tweeks; still can't do this in QGL2 cause we don't have parameters of the real Qubit
Assembly,BBN-Q/pyqgl2,7fb2079fe254e3bb6e93901d9e840fce4e28f31f,2016-03-17T17:38:47Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/6590fa7704526ae87459c5311c937b3b83173ff6/1195b2ce634600cf44babc441b894500262dee9f/9800d938f4f5f08f003c6d16ece745e6e8273bb2/6aa0822aa786a03660822ff5bf1013e632d87f5f/bb728282e2365260f4ebd992c1c79b1c6e550856/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2017-04-13 10:01:57-04:00/2016-05-13 14:58:56-04:00/2016-03-31 19:12:10-04:00/2016-09-12 16:34:06-04:00/2017-03-23 17:09:22-04:00/2016-04-20 13:31:49-04:00/2017-03-30 15:26:04-04:00/2016-03-25 16:12:15-04:00/,"stubs for QGL1 functions used in BasicSequences. Note that class init methods have been turned into functions, and *args and **kwargs have been replaced with explicit args where possible"
Assembly,BBN-Q/pyqgl2,2343939e5e65d994bb327472f1e894d5c5194562,2015-12-08T00:25:28Z,b24538119fd6d1243f08b19ab30a159522b8abe9/910eced8ea0d5aba83e8cb61715cbe11da1d6f9e/,2016-02-26 16:25:29-05:00/2015-12-08 16:44:49-05:00/,"clean up some sketches no longer needed

use inline_function instead of looping here"
Assembly,BBN-Q/pyqgl2,4f8cc5e1f1ea5b131cd472dd99ded14e823eea25,2016-03-17T17:42:50Z,96178b3bd09987e99f74f3d6f0675a23ceeed5bc/2e89a9d65c25c114e3461b4d561f416a32ca558d/be7caa4cde15e70454c4293c30592b7591427b77/604df34f56aec9719c476e98ac77a99a3544616b/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2016-03-31 19:15:33-04:00/2019-06-11 13:51:27-04:00/2016-04-13 18:11:45-04:00/2016-07-28 10:57:23-04:00/2016-03-25 16:12:15-04:00/,"Define GATHER_SEQUENCES: a method that should not be executed, but be replaced with the cumulative listOfSequences in place. Define @qgl2stub for a qgl1 stub function whose params we should check, but do not inline the function. Define sequence and control as valid annotation types."
Assembly,BBN-Q/pyqgl2,078bb270283b4aef27dd21da0ace8cbedbb56cbe,2016-04-06T19:04:22Z,0024e44a9ebbf347bbad90151d759fc2060656da/,2016-04-20 12:45:43-04:00/,remove my output from checked in notebook
Assembly,BBN-Q/pyqgl2,fc49e4a49c848db370cfa211e235bb34b1330a74,2016-05-17T16:26:04Z,ad76ab4ac298e83e49d22d3bcfeb3c28ac24eddc/443dc36a357cab819eaf9330f620510128dee388/,2017-03-23 22:15:42-04:00/2016-05-17 13:34:58-04:00/,"accept 'not MEAS(qbit)' as a conditional for if

need to make the matching change for while loops"
Assembly,BBN-Q/pyqgl2,1b2292dd3e866e3080f526213092cb05a61dda9b,2016-04-26T19:20:58Z,718a3d9a3a12e92ce382bd73a4048991b7aaf039/,2016-05-25 18:37:16-04:00/,"invoke the specializer

this was commented out in an earlier revision,
which doesn't make sense because without this
step nothing will work.  (I might have been
tinkering with something prior to vacation, but
I don't remember why I removed this)"
Assembly,BBN-Q/pyqgl2,a1006b4d5356de8b46740145fa7e1a6f6aeeae41,2016-03-02T21:46:45Z,d3b70552de6ef1a650ed4c9054f442ce781ec8c2/,2016-03-03 11:58:58-05:00/,"improve documentation; add level -1

the level -1 is used to disable all messages,
including the most high priority"
Assembly,BBN-Q/pyqgl2,666d5a68107cebbc708a030d40c307e514aacb03,2016-10-07T16:12:44Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/9c0ce6f0fff79d660166c55a299465390c4cde31/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-13 10:01:57-04:00/2017-04-07 15:05:12-04:00/2017-03-22 17:22:30-04:00/2017-03-22 16:13:42-04:00/,"simple tests for issue 84

make sure that if the expansion of a function is empty,
the preprocessor doesn't fail"
Assembly,BBN-Q/pyqgl2,18bf238c4abfc3dc50eec0b858afd860f148661d,2019-06-21T15:47:12Z,ce51c3da3e5924e22bbbe958258a7042f1cf7a51/,2019-06-25 15:48:25-04:00/,turn idPulseCentered into a more generic pulseCentered
Assembly,BBN-Q/pyqgl2,8db82a413fdaa013dabf739c5fe1d85b1cc05479,2016-01-22T18:48:23Z,e57ed44d4a076aaced4afbee3f4f8784e82830ea/,2016-02-09 11:30:55-05:00/,"look for ""directory"" modules

if an import references the top level of directory of modules,
rather than an individual file, then load the __init__.py for
that directory"
Assembly,BBN-Q/pyqgl2,1488c06458baae3683a7d0251be02586393e22a5,2015-11-23T15:52:15Z,9001a985cdefea174528403884e7a11513765c21/30eb3a2e55d4b9aa451b2da20aa3a5592a480bc3/,2015-11-23 18:09:42-05:00/2015-11-24 14:56:27-05:00/,"started to consider inlining optimizations

figuring out whether a fp/ap pair can be inlined is
complicated in general but worth considering in
specific cases"
Assembly,BBN-Q/pyqgl2,b46c1f7da33cf747a2f3bb8be03a3f31264a3200,2015-12-04T00:39:17Z,7748910e5e76d718722d7db3b5f906b36e621345/,2016-02-29 19:01:34-05:00/,"have reset() empty the set of emitted messages

by default, we squash repeated messages, but for
testing purposes when we run different tests over
the same code we want to see the errors each time.
Therefore clear out the list of emitted messages
whenever we do a reset."
Assembly,BBN-Q/pyqgl2,0339297462577559fbca509b9ba06a2997828742,2016-04-28T13:31:16Z,376981202e56dab3c048c7d6877b21aef9cac7e8/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/,2016-05-05 16:06:12-04:00/2019-09-26 12:06:38-04:00/,pass the qgl2=True arg to compile_to_hardware
Assembly,BBN-Q/pyqgl2,51074226af6a68525168ff88c5e230eea7ce0918,2016-09-19T19:44:59Z,db6d3739e75272be796f25530cdfa878edb0b53b/,2016-09-20 09:30:02-04:00/,"creating the test channel library for unittests replaces any existing channel library, so we get consistent test results. This allows test_tomo to work where you have a channel library with q1 and q2 having different lengths."
Assembly,BBN-Q/pyqgl2,232aa6630dee440efd89b8cd05d67e0a35fbe264,2017-03-23T18:06:24Z,356749f00b05fc4ae7521f49c9f90680a38a452e/032f0241eb969870a941956a7db8a17a86e76aa9/530ff82ff7e2cbb7ad5a3262477407be7db0b186/17e96f5d2e64398881ad5427d3f1740d8c055a66/dced4de17ced5dda99cc709bf797364fd6c2d27e/9b79c87699b33f1b9acd81a2baf499769fb899d2/,2017-04-11 16:53:22-04:00/2017-04-11 16:00:27-04:00/2017-04-11 11:41:47-04:00/2017-03-27 15:53:23-04:00/2017-04-11 16:42:52-04:00/2019-06-24 13:26:05-04:00/,Fix test_basic_mins.
Assembly,BBN-Q/pyqgl2,5f346e6230800711e72ddf0d4b98220281a0d1a2,2016-03-28T23:30:36Z,1a7c61d8629aaac62c00b6152f4e4cfd36b78d52/f7d234f0a9805d44894c19367fed9291ade69170/,2016-05-13 09:20:40-04:00/2016-04-14 16:46:51-04:00/,"do substitution on orig calls of inlined funcs

when we do variable substitution for qbits in a statement,
do the same substitution on any inlined-functions.  This
is done so we can keep track of qbits that were referenced
in the original code, pre-optimization, that might not be
referenced now because of inconsistencies in the QGL
API.  For example, init(q) gets inlined as Wait(), but
we need to know that that Wait() depends on the q from
the init(q) call -- this q is implicit in the Wait(),
but we need to know it."
Assembly,BBN-Q/pyqgl2,d652682248d68ed17e06249858a0d071bef60461,2019-06-11T18:57:47Z,bc3b21ab6c5b4b247cd632cc581cf9e0301a1b14/,2019-09-13 14:38:54-04:00/,Use new test_cl to create the testing ChannelLibrary
Assembly,BBN-Q/pyqgl2,d4c5be0d5320963642cc958433f72f5a6bc68911,2016-05-02T18:28:38Z,230259845f6dc59a50f7e77e1bd637e9d379906b/b4922b49f21b871128ffa09d7598ba556bc8a097/,2016-05-02 14:35:33-04:00/2016-05-16 16:03:24-04:00/,"simplify native_eval; add native_exec

simplify native_eval by always converting AST to text
and then compiling that.  AST could appear in several
forms, and compile could get confused.

Fixed a bug in handling local bindings; the empty
dictionary was being confused with ""no dictionary""
and additions were therefore being thrown away.
Fix is to compare the dictionary to None, not non-True
(because empty dictionaries test as ""False"")

native_exec is an extension that lets the compiler know
that it's getting a statement instead of an expression,
because statements and expressions have to be compiled
using different modes.  This still has some rough
edges on it (statements shouldn't return a value, but
we still do return a dummy value...  this should be fixed."
Assembly,BBN-Q/pyqgl2,b606cbb8c986d094d2f60470567f9957a7710c62,2016-04-07T18:14:51Z,da88677fdfd8aa7e84b664f399ae1f76db1bce09/,2016-05-12 13:10:58-04:00/,"add mechanism to mute msgs by level

mute anything at a level lower then the given MUTE_ERR_LEVEL"
Assembly,BBN-Q/pyqgl2,aad5b4c678ff6da9931bbea524699a2be4756938,2016-09-24T18:39:03Z,30ecc1f528c973a326d224463ff6f94ef4de01f9/83f10b6c9be041bef0d5ddec23f1acdb02164c0f/40a5995b32ae2290dbf897ead844b3f1fe7cce70/,2018-10-10 18:12:56-04:00/2019-06-17 18:27:10-04:00/2019-06-17 13:45:20-04:00/,add the QGL impl of flat_top_gaussian_impl
Assembly,BBN-Q/pyqgl2,2ff5de43d404191b542cdb3a1e9a768bfd0d34bd,2016-04-14T23:22:24Z,a8b1df24c286d3bc0d42251460a82be1aa73cb21/f66da62a9fc81d12625243e1380045e01b3c8ea3/,2016-05-13 10:13:11-04:00/2016-05-03 19:30:13-04:00/,"try to expand a for loop iter clause

our goal is to convert an iterator (or a function call that
return an iterator, list, set, etc) into an ordinary list,
which we can then feed into the unrolling mechanism."
Assembly,BBN-Q/pyqgl2,2bd50cffbc1c5a76b2f83a2d1abe6934db7bd505,2016-07-22T20:52:36Z,73d3663612c5127c1e6b036a9f40e86089645906/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/,2016-09-29 16:36:27-04:00/2017-04-07 15:05:12-04:00/2017-03-23 09:45:53-04:00/,a multi stage call of a single qbit function
Assembly,BBN-Q/pyqgl2,83f10b6c9be041bef0d5ddec23f1acdb02164c0f,2019-06-17T22:27:10Z,ce51c3da3e5924e22bbbe958258a7042f1cf7a51/18bf238c4abfc3dc50eec0b858afd860f148661d/,2019-06-25 15:48:25-04:00/2019-06-21 11:47:12-04:00/,add helped to get a centered Id pulse of given length. See issue #37 and CPMG()
Assembly,BBN-Q/pyqgl2,f4bcceefe28a94524afdc79032588fed6ffc2964,2016-10-07T16:17:15Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/68f72663587af789e5a3c944b841e0932255add8/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-07 15:05:12-04:00/2016-10-10 11:29:47-04:00/2017-03-22 16:13:42-04:00/,"added test case for completely empty program

this fails in a graceless way -- it clearly shouldn't
*succeed*, but it should fail in a meaningful way"
Assembly,BBN-Q/pyqgl2,9647af5ff43791293b3749caf83fb8a17c07eccb,2016-06-13T23:29:53Z,f363a7bf1f9f3c912196ed1807905282125a0b57/,2016-06-27 21:09:50-04:00/,added comments about new routine to add barriers
Assembly,BBN-Q/pyqgl2,2ba366d758f4290be5941d9f6a62e2e4ab827262,2016-01-28T19:08:31Z,200d480eda5e4279e6192d1dae034fc7f5af99ff/e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/7e100f49509143f211dac0439665a913cf6ba997/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/447a1cb1247747e32ef9a4d07b342767108d2f93/af2f9abb22ef2956c04ced351d6df508b16b4f9b/93f28bcd1a72f82ff7287dfd3a3245b86d27b14a/eedd04eea773ef0dd11d7db7c0d6d7e9af0bbb94/62409cd6269ea8644472010e2a7636ff556b76d7/,2016-02-11 16:21:26-05:00/2017-04-12 11:00:41-04:00/2016-02-01 15:10:33-05:00/2016-05-13 14:58:56-04:00/2016-02-25 15:22:22-05:00/2016-02-24 14:43:57-05:00/2016-02-19 14:41:08-05:00/2016-02-05 16:15:14-05:00/2016-09-27 19:02:19-04:00/,start at some possible new helper functions for lots of repeated code
Assembly,BBN-Q/pyqgl2,4e8f94ba97d643e3c4bb483c024f85e55a146548,2015-11-10T03:06:43Z,d0437a814b773474eb1b069c9c46f7b6bd3888dc/e57ed44d4a076aaced4afbee3f4f8784e82830ea/8db82a413fdaa013dabf739c5fe1d85b1cc05479/11d7381d9ff00f5f005352d0902d27570c6ad14e/8ca9d01574f29d7ddbfc80b5730c8859bbe6b126/fa77aa7397a246c22b4f290c8cb792c3c97e7a21/3d7684c52e971ee5e1db1dd858a2a387230acea1/8a224933e9a6512a0bc8a5e2e10ab2e6d2d85a3d/9fd00f045a66b4db21318320aeb74e973935a172/06de51e238484a3a2bc71408d11f11f869276a55/800348874f8ff7df95d9cac7aab21fc8e794ad9e/7e58178bf4985c8739959575378b7bb7d21b6f72/395e39cbef7ae90119157b3b0065cb4d2095ebbc/29a39b1368276c16fd654acd1aa1a5cc68da6623/f45dc8c6d9e5b88c00dff2547a96f53a9643943f/5b6d59d06703388764770dec0f09cc6a260c0114/4c1529f1121da6a9fed0ab50409df323d194545e/8643eec62ceedbf03f2a6aa86075b06f2755f178/10bb55d2cf6dc8c9fbe9c0ccb060e788da443876/6d013fa62f8050da64be893e54a924186de05993/,2015-12-08 16:43:07-05:00/2016-02-09 11:30:55-05:00/2016-01-22 13:48:23-05:00/2015-11-10 19:45:36-05:00/2015-11-13 10:11:24-05:00/2016-01-27 12:46:48-05:00/2015-11-13 16:54:06-05:00/2016-04-01 08:55:04-04:00/2015-11-10 10:18:48-05:00/2015-12-15 21:15:33-05:00/2016-04-13 18:08:26-04:00/2015-11-10 14:10:09-05:00/2016-02-24 11:17:45-05:00/2015-11-11 14:20:54-05:00/2015-11-23 15:08:10-05:00/2015-11-10 18:51:46-05:00/2016-04-12 19:52:15-04:00/2016-04-14 19:19:09-04:00/2015-11-11 17:16:43-05:00/2016-02-29 15:58:40-05:00/,"begin reorg of import/namespace utils

this is work in progress; the old code is still there
(it hasn't been removed) and the new code is not
complete and integrated, but it's preserving.
(it's probably not worth running, however)"
Assembly,BBN-Q/pyqgl2,7f140d94808dfcfe9aa3d166e655ed117e48c3ea,2016-10-07T13:39:34Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/032f0241eb969870a941956a7db8a17a86e76aa9/,2017-04-13 10:01:57-04:00/2019-06-19 13:35:55-04:00/2017-04-11 16:00:27-04:00/,Update T1T2Mins to take arguments.
Assembly,BBN-Q/pyqgl2,38d7e74ff3da509312382d8117d86fdb4745bce7,2016-09-29T18:19:17Z,4d4482de68da8dfcd9a3683e4eabae12988943e6/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2016-09-29 15:11:40-04:00/2017-04-07 15:05:12-04:00/,"cleanup. Work around issue #90: conditionally setting measChans doesn't work, so always replace measChans with qubits for now. This makes calibration sequences work"
Assembly,BBN-Q/pyqgl2,1b1217e427e6762fe40a3705630f5682834a045d,2016-04-14T13:24:47Z,48f241e225aefb0576662297ea290f68b0c9fb00/39e3932cd90e5ef914db10f83a30b0dd04f434d2/956225b652eb80b56aa726a830a1f4768eff67f0/73d3663612c5127c1e6b036a9f40e86089645906/9217721da958f15856927c4f9695c61f2fdad3f1/,2016-04-20 13:35:26-04:00/2016-10-12 10:18:52-04:00/2016-07-25 14:28:24-04:00/2016-09-29 16:36:27-04:00/2019-06-19 13:11:28-04:00/,pull out inner functions
Assembly,BBN-Q/pyqgl2,c3f3f7558e751d3dc21a3ffcc3f63444ec9fcc95,2016-10-07T09:25:38Z,480d7b93e215f1e3ce84cb563f09df82ff9bcdcb/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/a76459f972ef3d91648f774e2d5982c4ed1dafcf/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-03-22 17:23:34-04:00/2017-04-07 15:05:12-04:00/2017-04-13 10:01:57-04:00/2017-03-22 16:13:42-04:00/,tests for issue:90
Assembly,BBN-Q/pyqgl2,c3e8a4a8e1abef53e1fb09e4aa9e260e8a54a5be,2017-03-23T16:02:29Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/bb9c84bf80034d4ac76fffea84b64a0d363de97f/66ed22c49453a5aa49f7866faffbcb0efa22df35/530ff82ff7e2cbb7ad5a3262477407be7db0b186/,2017-03-23 14:06:24-04:00/2019-06-17 13:47:18-04:00/2017-05-15 10:21:32-04:00/2017-04-11 11:41:47-04:00/,Fix up calibration helpers.
Assembly,BBN-Q/pyqgl2,a96a26072a3d117b76af8a783f92edd7f21c04f7,2019-10-02T19:33:45Z,12330dfea9c645d56da06de0f95b47a1d644a084/,2019-10-02 15:38:56-04:00/,QGL no longer support python 3.5. Start testing with 3.7 too though
Assembly,BBN-Q/pyqgl2,06a08bd650997ece86188246d62da8b773e34643,2016-03-09T23:03:23Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/d6af00f88a8977a72366860560c799c3d61cad10/f2ddef629359f6b4fe29c60ed9cede38f00c2fa4/7049b38da4c002dd828f8666fceec215dbfe3361/,2016-06-30 18:21:21-04:00/2016-06-28 11:47:45-04:00/2016-03-18 16:36:54-04:00/2016-05-23 19:41:02-04:00/,"add 'repeat' to the grouper

if there's a repeat statement inside a concur block,
we break it down the repeat statement into one or more
repeat statements, one per QBIT partition.
This makes it easier to map directly to the hardware.

For example:

	with concur:
	    for x in range(2):
	        for q in [QBIT_1, QBIT_2]:
		    X90(q)

after the expansion/unrolling process is complete, this will
look something like:

	with concur:
	    with qrepeat(2):
		X90(QBIT_1)
		X90(QBIT_2

But when we try to ""group"" the ""with qrepeat"" block we'll
be symied because both qbits are referenced in the same block.
So we'll split the block:

	with concur:
	    with qrepeat(2):
		X90(QBIT_1)
	    with qrepeat(2):
		X90(QBIT_2)

and then we can can partition successfully:

	with concur:
	    with seq:
		with qrepeat(2):
		    X90(QBIT_1)
	    with seq:
		with qrepeat(2):
		    X90(QBIT_2)"
Assembly,BBN-Q/pyqgl2,57327193ac48193bb8c5cfca6b333bce94f3a562,2016-05-26T20:35:07Z,b8cfa4a08503d7736630005f6bdd02ff6988feb6/c1e7ad8ac4577fe6426c7a72d601a22c62352106/15cfd751e27195c5f669dcae125e4cb0190723f7/,2016-05-27 09:13:20-04:00/2016-05-27 10:45:52-04:00/2016-07-19 11:08:55-04:00/,add more debug logging
Assembly,BBN-Q/pyqgl2,aa810ac7ffb3239ca094256f1df59233fc12c6cd,2016-05-19T19:45:07Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/,2017-05-25 16:22:05-04:00/,skip empty sequence earlier
Assembly,BBN-Q/pyqgl2,22e4ab7eafadedc1f02b9419ff20608aa5fa27cf,2016-06-23T22:04:16Z,722cebfeda7fadce9a4657971bd7731fc85ca74a/5204ecd0473c66ee812039244ace1e5a35cb22b7/,2017-03-22 16:18:22-04:00/2016-06-30 18:32:06-04:00/,"use 'with-grouped' for top-level grouping

instead of overloading with-concur at the top level,
we now have several different types of ""with"" statements
that behave similarly but are convenient to name differently
in order to make things more readable.  So 'grouped'
replaces the meta-concur at the top-level."
Assembly,BBN-Q/pyqgl2,ac172b20d4620715b3cd9278df1ade1133329aa2,2016-04-06T17:50:45Z,5c9fcdfb78b71fb2283dd954bc0542f315aa454b/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/e9b9bdd2868994f62fe0d3e5eaad4551d12556e3/df76b970d2cf6f6eb62b55346a55b6c5dc2aff54/e3989d7514231679f7be5c8c52c28901f8e44584/5a7b61719fbcec211328642670e84d9eed90b72f/0339297462577559fbca509b9ba06a2997828742/102ba7d564b5b98134c4f3aad5a4920139e7b14a/,2016-04-08 15:20:02-04:00/2019-09-26 12:06:38-04:00/2016-04-15 17:04:58-04:00/2016-04-08 09:57:35-04:00/2016-04-19 12:10:33-04:00/2016-04-06 15:03:30-04:00/2016-04-28 09:31:16-04:00/2016-04-08 15:17:02-04:00/,"be robust to an empty entry in sys.path, which seems to happen when running from jupyter notebook"
Assembly,BBN-Q/pyqgl2,75894bc5b969108afc285651c4f80c4c77465425,2016-09-19T14:15:46Z,90fde9aab208cb7b0e764de20009e46678c59ae6/,2016-09-23 14:08:37-04:00/,Copy top-level bindings to avoid unintential modification.
Assembly,BBN-Q/pyqgl2,81e486cb656228addb724032cc1d8edb04d721ce,2016-09-15T17:54:38Z,73d3663612c5127c1e6b036a9f40e86089645906/d5259010741db8ab055c5384c6bcba80eebfddd8/a4e9b584ec2385271b2a8b174cd697da236dd543/,2016-09-29 16:36:27-04:00/2019-06-18 19:55:45-04:00/2016-10-07 12:26:51-04:00/,"rename FlipFlopMin to doFlipFlop for consistency, and rename a parameter for clarity"
Assembly,BBN-Q/pyqgl2,9589e07bf9bf4718438097274d9b66baedd3e222,2016-10-07T13:26:40Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/032f0241eb969870a941956a7db8a17a86e76aa9/,2017-04-07 15:05:12-04:00/2017-04-11 16:00:27-04:00/,Update doRabiAmp_NQubits to take a qbit_list arg.
Assembly,BBN-Q/pyqgl2,57d9203f7bd9c8767f302e7e79864895889c1279,2016-05-11T22:24:52Z,2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/e6c722dbc35cb906b4b019733a05094b648eb7c6/2358e1d67873108382c3119d15ccf0d4f804990e/ddbaf39ee4162f676ebf53b94da3e98c1181d857/38edd331d90d55c723fd4cd098dbb42932b1f402/,2016-09-06 18:44:10-04:00/2016-05-17 19:43:06-04:00/2016-05-11 22:42:21-04:00/2016-05-13 06:43:26-04:00/2017-03-24 13:36:30-04:00/,"progress on pseudo-evaluation of calls

still need to transform variable names to translate
everything into single assignment, because the code that
does inline expansion re-uses the same variables and the
history of assignment is lost.  (either that, or the inline
expansion needs to be done differently)

for example, if you have something like:

	def foo(a): something(a)

	for x in [1, 2, 3]:
		foo(x + 1)

this will be unrolled to something like:

	tmp = 1 + 1
	something(tmp)
	tmp = 2 + 1
	something(tmp)
	tmp = 3 + 1
	something(tmp)

which will be partitioned as

    preamble:
	tmp = 1 + 1
	tmp = 2 + 1
	tmp = 3 + 1

    runtime:
	something(tmp)
	something(tmp)
	something(tmp)

and so tmp gets 4 in every call to something()"
Assembly,BBN-Q/pyqgl2,9451b372d0152e5a3be442ca10b87dcac8ecefca,2015-11-02T23:37:30Z,415ae1f94938180403b91a1d4a07576c25927543/,2015-11-05 17:00:31-05:00/,"remove seeding of the initial context

before 'Qbit' was implemented, I needed to start with
some qbits inserted into the initial context in order
to test that they were handled properly.  Now that Qbit
is implemented, we can initialize the context properly"
Assembly,BBN-Q/pyqgl2,934bea36f6b7ddef84e4164b37b336deb747894d,2016-02-02T21:08:45Z,9b7a544414650f8d04e88697397a27578208dcdb/,2016-03-18 16:16:29-04:00/,handle NameConstant actual params
Assembly,BBN-Q/pyqgl2,ffad3beeffa8fc7585a067b8e2e2171b3018c2a0,2015-10-20T16:54:08Z,5b6d59d06703388764770dec0f09cc6a260c0114/3338c4dafcb8986964bc3c24fedb6f1b603a4492/,2015-11-10 18:51:46-05:00/2015-10-20 14:08:38-04:00/,"cleanup and commenting

remove dead fields and diagnostics.
add a description of to use this class.

still not happy with the discrepencies between this and
real python semantics.  will explore a quick workaround"
Assembly,BBN-Q/pyqgl2,3bfe751db8d3c46463119be914a2cac7094da49d,2016-09-29T18:53:30Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/9589e07bf9bf4718438097274d9b66baedd3e222/032f0241eb969870a941956a7db8a17a86e76aa9/cda56a922723f87a7a6d39af3a862553609f2927/9b79c87699b33f1b9acd81a2baf499769fb899d2/,2017-04-13 10:01:57-04:00/2016-10-07 09:26:40-04:00/2017-04-11 16:00:27-04:00/2019-06-24 13:25:22-04:00/2019-06-24 13:26:05-04:00/,Add arguments to functions in RabiMin.
Assembly,BBN-Q/pyqgl2,441e972cacf455284cd521def63cb92a72525cf8,2015-12-16T03:11:01Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,"example that uses more operators (with, for)

this example doesn't have any semantic meaning, but
gives the preprocessor an opportunity to do some
transformations."
Assembly,BBN-Q/pyqgl2,6a434ccb0431faa3f3da1d2f4be6ab3da446285a,2016-09-29T18:20:43Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/032f0241eb969870a941956a7db8a17a86e76aa9/1ebdb539ee352cb9ff78f38b08205c50ff612299/ef101589a68a6cf182e82a75489ff49d93580d7c/,2017-03-23 14:06:24-04:00/2017-03-23 12:03:20-04:00/2017-04-11 16:00:27-04:00/2019-06-11 14:58:17-04:00/2019-08-16 14:24:21-04:00/,"Update tests to test sequences with calibration, using the new helpers"
Assembly,BBN-Q/pyqgl2,7efd718ffcd5f3c32725d92a0a9cb93beeaeba9d,2016-10-04T21:44:06Z,99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-06 21:52:58-04:00/,"revert to QubitPlaceholder, but with new class

Using naked Qubits was unwieldy, and we can't monkey-patch
Qubits, so created a new subclass of Qubit and used it
to replace the old QubitPlaceholder"
Assembly,BBN-Q/pyqgl2,e554c3f7bbedefaf90732698d75652eb37a78032,2016-06-30T22:32:49Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,archive versions of these dead classes
Assembly,BBN-Q/pyqgl2,0b7edf6eef0f2928317789d11f6d318d1a1a07dc,2016-02-12T14:53:55Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/395aca7906d60ceae9afeead847df29ecd4a9e5f/0a2b29593cf05b46c34351c3a25329326534fd22/626669397b8d6ad7bb524c1f3d7d9a6bbb0b11e8/d76040ae3c0c26e56a9f49cebfc6556034b8c5dd/f2ddef629359f6b4fe29c60ed9cede38f00c2fa4/0b2de90291611a6282d22a52cadfb837a874f2d4/f40d398390b0998ec36c58ba1b2fdf70e1df2e07/7049b38da4c002dd828f8666fceec215dbfe3361/6284ef1095ecc8180b7f6ee11011e79bd83faef2/,2016-06-30 18:21:21-04:00/2016-05-25 23:19:11-04:00/2016-03-16 17:11:25-04:00/2016-02-15 16:03:45-05:00/2016-02-18 11:29:13-05:00/2016-03-18 16:36:54-04:00/2016-06-27 18:40:13-04:00/2016-06-13 19:30:38-04:00/2016-05-23 19:41:02-04:00/2016-02-23 21:28:02-05:00/,"move the statement grouping to its own class

current code is festooned with diagnostics, and
creates seq nodes just for the sake of being able
to pretty-print the result.  (The final output
will look more like QGL)"
Assembly,BBN-Q/pyqgl2,938e1fa75b790771829e5c1ab12fd4beee3e6bb9,2016-07-29T02:10:46Z,38edd331d90d55c723fd4cd098dbb42932b1f402/,2017-03-24 13:36:30-04:00/,"start to fix metaprogramming problems

if we have a function reference assigned to a local variable,
then before we can invoke that function we need to ""convert""
the call into a call to the function, rather than an application
of the local variable.  For stubs, this is straightforward but
icky.  For qgl2decl functions, we need to inline the function
(and unroll it, etc) as if it had been there all along.
We currently handle stubs, but not qgl2decls, and native functions
are problematic as well."
Assembly,BBN-Q/pyqgl2,8b121b8a30185f2435a8309881941805d0987099,2016-02-16T16:51:39Z,535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/,2017-03-30 13:31:14-04:00/,swallow the necessary error redefining EchoCRPhase so it works as QGL1
Assembly,BBN-Q/pyqgl2,63756f13d45cbd3c7ff192cb2196e32b4d814764,2016-03-28T20:38:33Z,1e2bff01dc361528f8bf090d99d0785cd1b18f7f/170e720cbfa5069f523c4eaed7d550185e33eb6f/,2016-07-05 16:54:27-04:00/2016-04-06 17:19:48-04:00/,refactor finding the qubit channel name into a helper function
Assembly,BBN-Q/pyqgl2,723f811b69b0c896073a5fd79b60684b59b8f768,2016-05-25T22:35:16Z,5e5ec4c308bc020a1a2f6659460ab75879fb1225/e86b8d2bc34d900e8697630275ec19c18cdbae38/a75d9fb40268df5edef39ccc535737b39a5debb2/3e317a747a48325612aa748bd4c7d38080951ed0/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2016-05-26 19:05:28-04:00/2016-05-26 18:09:53-04:00/2016-05-26 14:08:23-04:00/2016-06-22 18:13:47-04:00/2016-06-23 18:00:39-04:00/2017-04-05 17:07:07-04:00/,"draft of code to flatten Qfor/Qiter blocks

not well tested, because the grouper is confused by
these blocks, and therefore we can't get anything
complicated through the grouper to reach the flattener"
Assembly,BBN-Q/pyqgl2,d6d6e6c68520ad1763d656298cc169ad93443073,2016-09-27T23:03:24Z,9b79c87699b33f1b9acd81a2baf499769fb899d2/,2019-06-24 13:26:05-04:00/,test_RabiWidth and test_AllXY expected to work
Assembly,BBN-Q/pyqgl2,9b7a544414650f8d04e88697397a27578208dcdb,2016-03-18T20:16:29Z,48f241e225aefb0576662297ea290f68b0c9fb00/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/ff4d3749290f55f783502b3f8ff6e0b5e36fe2b4/4d360b2fa2ea73387efcfb7132343bff79a6d09c/170e720cbfa5069f523c4eaed7d550185e33eb6f/63756f13d45cbd3c7ff192cb2196e32b4d814764/,2016-04-20 13:35:26-04:00/2017-04-06 21:52:58-04:00/2016-04-20 13:32:45-04:00/2016-03-21 16:15:52-04:00/2016-04-06 17:19:48-04:00/2016-03-28 16:38:33-04:00/,"Change from requiring a method Qbit() to create qbits, to requiring one named Qubit() that takes a label - a string, either as the 1st positional arg or as a keyword arg. Also, use some more of the constants from lang.py for the argument types"
Assembly,BBN-Q/pyqgl2,da9e19319ca556ea95f93b50a95956410a2d6db8,2016-05-13T14:04:07Z,2b099279cb339afbc5e464e40c3fbed00c8f48be/,2016-09-14 13:22:33-04:00/,minor cleanup
Assembly,BBN-Q/pyqgl2,ef02f8a3487b20756caf665b6d764d0c1920770f,2016-09-14T14:30:31Z,7dfd483ce04c8a50399506273e659c0da1e95edd/28a519b4f9985b4dfd7d332029d81bb7f3248eb3/,2016-09-19 15:33:17-04:00/2016-09-14 18:22:26-04:00/,"exec qgl2 imported modules against native_globals

we tried to import the bare minimum into each namespace,
but were were missing indirectly-referenced symbols.

For example, if you have file a.py that contains

from b import beta

@qgl2decl
def alpha():
    beta()

and b.py that contains

def gamma():
    something

@qgl2decl
def beta():
    gamma()

then the reference to ""beta"" would be loaded, but when beta
called gamma, gamma would not be found in the namespace created
to resolve symbols while executing beta.  This is fixed by making
all of the symbols defined in b available to this namespace,
whether or not it's obvious that they will be referenced."
Assembly,BBN-Q/pyqgl2,408f8a78b0496142fb92f7565223dc1dea32ff36,2016-04-28T17:10:52Z,edd7dfb9ddaf002b5904dc200b73e4a3f86785c5/232fe6aa404c73b84b9a8efe3daa8be0227869b2/8dcac7bae4a4b3ac5f40f4245d8f3bfc8440c632/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/26e5f34431e1cb9719436e9bd96101df6c7eaa00/73d3663612c5127c1e6b036a9f40e86089645906/2bd50cffbc1c5a76b2f83a2d1abe6934db7bd505/,2016-04-28 13:21:39-04:00/2017-04-07 17:09:27-04:00/2016-07-22 09:49:27-04:00/2017-04-07 15:05:12-04:00/2017-03-23 09:45:53-04:00/2016-05-13 14:55:26-04:00/2016-09-29 16:36:27-04:00/2016-07-22 16:52:36-04:00/,test file for testing multi qbit program compilation
Assembly,BBN-Q/pyqgl2,c61a8629542da409076c68d2b27bd2d6783a7d0f,2015-12-07T22:16:28Z,b83bd733bf2546c3a530ff8e47593113db873163/39891a454c1e80f642b9f860eaf2a2ebed014977/b315d6ab3e7ca4bc2756fe6bf0400cf2e0f2a7ce/1211bbefce3f770fe77fe78fd7a72297a9d123a9/977fc8c5f1e188d5cca8cc758a9c85460e5969f9/,2015-12-07 18:33:05-05:00/2015-12-07 19:23:24-05:00/2015-12-07 17:26:36-05:00/2015-12-08 12:45:37-05:00/2016-02-03 10:51:21-05:00/,"allow variables to be passed through

also deal with function definitions properly,
if encountered in a body"
Assembly,BBN-Q/pyqgl2,a95f88da05f8914a847b2a2aaaeeacc6fff1f100,2016-04-28T16:11:57Z,e07051fa4679c40d5356bffd59a99eb2aff613b7/f16e6fa922ac9ad5c4e5a17f3f7d2923c7b82034/467892d4bf102a5486ba18dc5b848f510ef6ca9a/57d9203f7bd9c8767f302e7e79864895889c1279/2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/cbd421f6cefc2dbd63d696b0ca92698054324459/eff0faa7b0cf86800679aeb80aa7a400b69e47c2/8ecf32fcfabce60513bc2810137d518d89084f0b/c6282bb9fc588fb2e5f7121a21440be5208914af/ad77dfde389ad2d9da2ccb22eae1ca046fbd6d8b/,2016-04-29 18:26:29-04:00/2016-05-02 19:02:29-04:00/2016-09-15 13:53:59-04:00/2016-05-11 18:24:52-04:00/2016-09-06 18:44:10-04:00/2017-03-22 16:14:31-04:00/2016-05-05 16:34:41-04:00/2016-10-04 18:16:34-04:00/2016-05-03 16:31:50-04:00/2016-05-10 18:45:41-04:00/,"draft of routines to manage variable tracking, eval

not functional yet, but worth pushing for the sake of
having a backup"
Assembly,BBN-Q/pyqgl2,2592a6e0d6f662ba969be6d416a7085870a5c113,2016-05-13T13:57:15Z,745140265882c402267fbce13d157de034e1d99b/403f8ca7cc9b1ca8be023b680e96790293ca06bb/013cb3bf12a78cf63f021e8e89f600829bc97852/250fae91ec783c6cb52121e595e9d74e651a90bf/,2016-10-04 19:34:42-04:00/2017-05-25 16:22:05-04:00/2016-10-10 10:52:15-04:00/2016-05-18 14:49:13-04:00/,"Error checks for there being no slave trigger. In compileFunction, support the filename argument actually being the text source of the function to compile."
Assembly,BBN-Q/pyqgl2,6deaaa0373cc4830a1a5dc236271b48589d2fb4d,2016-08-22T18:52:52Z,9690375f0473337f0aa3593260803bdb26444a62/f791681624d5ec22b1a3a0005a83b1bfa31330a9/cda56a922723f87a7a6d39af3a862553609f2927/,2016-09-12 16:38:08-04:00/2016-09-07 10:19:20-04:00/2019-06-24 13:25:22-04:00/,using np.linspace now works.
Assembly,BBN-Q/pyqgl2,e938a81b26f7a4d3df15af463a6d076dda57dea2,2015-12-15T20:53:40Z,697f7464e490a6d54e333324832314b58f65285b/b24538119fd6d1243f08b19ab30a159522b8abe9/,2016-02-12 10:21:15-05:00/2016-02-26 16:25:29-05:00/,"neatening up out the inlined code is printed

eventually we'll save it to file, or keep it elsewhere,
but for now we might as well make how we print it on the
screen more reader-friendly"
Assembly,BBN-Q/pyqgl2,e07051fa4679c40d5356bffd59a99eb2aff613b7,2016-04-29T22:26:29Z,ad77dfde389ad2d9da2ccb22eae1ca046fbd6d8b/f16e6fa922ac9ad5c4e5a17f3f7d2923c7b82034/,2016-05-10 18:45:41-04:00/2016-05-02 19:02:29-04:00/,"computing actuals seems fairly complete

needs a lot more testing.  I'm sure there are
corner cases to examine carefully."
Assembly,BBN-Q/pyqgl2,c3c4d3499c875a3718483f5f80d71de69a6e1d09,2016-02-10T21:48:20Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/8ebe59f49d5a01bd2bc058e8bea9b1b168b2b7c7/0a2b29593cf05b46c34351c3a25329326534fd22/0b7edf6eef0f2928317789d11f6d318d1a1a07dc/7049b38da4c002dd828f8666fceec215dbfe3361/,2016-06-30 18:21:21-04:00/2016-02-11 16:59:06-05:00/2016-03-16 17:11:25-04:00/2016-02-12 09:53:55-05:00/2016-05-23 19:41:02-04:00/,"prototype of code to group stmnts by qbit

given a list of statements, partition them such
that each qbit referenced by any statement
appears in exactly one partition"
Assembly,BBN-Q/pyqgl2,b9bca508b730daacc01aac8b13a0f3b9a6ebfa9f,2016-10-04T10:57:02Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/2039148c0479387a4147c430a84c9d39f53a895d/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/,2017-03-23 14:06:24-04:00/2016-10-04 16:46:41-04:00/2016-10-07 09:39:34-04:00/,"add Ramsey no-list test, now that generators work"
Assembly,BBN-Q/pyqgl2,e996b57229624dbbec6191cc5e73c17569e9597a,2016-10-04T18:46:34Z,032f0241eb969870a941956a7db8a17a86e76aa9/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-11 16:00:27-04:00/2017-04-06 21:52:58-04:00/,Construct the tuple after explicit QubitFactory assignments.
Assembly,BBN-Q/pyqgl2,3677c10a9f69f01971dbdb8eb67a0aa0f8d5161e,2016-09-19T14:12:55Z,822dacd6f543615fc8cb0bbf74b523abf179c4d4/75894bc5b969108afc285651c4f80c4c77465425/8708104fbfa3257a0d462741b1273259f9f08332/0ef68904abf9cbec8dab18502224194e82f87f14/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/ebbe7b3dd394d01a709cb375e67c1c95353e9ce3/ef42a9b1125661d6997032a6199dae71ffaf7362/,2016-09-27 16:34:57-04:00/2016-09-19 10:15:46-04:00/2016-09-19 15:38:06-04:00/2017-03-22 16:36:36-04:00/2017-04-07 15:05:12-04:00/2016-09-27 16:36:30-04:00/2017-03-22 16:13:42-04:00/,Initial attempt at allowing top level bindings to qgl2main functions.
Assembly,BBN-Q/pyqgl2,1319777c1cc8972ba40595e08dfd3a7627cb7837,2016-09-28T18:03:44Z,4d4482de68da8dfcd9a3683e4eabae12988943e6/,2016-09-29 15:11:40-04:00/,remove more FIXMEs that now work
Assembly,BBN-Q/pyqgl2,36f8ad5bfeadb0f22c9b87998692d0de0b0c04ce,2016-09-12T15:02:42Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2017-03-22 16:17:55-04:00/2017-04-06 10:01:35-04:00/2016-09-15 13:53:59-04:00/,"Add timestamp to some printouts, and in verbose mode print memory usage at start and end"
Assembly,BBN-Q/pyqgl2,66b114bedaae9ad7e9428ab2b59b394fcd76bf35,2015-12-07T23:34:30Z,650e09fd6357617c6878a3558f733ed89dcf1cf4/,2016-05-05 16:25:44-04:00/,"change the way 'temp' variables are named

put the original name at the beginning, so it's
easier for human readers to see"
Assembly,BBN-Q/pyqgl2,1dd819781dc5ea1d251c54db9dec259c752b8810,2016-05-13T18:37:41Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/444e95042d4d5875f0f21e72c06476362ad3e544/36f8ad5bfeadb0f22c9b87998692d0de0b0c04ce/,2017-03-22 16:17:55-04:00/2016-05-18 16:42:19-04:00/2016-09-12 11:02:42-04:00/,"prototype to convert syms to table lookups

not fully integrated yet -- need to add the
boilerplate that makes the table visible from
within the qgl1 function we create"
Assembly,BBN-Q/pyqgl2,ef42a9b1125661d6997032a6199dae71ffaf7362,2017-03-22T20:13:42Z,424b8959957267c68e2832e10bed2168e9af90c8/d5259010741db8ab055c5384c6bcba80eebfddd8/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/39305cd69ec192acd0d702be7874490c90e702f1/cda56a922723f87a7a6d39af3a862553609f2927/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/032f0241eb969870a941956a7db8a17a86e76aa9/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/cfe1f35afa7f46c80e11b1cc915868d58b77e5b0/9217721da958f15856927c4f9695c61f2fdad3f1/9b79c87699b33f1b9acd81a2baf499769fb899d2/,2019-06-12 16:32:16-04:00/2019-06-18 19:55:45-04:00/2019-09-26 12:06:38-04:00/2019-06-17 18:28:39-04:00/2019-06-24 13:25:22-04:00/2019-06-19 13:35:55-04:00/2017-04-11 16:00:27-04:00/2017-03-23 09:45:53-04:00/2019-06-17 13:52:32-04:00/2019-06-19 13:11:28-04:00/2019-06-24 13:26:05-04:00/,compileFunction -> compile_function
Assembly,BBN-Q/pyqgl2,0024e44a9ebbf347bbad90151d759fc2060656da,2016-04-20T16:45:43Z,376981202e56dab3c048c7d6877b21aef9cac7e8/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/0339297462577559fbca509b9ba06a2997828742/ef42a9b1125661d6997032a6199dae71ffaf7362/,2016-05-05 16:06:12-04:00/2019-09-26 12:06:38-04:00/2016-04-28 09:31:16-04:00/2017-03-22 16:13:42-04:00/,cleaned up notebooks that use QubitFactory and the renamed compileFunction
Assembly,BBN-Q/pyqgl2,dc38648e7543d7e7a8772ee327cedd83445708c8,2016-02-26T18:44:02Z,853d88257383734c38522454933a77f3bf15510c/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/30ecc1f528c973a326d224463ff6f94ef4de01f9/ce51c3da3e5924e22bbbe958258a7042f1cf7a51/0a6a77c169d7af5c4dd2dac7e23919a5123581c1/3a016d8ee3404a53b9da8d4b35cdba34d6edc68b/39188a72c8a2484e3a13f5fb4c3eb65131889f29/956225b652eb80b56aa726a830a1f4768eff67f0/714e04f946598a495c356c6904353b1e1bd48cb1/b8e2e96934317ff22b1f06088dc02a8e826312e7/4406bfda6402b7710b1d015c8f0904969991d5c0/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2016-03-01 12:59:34-05:00/2016-05-13 14:58:56-04:00/2018-10-10 18:12:56-04:00/2019-06-25 15:48:25-04:00/2019-08-16 14:22:52-04:00/2019-09-13 14:41:08-04:00/2019-06-12 16:34:55-04:00/2016-07-25 14:28:24-04:00/2016-02-26 13:57:01-05:00/2019-06-17 14:44:15-04:00/2019-06-13 15:18:07-04:00/2016-03-25 16:12:15-04:00/,initial versions of most RB functions
Assembly,BBN-Q/pyqgl2,93e2e1c23b1c16560385875311bdc867cb8d5d00,2016-03-03T23:45:26Z,6eb72ec72bd75379fdc3205f542f21ec3311fb48/9a15e9deb3b45bb80de99428b564937ae864f0ff/2046d547729c7d5669507b6cbae46aa69a3746dd/072803ac808aed256055e8f2de2e39e42806dd0c/22824054d1310481e62467223f9aa36339597259/,2016-05-17 13:33:17-04:00/2016-03-04 09:36:47-05:00/2017-03-24 13:15:04-04:00/2016-03-04 08:22:01-05:00/2016-03-03 18:57:07-05:00/,add prototype for if/else flattening
Assembly,BBN-Q/pyqgl2,2dda94cc53f72247ed39ad3cf7637162f81f2f64,2016-09-27T20:48:01Z,38d7e74ff3da509312382d8117d86fdb4745bce7/c3e8a4a8e1abef53e1fb09e4aa9e260e8a54a5be/,2016-09-29 14:19:17-04:00/2017-03-23 12:02:29-04:00/,Get create_cal_seqs closer to a working state.
Assembly,BBN-Q/pyqgl2,a98488ed25ebbacd02789388f37940c60dc8be9f,2016-02-26T20:13:42Z,df5c4375105e76e542ea234a4c3d8dba6af9a649/,2016-05-03 19:43:17-04:00/,"fix call to copy_all_loc

didn't include full module name in call"
Assembly,BBN-Q/pyqgl2,aa535546e640cdfe1597e29eeb4ab89a615277d3,2016-04-07T18:37:50Z,3f2ea3d243268ee50c8dd32c1d313616815a625f/,2016-05-11 11:11:14-04:00/,save final function to the intermediate output
Assembly,BBN-Q/pyqgl2,d846317069ec3cfec09975c8ddf7408030ff3baa,2016-06-30T19:13:56Z,a22ef357d24769a3f6913c0ab97967d80a4fb315/2a5d9eda26de6714a4d38bce019b60933aa91f28/18b794f15d6189ae57aece74b90b55be0718e63a/,2016-09-23 15:53:12-04:00/2016-06-30 17:27:07-04:00/2016-06-30 15:39:34-04:00/,"add hooks for adding names in the local module

try to avoid complaining about names in the module
scope but not in the function scope"
Assembly,BBN-Q/pyqgl2,52a2fc3c4ab98f296bc9e39159ccbe45102d3dec,2016-02-29T22:31:51Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/,2016-06-30 18:21:21-04:00/,"typecheck tuples at for loop targets

make sure that if a tuple is used as the target of the
loop variables, that it has a form that we can deal with
(non-nested) and that all of the values that we're going
to try to assign to the target are compatible (same length,
and are composed of simple types)"
Assembly,BBN-Q/pyqgl2,2756fb1d8bef073ce882b03aafd7eaed431c14dc,2016-10-04T10:44:51Z,4a0f034d77dd23e43683f4ab2f7cdea1f8aefdb3/,2016-10-04 06:56:10-04:00/,"add a test that we can can loop over generators

add new test for Ramsey without list'ing the zip"
Assembly,BBN-Q/pyqgl2,9dba10fb01fb955bcb462e30314af49d12b5292c,2016-07-07T19:42:12Z,dabe675ff8918039179cf53f1b22c7d99597ee52/1d7caae5a1909e00e7d63c4125133d2a028faa8f/999fa4c3a5ac3c379350abc94b06130813521f9a/,2016-07-22 09:48:58-04:00/2016-07-12 10:50:39-04:00/2016-07-11 16:36:40-04:00/,more unit tests; fix 1 log statement
Assembly,BBN-Q/pyqgl2,ec749b42b532d39855a3a6d9b8bbfd6d9127f703,2016-07-05T16:17:49Z,722cebfeda7fadce9a4657971bd7731fc85ca74a/,2017-03-22 16:18:22-04:00/,"process sequences in lexical order

this might be clunky if we ever end up with a large
number of qbits (in lexical ordering, '10' comes before '9')
but it's better than the hash ordering"
Assembly,BBN-Q/pyqgl2,fa0f0a128f6ab01246571ebe16c5ff334d36661f,2016-04-08T13:51:27Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/3f2ea3d243268ee50c8dd32c1d313616815a625f/0527f57fb9d8fb427497f729f752f80e8ea41a6c/,2017-03-22 16:17:55-04:00/2017-04-06 10:01:35-04:00/2016-05-11 11:11:14-04:00/2016-05-06 16:18:59-04:00/,"add more halt-if-error-detected checks

we could have, in theory, exit with success even though
no correct output was produced."
Assembly,BBN-Q/pyqgl2,012e2047959d9361522b90985f1b363a697b4897,2016-05-19T18:28:56Z,b8cfa4a08503d7736630005f6bdd02ff6988feb6/d5473a57ff46e031f05aeb87eebff36e89f6b0c8/9ade3a7c693ad77c43f5aa23278accef63ff6971/,2016-05-27 09:13:20-04:00/2016-05-20 10:47:50-04:00/2016-06-24 10:48:34-04:00/,"clean spacing, logging, and remove 1 unused variable"
Assembly,BBN-Q/pyqgl2,ff865dfc645334e85b215d0cfa98a0abb3787c54,2016-08-22T18:53:33Z,5c12dd53a964fb5e4ea4bc1ef5110358b8bb404c/878be35fcde09a64716aeaba75cc9c83e9386411/9217721da958f15856927c4f9695c61f2fdad3f1/,2016-10-07 09:58:51-04:00/2016-09-12 16:38:59-04:00/2019-06-19 13:11:28-04:00/,"using np.linspace works. 1 use of pi seems to work, while another fails still."
Assembly,BBN-Q/pyqgl2,e308dd01ef23bb10ad5873c871acd6675670dad1,2016-08-30T22:29:29Z,33b817dfe7a03232d53f7db1bc0d18d98a364854/9edea011b124607c51e3a4c78ebbc7590129b854/5a183e7ff4b06cdcd96b3af39a62b77d4329146c/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/d72caa7df364f7f1ce6cc4ccc78b1089e07bce8f/,2016-10-14 11:37:43-04:00/2016-08-31 16:39:11-04:00/2017-03-23 14:08:52-04:00/2017-04-07 15:05:12-04:00/2016-09-09 09:33:32-04:00/,"sketch of syndrome calculation

the syndrome class is simplistic and inelegant,
but this is a drafting exercise to make sure that
the language features work"
Assembly,BBN-Q/pyqgl2,bb3608b6d7638f22ade047baf404c589784d3d76,2015-12-08T18:03:21Z,e281e54b46fe09121fa92f0c28e909cf522672f2/3e0f8b30e048f342aba527de2f05d90430e40a1d/d1a77b24ebeeffa7f5470bd041b84a470ba3ac3a/,2015-12-10 16:09:42-05:00/2016-09-29 10:18:22-04:00/2015-12-08 16:42:39-05:00/,"add inlined versions of functions to namespace

add them to the namespace as well as putting them as
annotations on the original functions.  This makes
them easier to find."
Assembly,BBN-Q/pyqgl2,9a9f0640ccef6ba4e6bc87c71db79c91995615f9,2016-06-24T20:30:56Z,15cfd751e27195c5f669dcae125e4cb0190723f7/30ecc1f528c973a326d224463ff6f94ef4de01f9/70f0c0eaf36135fa53a2724dffd1958cfe243672/0aed8a16950da4f7d3e8995ebec4aa0ac5ef2418/6785cdccb960d6740112ec1b0a46f387e1f98417/999fa4c3a5ac3c379350abc94b06130813521f9a/,2016-07-19 11:08:55-04:00/2018-10-10 18:12:56-04:00/2016-07-12 17:01:34-04:00/2016-07-13 11:33:51-04:00/2016-09-27 11:32:11-04:00/2016-07-11 16:36:40-04:00/,"many bug fixes, adding debug printouts. Current status: testing with multi.py/anotherMulti2 fails because q3 never does init() so has no WAIT, but my code assumes a WAIT blocks on (and is on) all channels. How should I handle this? For now, raising an exception"
Assembly,BBN-Q/pyqgl2,065efcd80a6c65a9b814c178446eb65adfe0510c,2016-06-30T21:29:47Z,a22ef357d24769a3f6913c0ab97967d80a4fb315/,2016-09-23 15:53:12-04:00/,"invoke the scope checker on function defs

this doesn't check all the function defs in a modules,
but only the functions that are reachable from the
qgl2main.

(we could change this to check every function, even
functions that are defined but never used -- and also
to warn about unreferenced symbols and functions
(although this is a little extreme, because for library
modules, the expectation is that *other* modules will
reference these symbols, not local functions)"
Assembly,BBN-Q/pyqgl2,e07657aac6635047e7571e79f7b6617d28ac6453,2016-05-23T15:05:13Z,dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2017-04-05 17:07:07-04:00/,"temporary fix for cgoto -- needs deeper changes

this lets the current code compile, but to really address
the problem we need to restructure how conditionals are
handled"
Assembly,BBN-Q/pyqgl2,29302b00c0c43ad4b98ca18e095fd51cddd26bf3,2019-06-19T17:35:55Z,91ecf1456789b8d7b2bfcc7894979d78a06d507a/,2019-09-16 11:31:44-04:00/,Clean Ramsey and InversionRecovery methods
Assembly,BBN-Q/pyqgl2,940bd940dd9341d40b72f18f0afb862c7d0e78bc,2016-09-06T20:44:46Z,1bf90265d83b75301896f1bb20e1991487e05827/db6d3739e75272be796f25530cdfa878edb0b53b/c3de65667d0c27921cc7c7329a2561267656ecd4/9690375f0473337f0aa3593260803bdb26444a62/736e89a232db36b5772f6fb70831afce77361794/bf8cfaf8ddcd4c3e3a0cd3ae4cc1031cc8378d72/fcab9d5e65a1b068f3a5c5ed99ff178daa343250/05b10c44be155cdae2b4ba8eac4d1e74d9501a24/3bfe751db8d3c46463119be914a2cac7094da49d/17e96f5d2e64398881ad5427d3f1740d8c055a66/f791681624d5ec22b1a3a0005a83b1bfa31330a9/356749f00b05fc4ae7521f49c9f90680a38a452e/ef42a9b1125661d6997032a6199dae71ffaf7362/,2016-09-07 09:37:51-04:00/2016-09-20 09:30:02-04:00/2016-09-07 14:44:15-04:00/2016-09-12 16:38:08-04:00/2017-04-07 15:56:23-04:00/2016-09-13 17:06:04-04:00/2016-09-06 21:00:38-04:00/2016-09-23 10:51:59-04:00/2016-09-29 14:53:30-04:00/2017-03-27 15:53:23-04:00/2016-09-07 10:19:20-04:00/2017-04-11 16:53:22-04:00/2017-03-22 16:13:42-04:00/,Initial start at testing with unittest.
Assembly,BBN-Q/pyqgl2,0a3dd3eefe1d6d139cfa6d86c04061961f13b606,2016-07-25T14:25:21Z,e591628c28a1072e9f4ad6875d07d72dcb6a06a1/cda56a922723f87a7a6d39af3a862553609f2927/,2016-09-07 16:05:57-04:00/2019-06-24 13:25:22-04:00/,fix comments to reflect more closely what now works
Assembly,BBN-Q/pyqgl2,693d76d959e5944ed3a39f3afc60734e1162d12d,2016-09-21T12:48:43Z,a7d763c536918c55d62a28563770cba2b27a6a43/d4f4f6887422e5821c1b299e022f0d79357584a4/,2016-09-21 14:27:26-04:00/2016-09-21 14:55:41-04:00/,Add a 3rd qubit to the test channel library
Assembly,BBN-Q/pyqgl2,62fffa8b37a9411beee686c93e97dff0ed32d90a,2016-04-14T16:11:56Z,a99fbc838c186178e25d78686802f93eba1c1df8/,2016-04-25 15:52:17-04:00/,print the channels we have in compile_sequence
Assembly,BBN-Q/pyqgl2,6785cdccb960d6740112ec1b0a46f387e1f98417,2016-09-27T15:32:11Z,efedc08ec3dee24a1dcc58842709815e79863a13/,2016-09-27 13:27:42-04:00/,Performance improvements to getNextBarrierCtr and markBarrierLengthCalculated
Assembly,BBN-Q/pyqgl2,69c2c4942dfb11f130ec8e278f79ce5639806a52,2016-04-19T15:07:38Z,a99fbc838c186178e25d78686802f93eba1c1df8/,2016-04-25 15:52:17-04:00/,add new qgl2=False arg and add fix made in QGL repo
Assembly,BBN-Q/pyqgl2,b44db5a4c9d492a26f3be6714f35d35fa905668b,2016-09-21T19:00:48Z,7edb7b396cef97ed9f41affcf41bcc1e396e4015/706341fa677c38073a5e5cc6ec85fa771b3418bd/d652682248d68ed17e06249858a0d071bef60461/30ecc1f528c973a326d224463ff6f94ef4de01f9/b86d08ed8c4d1ff11f55f85d440625ec4278d5e0/05b10c44be155cdae2b4ba8eac4d1e74d9501a24/da710b993ff14915935d4b92176187fded25f651/0f75a5d81f2995a839dba3e2c8ae4443346fd182/9f497d1901e476d0567ff461aeeb3e5b243f6b61/3624bb55bbe1ad664147c5c7aae7e53b110afa73/5fedc3f741202f5a0209858aef39fa476f920fe2/,2018-10-09 13:36:04-04:00/2016-09-28 15:41:09-04:00/2019-06-11 14:57:47-04:00/2018-10-10 18:12:56-04:00/2019-06-11 13:50:19-04:00/2016-09-23 10:51:59-04:00/2016-09-20 15:44:45-04:00/2016-10-13 18:26:39-04:00/2017-02-16 14:55:57-05:00/2016-09-27 11:31:28-04:00/2016-10-13 19:38:27-04:00/,Move creating channel library for testing back into test directory
Assembly,BBN-Q/pyqgl2,c95beb85530a6e25463c0278da1c0534765c6325,2016-06-16T21:24:01Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/,2017-03-22 16:17:55-04:00/,fail if grouper detects an error
Assembly,BBN-Q/pyqgl2,68f72663587af789e5a3c944b841e0932255add8,2016-10-10T15:29:47Z,50f54a51379fca7af4c8eb31f076d1db71fa036c/,2017-04-07 16:34:00-04:00/,"fix test case for empty program

Fail if the preprocessor returns anything: it should
only return a None"
Assembly,BBN-Q/pyqgl2,d6aacdf26184476f6aee4969a831f8983d32d90d,2016-02-01T21:11:10Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/8ebe59f49d5a01bd2bc058e8bea9b1b168b2b7c7/067ab5ef521187afa37b170ee860c083b4d5b570/,2016-06-30 18:21:21-04:00/2016-02-11 16:59:06-05:00/2016-02-11 15:25:24-05:00/,embed some simple tests
Assembly,BBN-Q/pyqgl2,5b6d59d06703388764770dec0f09cc6a260c0114,2015-11-10T23:51:46Z,e57ed44d4a076aaced4afbee3f4f8784e82830ea/5d32a8c08665f93e0d298671105ec4417f59ecca/8ca9d01574f29d7ddbfc80b5730c8859bbe6b126/f45dc8c6d9e5b88c00dff2547a96f53a9643943f/,2016-02-09 11:30:55-05:00/2015-11-23 15:27:05-05:00/2015-11-13 10:11:24-05:00/2015-11-23 15:08:10-05:00/,"remove dead code; add convenience returns_pulse

remove old classes and utilities

Add method for checking whether a function returns a pulse.
This is more correct than the static method of trying to
determine this lexically; each function name needs to be
considered in its context, not globally"
Assembly,BBN-Q/pyqgl2,561bb35044b9bc3f7026e8201239ac987772389b,2016-04-06T01:14:19Z,d3378ba814f5634ebabe9724cf0c5fd380f31e7c/5ac645d651444613745ca65e3c3473324a1a4b41/,2016-05-26 16:06:58-04:00/2017-03-31 10:35:54-04:00/,"add Wait/Sync to qglmain namespace, if needed

if Wait and/or Sync are not visible in the namespace where
qglmain is defined, then add their basic definitions because
they are likely to be referenced later."
Assembly,BBN-Q/pyqgl2,f40d398390b0998ec36c58ba1b2fdf70e1df2e07,2016-06-13T23:30:38Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/0b2de90291611a6282d22a52cadfb837a874f2d4/5330a66565fb71ea127e0753b7160c181e4a2231/,2016-06-30 18:21:21-04:00/2016-06-27 18:40:13-04:00/2016-06-24 11:17:20-04:00/,"some scaffolding for new grouper/barrier code

eventually this file will be removed (subsumed by grouper)
but right now it's used for experiments"
Assembly,BBN-Q/pyqgl2,d68d8b2be4baeb6f093b55e5374a29c26b7b0aaf,2016-10-04T22:09:05Z,99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-06 21:52:58-04:00/,insist that qbits are QubitPlaceholder instances
Assembly,BBN-Q/pyqgl2,3489e14eee54663fe3b2745e79d0747118910338,2015-10-20T15:52:51Z,6f7bb5d286b965f6c3fa68fc861a501125bee616/5b6d59d06703388764770dec0f09cc6a260c0114/3338c4dafcb8986964bc3c24fedb6f1b603a4492/ffad3beeffa8fc7585a067b8e2e2171b3018c2a0/5f579e4c4cf8e674a0743ab0563a3993c5639960/,2015-10-20 16:29:42-04:00/2015-11-10 18:51:46-05:00/2015-10-20 14:08:38-04:00/2015-10-20 12:54:08-04:00/2015-10-20 14:26:58-04:00/,"mostly correct, but needs doc/cleanup

the way the context stack is initialized is awkward.
does there need to be an explicit special case for
the initial context?"
Assembly,BBN-Q/pyqgl2,1db148f56dd9c107b0c4e6c670fc4ca07a15f477,2015-11-10T15:12:32Z,3c99f4af70fffe2f5f8413c249c2de9a8d9cef43/b6e5b37ed95a2b3fc693b6efeccd6522c938ff6d/,2016-07-01 11:11:51-04:00/2015-11-24 13:04:27-05:00/,cleanup of the diagnostic msgs
Assembly,BBN-Q/pyqgl2,00c13d2072512aad3b07ab405fc933a25134cd0b,2016-02-16T18:16:34Z,39305cd69ec192acd0d702be7874490c90e702f1/30ecc1f528c973a326d224463ff6f94ef4de01f9/39188a72c8a2484e3a13f5fb4c3eb65131889f29/956225b652eb80b56aa726a830a1f4768eff67f0/b8e2e96934317ff22b1f06088dc02a8e826312e7/ccb54dbe588819f0c6c5acef356b351ad09489ee/,2019-06-17 18:28:39-04:00/2018-10-10 18:12:56-04:00/2019-06-12 16:34:55-04:00/2016-07-25 14:28:24-04:00/2019-06-17 14:44:15-04:00/2016-02-25 13:54:02-05:00/,first pass at clean qgl1 and qgl1 versions of CPMG and HahnEcho
Assembly,BBN-Q/pyqgl2,bb728282e2365260f4ebd992c1c79b1c6e550856,2017-03-30T19:26:04Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/48c2e0f824be6ace018a77fcd260c8f6f00f3dba/66ed22c49453a5aa49f7866faffbcb0efa22df35/30ecc1f528c973a326d224463ff6f94ef4de01f9/e31145b3337acdf8917932119e192f4448733704/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/5ac645d651444613745ca65e3c3473324a1a4b41/,2017-04-13 10:01:57-04:00/2017-04-05 16:16:56-04:00/2017-05-15 10:21:32-04:00/2018-10-10 18:12:56-04:00/2017-04-05 16:56:18-04:00/2017-04-07 15:05:12-04:00/2017-03-31 10:35:54-04:00/,"Add basic support for runtime calculations.

i.e. we now support things like:
```
m1 = MEAS(q1)
m2 = MEAS(q2)
r = my_operator(m1, m2)
if r:
	X(q1)
else:
	Id(q1)
```

in the sense that we now emit a STORE instruction for the runtime calculation
with the opaque runtime call."
Assembly,BBN-Q/pyqgl2,7b4622e19f989ed296373662591601a7e8f25eaf,2016-06-01T17:30:42Z,9554d34ff2639c458f7e04c9072e0b65b0578fc3/a398c0db878cfc8111a007e57b72b03f601550e6/017b82de79e3d02d2aeaf715494e7f973d7398d6/,2016-06-01 19:08:16-04:00/2016-06-01 15:26:34-04:00/2016-06-01 17:55:16-04:00/,wip for repeat detection/optimization
Assembly,BBN-Q/pyqgl2,9a15e9deb3b45bb80de99428b564937ae864f0ff,2016-03-04T14:36:47Z,7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2016-04-08 13:19:09-04:00/2017-04-05 17:07:07-04:00/,"cleanup: remove some diagnostics, dead code

use the _body routines consistently instead of copying the
body of the loop around"
Assembly,BBN-Q/pyqgl2,6a01e34fb3b4d364db7b56b96337b3db02869075,2016-02-12T15:22:09Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/760cc9add70c097b1bb732f791d454d42fc8cf32/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/2016-02-26 17:24:16-05:00/,more complicated test of 'for' grouping
Assembly,BBN-Q/pyqgl2,415ae1f94938180403b91a1d4a07576c25927543,2015-11-05T22:00:31Z,673d4af48598e6cf070394c538e19c3facb4f69b/e2f8e8dbb3969de855447d253bc9ed0772d58f20/170e720cbfa5069f523c4eaed7d550185e33eb6f/42855ec601664de8d132fa579a868ebcc2e3dda9/e281e54b46fe09121fa92f0c28e909cf522672f2/,2015-12-10 17:38:11-05:00/2016-03-01 17:12:39-05:00/2016-04-06 17:19:48-04:00/2015-11-10 14:10:56-05:00/2015-12-10 16:09:42-05:00/,"use new importer-base name resolution

find the definition for a function from its import context,
instead of assuming that it's always local"
Assembly,BBN-Q/pyqgl2,7ff7d4403f219798f183239d1e07df601baa9344,2016-05-06T14:07:02Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/1fd84313e44d1e74d3ea86ee9885263719001685/,2017-05-25 16:22:05-04:00/2016-08-18 12:14:41-04:00/,clean up calling compile_to_hardware and comment on digitizer
Assembly,BBN-Q/pyqgl2,96ba32c894075dee8727fb1565dc534a32235f6d,2016-07-07T22:10:24Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2017-04-06 10:01:35-04:00/2016-09-15 13:53:59-04:00/,"fix qbit references after barriers added

we have two mechanisms that depend on tracking all of the
qbits referenced by a subtree of the AST: which qbits we
need to protect via a barrier in order to implement any
synchronization required by that subtree, and whether
a particular statement contains any code that needs to
execute on a channel processor.

In order to synchronize things across multiple channels,
we might add barriers around a statement that reference
qbits not referenced by that statement -- in which case
the parent statement may need to be updated as well
so that the barriers will be placed on all the right channels
when the code is grouped by channel.

For example, in a sequential context:

    for q in [q1, q2]:
	with concur:
	    foo(q)

which becomes something like:

    with Qfor:
	with Qiter: # ONLY references q1
	    with concur:
		foo(q1)
	with Qiter: # ONLY references q2
	    with concur:
		foo(q2)

then when we add the barriers (shown here in a simplified form)
needed to make this sequential:

    with Qfor:
	with Qiter:
	    Barrier(1, [q1, q2])
	    foo(q1)
	    Barrier(2, [q1, q2])
	with Qiter:
	    Barrier(3, [q1, q2])
	    foo(q2)
	    Barrier(4, [q1, q2])

Now we need to update the references on each Qiter so that
they both reference [q1, q2] so that all four barriers will
appear on both q1 and q2.

The way we do this in this commit is by returning a new
list of referenced qbits to caller whenever we add barriers
to a body of statements, so that the parent of the body can
be updated.

This lacks elegance and I suspect there's a better way,
either by using two variables or by being smarter about
how the grouping is done."
Assembly,BBN-Q/pyqgl2,4a308bccce870ba857a5ef9b134b9597cbb1a468,2016-10-14T16:09:12Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2017-04-07 15:05:12-04:00/,"make the qbit names closer to ""normal"""
Assembly,BBN-Q/pyqgl2,2046d547729c7d5669507b6cbae46aa69a3746dd,2017-03-24T17:15:04Z,e31145b3337acdf8917932119e192f4448733704/,2017-04-05 16:56:18-04:00/,Fix instruction ordering when flattening conditionals.
Assembly,BBN-Q/pyqgl2,28a519b4f9985b4dfd7d332029d81bb7f3248eb3,2016-09-14T22:22:26Z,b7cd8659d0b8aa4cf22a882feca7cbef1eae340b/,2016-09-15 13:48:47-04:00/,"trying to give better feedback for import failures

if an import fails for any reason (usually because there's
a syntax error, or a reference to a nonexistant module)
then we'd like to give better feedback to the users.
Right now we don't give as much as we would like,
making it hard to spot the error."
Assembly,BBN-Q/pyqgl2,b83bd733bf2546c3a530ff8e47593113db873163,2015-12-07T23:33:05Z,f782658e06b511bc2ad181bf2e03456a03cc0625/3e0f8b30e048f342aba527de2f05d90430e40a1d/,2016-02-26 16:24:40-05:00/2016-09-29 10:18:22-04:00/,"make the function inliner an instance method

this is cleaner than passing the importer around"
Assembly,BBN-Q/pyqgl2,878be35fcde09a64716aeaba75cc9c83e9386411,2016-09-12T20:38:59Z,5c12dd53a964fb5e4ea4bc1ef5110358b8bb404c/1319777c1cc8972ba40595e08dfd3a7627cb7837/,2016-10-07 09:58:51-04:00/2016-09-28 14:03:44-04:00/,comments/cleanup. SPAM works (with fixed args)
Assembly,BBN-Q/pyqgl2,3624bb55bbe1ad664147c5c7aae7e53b110afa73,2016-09-27T15:31:28Z,7edb7b396cef97ed9f41affcf41bcc1e396e4015/da710b993ff14915935d4b92176187fded25f651/bc3b21ab6c5b4b247cd632cc581cf9e0301a1b14/,2018-10-09 13:36:04-04:00/2016-09-20 15:44:45-04:00/2019-09-13 14:38:54-04:00/,unit tests always replace any existing channel library.
Assembly,BBN-Q/pyqgl2,e9b9bdd2868994f62fe0d3e5eaad4551d12556e3,2016-04-15T21:04:58Z,376981202e56dab3c048c7d6877b21aef9cac7e8/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/0339297462577559fbca509b9ba06a2997828742/e3989d7514231679f7be5c8c52c28901f8e44584/,2016-05-05 16:06:12-04:00/2019-09-26 12:06:38-04:00/2016-04-28 09:31:16-04:00/2016-04-19 12:10:33-04:00/,Simplify RabiAmp notebook.
Assembly,BBN-Q/pyqgl2,3d2bb2828899bc4be7e3c4acf837bcd0f5409dce,2016-09-06T21:04:19Z,1bf90265d83b75301896f1bb20e1991487e05827/5d37a4729256da8654900c2fd2fd48b3498b0862/ff3c9e51fdf012c291b8eaa852eb6f83cd03c8a1/bc3ea9371c6a94dc0a05a23470b1c07338b93dba/efde7ec9a45dee048dde974a5daa3e6069c6e108/,2016-09-07 09:37:51-04:00/2016-09-06 21:01:34-04:00/2017-04-06 13:58:21-04:00/2016-09-06 22:01:17-04:00/2017-04-10 14:56:39-04:00/,Add Travis and GitLab CI YAML files.
Assembly,BBN-Q/pyqgl2,56502c354463901ccb10cdb6318b356341611954,2019-09-13T18:42:41Z,69637b7eae113a830fa13c067714ceef1283f19c/,2019-10-02 13:57:45-04:00/,update README on status
Assembly,BBN-Q/pyqgl2,1ebdb539ee352cb9ff78f38b08205c50ff612299,2019-06-11T18:58:17Z,424b8959957267c68e2832e10bed2168e9af90c8/ef101589a68a6cf182e82a75489ff49d93580d7c/9b79c87699b33f1b9acd81a2baf499769fb899d2/,2019-06-12 16:32:16-04:00/2019-08-16 14:24:21-04:00/2019-06-24 13:26:05-04:00/,"Start fixing unit tests of basic sequences to use QRegisters, etc. More to do, though the tests don't give errors"
Assembly,BBN-Q/pyqgl2,519d5a70fcfd6e8a270398359b7bf95484407093,2019-06-17T17:44:26Z,322c306829bd1123c4df21340342d534ac2a0762/,2019-06-24 13:23:10-04:00/,Allow creating a QRegister from a single other QRegister. Allows passing a QRegister to a function that promptly creates one
Assembly,BBN-Q/pyqgl2,70f0c0eaf36135fa53a2724dffd1958cfe243672,2016-07-12T21:01:34Z,467892d4bf102a5486ba18dc5b848f510ef6ca9a/ba44e93a6b3eb9e243b85dfa3c447705e22b0572/d0b7e03ba8ce86e581d677e743d62ef36f8c30ef/0aed8a16950da4f7d3e8995ebec4aa0ac5ef2418/6785cdccb960d6740112ec1b0a46f387e1f98417/efedc08ec3dee24a1dcc58842709815e79863a13/,2016-09-15 13:53:59-04:00/2016-09-22 13:02:29-04:00/2016-07-13 11:48:06-04:00/2016-07-13 11:33:51-04:00/2016-09-27 11:32:11-04:00/2016-09-27 13:27:42-04:00/,"* copy barrier dicts so isn't same object between dicts so marking the
version in barriersByCtr calculated doesn't update the others
* add an == comparator for barriers
* Avoid double marking a barrier calculated since we now add values
* Waits now have a ctr that is the channel list and the counter of
waits on that channel since the start; this should be comparable
across sequences, so we can properly find the waits with existing
logic
* Reworked logic for getPrevUndoneBarrierCtr"
Assembly,BBN-Q/pyqgl2,5b9aaebdae76cafbff53de01cf8607777f39c259,2016-06-28T15:28:15Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/,2016-06-30 18:21:21-04:00/,fix typos in DebugMsg constants
Assembly,BBN-Q/pyqgl2,874d95a0031a4a625a74b0cd73fd2069a580549f,2016-05-27T14:49:10Z,dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2017-04-05 17:07:07-04:00/,"fix bug in use of copy-loc

copy/paste error; attempting to assign locations to
the string representations of the labels rather than
the AST representations"
Assembly,BBN-Q/pyqgl2,c021be39f57eb221305e1b987d332ce5d1ad165c,2016-10-07T01:40:32Z,3eea02db2ad3d45b8770afe2570e532740fcae61/,2016-10-07 05:28:44-04:00/,"make sure the current rewriter is applied

don't rely on the rewriter from an earlier statement;
make sure that any updates to the rewriter have been
applied correctly to the next statement to evaluate.

Addresses ticket:90"
Assembly,BBN-Q/pyqgl2,e65c71895c086478340865b1994d6ee6c62b245b,2016-07-22T16:02:38Z,e61a8731b1c6a6fecb2e5a73a79dc7a96337535d/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2016-07-28 10:49:08-04:00/2017-04-06 10:01:35-04:00/,"add ""implicit"" Barrier import; fix qbit marking

We weren't marking the qbits of the original call when
we inlined a function that took qbits as parameters and
turned them into sequences of statements that didn't
(which is a bit weird on the face of it, but some
methods take implicit qbit parameters so this can occur).
This meant that the grouper would fail to group some
expressions properly, and they'd get lost.

Also add an ""implicit"" import for Barriers (and
eventually perhaps other QGL1 functions) so that
the user doesn't need to import functions, like
Barrier, that get added by the preprocessor.  This
functionality will be completed in sequences.py;
this is just the setup for the real fix."
Assembly,BBN-Q/pyqgl2,86d01d68a3b80c09e89c89799a1fb650bda67646,2016-05-11T15:34:47Z,e25b68d34688f9f8c909288b056b3dfef2359b4f/467892d4bf102a5486ba18dc5b848f510ef6ca9a/0f4b6c56ec50070a8b713d6b028eddf89b0a368a/,2016-10-05 14:49:19-04:00/2016-09-15 13:53:59-04:00/2016-05-12 00:22:34-04:00/,"handle subscript assignments

we need to do an explicit eval here, in the case where a subscript
is an arbitrary expression, which is unfortunate because it may cause
side effects to occur a different number of times than expected."
Assembly,BBN-Q/pyqgl2,490b816642fd857bb1e26fedecbbc7c142aa5945,2016-03-18T14:10:12Z,6590fa7704526ae87459c5311c937b3b83173ff6/,2016-03-31 19:12:10-04:00/,add stubs for the other ControlFlow functions that Dan uses
Assembly,BBN-Q/pyqgl2,4526c98058166eabdce7fd7e719b929c1efdf445,2016-04-06T22:35:00Z,7ed7827c4de9422d3b1ff995760badf0199a7758/3f2ea3d243268ee50c8dd32c1d313616815a625f/,2016-05-12 00:23:53-04:00/2016-05-11 11:11:14-04:00/,"pass the shared importer into SingleSequence

SingleSequence was trying to reconstruct the namespaces,
which actually caused them to be re-parsed, undoing the
work we'd done when we seeded the namespaces with definitions
for things like Wait and Sync.

There should be a way to locate the importer for a given
namespace without reconstructing it, but right now there
isn't."
Assembly,BBN-Q/pyqgl2,0f3fe4d4f8f2f8d1230feecb85c8c9244d9a5a20,2016-03-01T22:14:02Z,8c26dc6db09a579c467d38169013f358e6a78927/,2016-04-13 18:10:24-04:00/,use the new form of the specializer
Assembly,BBN-Q/pyqgl2,27a480251f41147f42a98593feb1964ef98f980b,2016-06-23T15:09:00Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,"correct class comments for AddSequential

we no longer insert with-concur blocks in order to
create sequentiality; we insert explicit barriers"
Assembly,BBN-Q/pyqgl2,c63f9abd605a701d527d107ebc418f3c8f801a96,2016-05-12T02:43:59Z,444e95042d4d5875f0f21e72c06476362ad3e544/,2016-05-18 16:42:19-04:00/,create the evaluator outside the main loop
Assembly,BBN-Q/pyqgl2,cafe6269726ce6481a33f9aa2bcd854c87fe38c9,2016-08-19T14:24:08Z,c6dbd2b3879e4d99dc115d4c03a845f2d6ffd78f/5431f01e6410ba93273db439d5f781b99fde3774/4f4b71beeaba6a1f2e9d945f2a3e50eaddf54876/,2016-09-06 18:26:08-04:00/2016-08-22 13:42:17-04:00/2016-09-15 17:46:24-04:00/,"prototype of the QGL2check procedure

for whatever reason, sys.exit isn't causing things to exit
immediately.  Not sure why that is."
Assembly,BBN-Q/pyqgl2,e039c6e8a0bb7e0d55d010185a800bb7c3f514bb,2016-02-22T19:45:24Z,4cf47b421ad55b4f420741d0e56c7a850d2b728f/e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/447a1cb1247747e32ef9a4d07b342767108d2f93/fc671a7e59d780c580dac208bf43dee11440b942/,2016-02-26 13:43:46-05:00/2017-04-12 11:00:41-04:00/2016-02-25 15:22:22-05:00/2016-03-10 08:35:20-05:00/,remove sequence_list attribute since QGL2 compiler doesn't like it yet. Move init(q) into new_helpers.
Assembly,BBN-Q/pyqgl2,ad76ab4ac298e83e49d22d3bcfeb3c28ac24eddc,2017-03-24T02:15:42Z,48c2e0f824be6ace018a77fcd260c8f6f00f3dba/9898452226f3d4e6b4b4ceb826474c9e0443dc9a/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/bb00b99e1e4d75bc9b830dc31b1dec1992755866/,2017-04-05 16:16:56-04:00/2017-03-24 11:11:27-04:00/2017-04-05 17:07:07-04:00/2017-03-29 17:35:27-04:00/,"Support basic runtime values.

The set of supported cases is rather minimal to start, but things such as:
```
m = MEAS(q1)
if m:
	X(q1)
else:
	Id(q1)
```
ought to work."
Assembly,BBN-Q/pyqgl2,25c0fe7f39be0012c94771e4101c40c05e2a491f,2016-02-24T15:18:11Z,cad7b15acca6e715c5b0923440f354fd47b1376f/453b25fb17c17e7d3f04390a1d7bfab3bc4efca0/,2016-03-09 15:11:23-05:00/2016-05-29 21:10:28-04:00/,"add better routine for copying location info

the ast.copy_location function doesn't know about
location fields that we've added; this function is
""pyqgl2-aware"""
Assembly,BBN-Q/pyqgl2,d72caa7df364f7f1ce6cc4ccc78b1089e07bce8f,2016-09-09T13:33:32Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/5a183e7ff4b06cdcd96b3af39a62b77d4329146c/33b817dfe7a03232d53f7db1bc0d18d98a364854/,2017-04-13 10:01:57-04:00/2017-04-07 15:05:12-04:00/2017-03-23 14:08:52-04:00/2016-10-14 11:37:43-04:00/,"add real Hadamard; change fake CNOT definition

We want to be able to distinguish the operations by eyeball,
even though they're only placeholders"
Assembly,BBN-Q/pyqgl2,94c08a3447fb65afe7540230a2ca6580cda38785,2016-04-14T14:27:21Z,a99fbc838c186178e25d78686802f93eba1c1df8/,2016-04-25 15:52:17-04:00/,clean up verbose output
Assembly,BBN-Q/pyqgl2,f5ccd1ce8f086e4b45de37a3f0bf267889fdfcc1,2016-06-06T14:50:13Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/,2017-04-07 13:22:20-04:00/,"add the setup statements prior to the per-qbit sequences

the git merge heuristic didn't catch this change, and I don't
know why.  (I may have resolved a conflict incorrectly)"
Assembly,BBN-Q/pyqgl2,800224a355776ae3d817e0b425574317eae3d4a2,2015-11-19T19:53:28Z,1d7ef261e6ca139d2ac75deaaeb5dca2ec801a5a/66b114bedaae9ad7e9428ab2b59b394fcd76bf35/1488c06458baae3683a7d0251be02586393e22a5/9001a985cdefea174528403884e7a11513765c21/0852f8af94c8b208acf80b12de8cdc3fa9590bcd/80c66a55cd4a1fd64afdaa72dea2ab42b2fe5c80/3e0f8b30e048f342aba527de2f05d90430e40a1d/3dec7b1af18c7a1e2361a1b79df1e9f56a9f24f6/2b109095e098683dbeb6c22d0c8d65428f2eb31a/c61a8629542da409076c68d2b27bd2d6783a7d0f/1211bbefce3f770fe77fe78fd7a72297a9d123a9/30eb3a2e55d4b9aa451b2da20aa3a5592a480bc3/,2016-06-09 15:29:21-04:00/2015-12-07 18:34:30-05:00/2015-11-23 10:52:15-05:00/2015-11-23 18:09:42-05:00/2015-12-04 17:25:26-05:00/2016-04-01 09:13:59-04:00/2016-09-29 10:18:22-04:00/2015-11-24 13:26:13-05:00/2015-12-03 14:07:55-05:00/2015-12-07 17:16:28-05:00/2015-12-08 12:45:37-05:00/2015-11-24 14:56:27-05:00/,"sketches of routines to inline functions

only works for inlining methods right now;
getting returns right is awkward in Python"
Assembly,BBN-Q/pyqgl2,cb975217c053138d4e6f20abc0f3cfc91dc8a1cc,2016-06-16T21:21:54Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-03-22 16:17:55-04:00/2017-04-06 10:01:35-04:00/,"use the new grouper

the new grouper is not compatible with the old grouper,
which means that the flattener will fail right now"
Assembly,BBN-Q/pyqgl2,20dedec964618edd7efd65e1f5180555a0a0bda9,2016-03-28T19:24:45Z,73d3663612c5127c1e6b036a9f40e86089645906/48f241e225aefb0576662297ea290f68b0c9fb00/,2016-09-29 16:36:27-04:00/2016-04-20 13:35:26-04:00/,"fix doAllXY() to create its own qbit, for easy testing"
Assembly,BBN-Q/pyqgl2,ddf2ffdc616044f860033bc77b47704d00958a61,2016-06-29T20:17:51Z,32ecb54cab0aa6684473b1c0a6e04a3aef839a73/2a5d9eda26de6714a4d38bce019b60933aa91f28/b79de7d4ad2794b039d1f4f77653e8a7dbe8d7b6/d846317069ec3cfec09975c8ddf7408030ff3baa/18b794f15d6189ae57aece74b90b55be0718e63a/,2016-06-30 13:13:46-04:00/2016-06-30 17:27:07-04:00/2016-06-29 18:16:07-04:00/2016-06-30 15:13:56-04:00/2016-06-30 15:39:34-04:00/,"prototype of scope violation checker

see issue #56 for more description

this doesn't work yet, but the mechanisms are shaping up"
Assembly,BBN-Q/pyqgl2,967712573ed696e5d8ab581dd5e570188dec5118,2016-09-09T15:42:04Z,27f82084b3176663baa8375a9d5bc013479f51be/19f090f0b17ed60b9195793f183eae5fd7b73a2b/232a7e379b0311f1d19d505b525193629a2598e3/73d3663612c5127c1e6b036a9f40e86089645906/bb728282e2365260f4ebd992c1c79b1c6e550856/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2017-03-29 11:21:06-04:00/2017-04-13 16:03:24-04:00/2017-03-22 17:09:00-04:00/2016-09-29 16:36:27-04:00/2017-03-30 15:26:04-04:00/2017-04-07 15:05:12-04:00/,Add stub for CNOT_CR and a test of it
Assembly,BBN-Q/pyqgl2,e3df2cefc4c56f2d5810c89dfea0ba0f90079d24,2017-03-22T20:16:10Z,c687a1ddf1228fa2f885c6988c9906a00a516adc/,2017-03-23 11:59:02-04:00/,"Don't bother with ""infunc"" annotations."
Assembly,BBN-Q/pyqgl2,2e89a9d65c25c114e3461b4d561f416a32ca558d,2019-06-11T17:51:27Z,83f10b6c9be041bef0d5ddec23f1acdb02164c0f/,2019-06-17 18:27:10-04:00/,"drop qreg_list (unneeded and unused as a QRegister already holds multiple qubits); fix comments; add signatures for MeasFactory, MarkerFactory"
Assembly,BBN-Q/pyqgl2,11d7381d9ff00f5f005352d0902d27570c6ad14e,2015-11-11T00:45:36Z,3d7684c52e971ee5e1db1dd858a2a387230acea1/,2015-11-13 16:54:06-05:00/,"add more useful comments

also remove unreferenced imports"
Assembly,BBN-Q/pyqgl2,5faa6ac5e6e2ba9e516886ba00c9e4679a84ba61,2016-06-10T13:24:19Z,69de8ccae327e22ebe374cbb83519755655f5922/,2016-06-10 09:25:14-04:00/,init comes from util
Assembly,BBN-Q/pyqgl2,fd72bc0dd9fab5e7190054525e9a70310315fe50,2016-04-06T13:08:23Z,29302b00c0c43ad4b98ca18e095fd51cddd26bf3/48f241e225aefb0576662297ea290f68b0c9fb00/,2019-06-19 13:35:55-04:00/2016-04-20 13:35:26-04:00/,comments on doRamsey
Assembly,BBN-Q/pyqgl2,edd7dfb9ddaf002b5904dc200b73e4a3f86785c5,2016-04-28T17:21:39Z,232fe6aa404c73b84b9a8efe3daa8be0227869b2/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/3bde1cac6163d90287d2bef2d0ca551c8d544488/,2017-04-07 17:09:27-04:00/2017-03-23 09:45:53-04:00/2016-05-06 16:18:18-04:00/,add a measurement to my test so I see the digitizer
Assembly,BBN-Q/pyqgl2,a8b1df24c286d3bc0d42251460a82be1aa73cb21,2016-05-13T14:13:11Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/,2016-06-30 18:21:21-04:00/,"add ast2str to simplify diagnostics

also some (commented-out) diagnostics"
Assembly,BBN-Q/pyqgl2,f363a7bf1f9f3c912196ed1807905282125a0b57,2016-06-28T01:09:50Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,remove obsolete AddBarriers classes
Assembly,BBN-Q/pyqgl2,996228b23a7311edeb3d0e528f1454a302d30806,2015-12-11T18:30:05Z,5d90941cb879212d5043e1f5222d59022e24488b/c1ca2f051f40ec7f16a6c338ecf33f30a4e18af4/,2016-03-21 16:09:56-04:00/2016-04-06 16:30:50-04:00/,"reworking how qbit variables are detected/tracked

in progress.  this version is incomplete"
Assembly,BBN-Q/pyqgl2,4d65c2eacfe3640e03ff028c987317b11919e8ec,2016-05-20T14:47:13Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/,2017-05-25 16:22:05-04:00/,More hack code to skip over empty sequences
Assembly,BBN-Q/pyqgl2,ec5d2493b4d497df8407a5be031bc5df6971c364,2019-06-17T17:51:22Z,90cee6454d7911872816d8abb64c51311859ef0d/91ecf1456789b8d7b2bfcc7894979d78a06d507a/,2019-06-18 18:39:29-04:00/2019-09-16 11:31:44-04:00/,"Complete redo and cleanup. Now contains working QGL2 implementations of latest QGL1 CR functions, plus a main() that compiles & runs each of them, as a sample/test"
Assembly,BBN-Q/pyqgl2,04786fcbd27db36af9ab5760e9b90ae18958fe74,2017-03-22T21:32:06Z,27f82084b3176663baa8375a9d5bc013479f51be/,2017-03-29 11:21:06-04:00/,Fix QFT test.
Assembly,BBN-Q/pyqgl2,059a777243981f98d2dfcaf9c8b29926c2a8bf83,2016-06-30T15:27:40Z,567e7b44cf7cdf514a4dc5b9330ad4bfe6866588/,2016-09-19 17:06:17-04:00/,"add utility for recording msgs for examination

useful in unit tests where we want to compare the
messages created with the messages we expect"
Assembly,BBN-Q/pyqgl2,4c7a814a0aed61c4361ed0dee5b4586c8b424c4a,2016-08-29T22:28:01Z,9cc453db37ae8a16a4f86469caa7bc2dc9651b85/,2016-09-06 18:45:25-04:00/,"method to eval a single statemnt (i.e. assignment)

not used right now, but might be a way to simplify
assignment statements, which is too complicated."
Assembly,BBN-Q/pyqgl2,4a2a0aa6fef753bc8451d0f0d0293bed7fbd3ec7,2017-04-12T15:00:58Z,e867bb59b73d8b26fb1d85d3bedc521e3326b076/,2019-10-11 12:08:09-04:00/,"Minor tweaks to QRegisters.

Make reset() a classmethod. Define len() on QReferences."
Assembly,BBN-Q/pyqgl2,2ae99b8615b5956acd5b58480da47dc57587d875,2015-12-04T20:02:46Z,c61a8629542da409076c68d2b27bd2d6783a7d0f/e281e54b46fe09121fa92f0c28e909cf522672f2/,2015-12-07 17:16:28-05:00/2015-12-10 16:09:42-05:00/,"add renaming of all locals during inlining

not all cases have been tested, but works for basic
cases"
Assembly,BBN-Q/pyqgl2,7b46f7dbe5ff212d1683cf68bc7a516a0b924da3,2015-12-15T21:38:36Z,65fa5a9942c61ca2b32d92d9e6f48f4e70cd8ff6/,2016-08-18 18:47:48-04:00/,"collapse names of function names in other modules

collapse them down to a flat string (instead of a
nested Attribute) so we can search for them in the
same way as other symbols"
Assembly,BBN-Q/pyqgl2,b5ab11e9758a6e4870d324e35294429264aae691,2016-09-12T16:03:47Z,7d51040821a2b7be9aaa1a326f4053500b375814/a76459f972ef3d91648f774e2d5982c4ed1dafcf/40a5995b32ae2290dbf897ead844b3f1fe7cce70/42bbab0943065a0535b5daf85482e9a1b3db6d14/,2016-09-24 15:52:47-04:00/2017-04-13 10:01:57-04:00/2019-06-17 13:45:20-04:00/2016-09-24 14:38:13-04:00/,"new stub / function to do a flat_top_gaussian on an edge, to support PiRabi et al"
Assembly,BBN-Q/pyqgl2,58ee91e79e50b9a96bfdf3fa48355c0b1c48c121,2015-11-13T15:19:50Z,8db82a413fdaa013dabf739c5fe1d85b1cc05479/,2016-01-22 13:48:23-05:00/,"add . to import path

this seems necessary, but I'm not convinced it's correct"
Assembly,BBN-Q/pyqgl2,a76459f972ef3d91648f774e2d5982c4ed1dafcf,2017-04-13T14:01:57Z,ce4252b38c69a4d52eadbd4454de6c051c90be8d/d5259010741db8ab055c5384c6bcba80eebfddd8/bb9c84bf80034d4ac76fffea84b64a0d363de97f/39305cd69ec192acd0d702be7874490c90e702f1/30ecc1f528c973a326d224463ff6f94ef4de01f9/cda56a922723f87a7a6d39af3a862553609f2927/2e89a9d65c25c114e3461b4d561f416a32ca558d/baf708c6e624f8c1271336391ee2cda6bdc19fb5/19f090f0b17ed60b9195793f183eae5fd7b73a2b/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/bca8536feff2be7b199139d76cc61a3668f864eb/40a5995b32ae2290dbf897ead844b3f1fe7cce70/138d0850af1a32891ee18bd737427c9f849fc959/9217721da958f15856927c4f9695c61f2fdad3f1/,2019-06-12 13:42:45-04:00/2019-06-18 19:55:45-04:00/2019-06-17 13:47:18-04:00/2019-06-17 18:28:39-04:00/2018-10-10 18:12:56-04:00/2019-06-24 13:25:22-04:00/2019-06-11 13:51:27-04:00/2019-06-11 14:59:37-04:00/2017-04-13 16:03:24-04:00/2019-06-19 13:35:55-04:00/2019-06-17 13:51:37-04:00/2019-06-17 13:45:20-04:00/2019-06-11 13:48:44-04:00/2019-06-19 13:11:28-04:00/,Rename qbit -> qreg and qbit_list to qreg_list.
Assembly,BBN-Q/pyqgl2,8e2a3b0f300fc550de370dc39fc8549ef32ee204,2015-10-22T22:41:05Z,9b7a544414650f8d04e88697397a27578208dcdb/50673f0f0fee2a96e38bad053f57243f70996db0/170e720cbfa5069f523c4eaed7d550185e33eb6f/63756f13d45cbd3c7ff192cb2196e32b4d814764/,2016-03-18 16:16:29-04:00/2015-11-10 18:03:34-05:00/2016-04-06 17:19:48-04:00/2016-03-28 16:38:33-04:00/,"handle Qbit allocation

update the current context if a qbit is allocated,
and use that context going forward.

probably more error cases to check, but checks for the
basic errors, and chides the user if a reference to
a qbit is reassigned."
Assembly,BBN-Q/pyqgl2,1011c23b64bc4f09a532f841f973e4ba7b8cd8c3,2015-12-04T18:01:58Z,182775d6778082e94af6cc832d2c4f2a7f258f0a/,2017-03-30 14:11:17-04:00/,"more hardwired pulse names, for testing only

this will all be removed and we'll discover functions
that create pulses based on annotation instead of hardwiring,
but that's not complete yet"
Assembly,BBN-Q/pyqgl2,362b36d9e9f9d57a6e63552b78b5524049c52b13,2016-08-18T21:25:25Z,c7497df9f519ff1b808cbc2bafae21752051fe1f/72cacc79eaf15d058bcd932607d06d6b3d8d175d/589e28d94e99a2d4f9b04cbdfb9615d5635f050d/65fa5a9942c61ca2b32d92d9e6f48f4e70cd8ff6/,2016-09-15 17:13:03-04:00/2016-09-12 16:36:37-04:00/2016-08-19 10:25:17-04:00/2016-08-18 18:47:48-04:00/,"fixed runtime checks for stubs

tracked down that made stubs get recursively added
repeatedly (we were adding to the end of an existing
list of statements instead of creating a new one)

partitioned the functionality of the runtime checker
(more to do here -- it's still very clunky to call)
and separated it from the inliner, which was causing
headaches conceptually: adding runtime checks is not
considered to be a modification to the call tree:
even though it changes some of the calls, it doesn't
change *what* gets called (only *how*)"
Assembly,BBN-Q/pyqgl2,51821968714ce3496458434978ae4b1bc8f543d3,2016-02-03T15:52:04Z,9b7a544414650f8d04e88697397a27578208dcdb/,2016-03-18 16:16:29-04:00/,"handle NameConstant parameters for builtins

this code is probably dead, and intended to be dead
in the future, but while it might be called, at least
we'll make sure that it doesn't crash"
Assembly,BBN-Q/pyqgl2,f16e6fa922ac9ad5c4e5a17f3f7d2923c7b82034,2016-05-02T23:02:29Z,57d9203f7bd9c8767f302e7e79864895889c1279/cbd421f6cefc2dbd63d696b0ca92698054324459/cc6d6bc7882fe4742346762ceabd214a384d8f44/eff0faa7b0cf86800679aeb80aa7a400b69e47c2/ddbaf39ee4162f676ebf53b94da3e98c1181d857/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-05-11 18:24:52-04:00/2017-03-22 16:14:31-04:00/2016-09-19 15:21:57-04:00/2016-05-05 16:34:41-04:00/2016-05-13 06:43:26-04:00/2017-04-06 21:52:58-04:00/,"testing assignments

assignments work, but not completely general yet.
comments about abstractions not implemented yet,
including checking actual parameters against formals
(which is partly done elsewhere, but only wrt to
qbit/classical types; we need to do everything)"
Assembly,BBN-Q/pyqgl2,dc3cf36f7d3749770848fcc440337e487c29cdda,2016-08-29T22:16:29Z,2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/dd5bd31fd9f4d72e1ca008ecb54869c75ac6f8e3/2c05aa20f9e62c8d0109e39da2b1db2915861a3d/,2016-09-06 18:44:10-04:00/2016-08-30 18:07:33-04:00/2016-08-30 17:30:12-04:00/,"handle subscript element assignment in eval

there are probably a lot of edge cases remaining,
but simple things work"
Assembly,BBN-Q/pyqgl2,9265f051b5c7f4df1edaff3c30029e4f3e3a8c90,2016-01-25T17:58:55Z,960ebc53027973267019fee3066a9bd20750b220/c4400a5c4f42c5c6c4f5b766a2c2bd871e42cb76/,2016-02-04 16:21:42-05:00/2016-02-08 17:15:20-05:00/,"handle relative imports

deal with the 'dot' notation inside imports,
and fix the error messages to include the original
notation (so that if there's an error in .foo, it
gets printed as .foo instead of a messy thing
like ../something/./foo)"
Assembly,BBN-Q/pyqgl2,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6,2017-03-22T20:17:55Z,0ef68904abf9cbec8dab18502224194e82f87f14/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-03-22 16:36:36-04:00/2017-04-06 10:01:35-04:00/,Comment out compiler stages we don't need.
Assembly,BBN-Q/pyqgl2,91ecf1456789b8d7b2bfcc7894979d78a06d507a,2019-09-16T15:31:44Z,aa9fef6a94209054f860318c5c3fb4237dd4a4cb/,2019-09-26 12:02:31-04:00/,"Supply axis_descriptors and extra_meta data to QGL1 compile_to_hardware, matching QGL1 versions"
Assembly,BBN-Q/pyqgl2,63924cc3fddb459ff4bb13e21d5aaafbbd547d2f,2016-08-18T17:18:33Z,232fe6aa404c73b84b9a8efe3daa8be0227869b2/e45e88637feb3c1b3fe7dcba676b6ad8ad976c22/232a7e379b0311f1d19d505b525193629a2598e3/967712573ed696e5d8ab581dd5e570188dec5118/73d3663612c5127c1e6b036a9f40e86089645906/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2017-04-07 17:09:27-04:00/2016-09-27 19:04:11-04:00/2017-03-22 17:09:00-04:00/2016-09-09 11:42:04-04:00/2016-09-29 16:36:27-04:00/2017-04-07 15:05:12-04:00/,Test file for testing edges / 2 qubit stubs
Assembly,BBN-Q/pyqgl2,1cfbe6a5f9fe6597899e0654141da646ff601b2e,2016-02-18T21:00:04Z,5271a92b91f026b55ea241b4dda434a6e9f309d7/853d88257383734c38522454933a77f3bf15510c/4d4482de68da8dfcd9a3683e4eabae12988943e6/8f1c86075cd1d0646742c33010f523380b020bf2/93c10c9b909171fad737051c8473cdd28d44c773/93e91f3cb853321899340850a241a5c237f40b31/2be4234461b4bd2af1f75c8f8fa483e5a80407c1/,2016-02-22 15:05:12-05:00/2016-03-01 12:59:34-05:00/2016-09-29 15:11:40-04:00/2016-02-19 14:55:37-05:00/2016-02-18 16:32:03-05:00/2017-02-16 14:56:23-05:00/2019-08-16 14:21:52-04:00/,"include Blake's rewrite of Reset, and then a qgl2 version of that"
Assembly,BBN-Q/pyqgl2,749167b84aef793a81aebf049b20d8e014384207,2016-05-27T14:55:01Z,dabe675ff8918039179cf53f1b22c7d99597ee52/95bc42df89afc143ad25d53b1ac50588b8414eb0/,2016-07-22 09:48:58-04:00/2016-07-07 13:46:31-04:00/,add test doign repeat of block with Barriers that fails as expected at the moment
Assembly,BBN-Q/pyqgl2,2e6122cbfa173ebbeff0cea74d62f86c96830ad1,2016-05-30T01:40:45Z,3e317a747a48325612aa748bd4c7d38080951ed0/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2016-06-22 18:13:47-04:00/2016-06-23 18:00:39-04:00/2017-04-05 17:07:07-04:00/,"handle Qfor/Qrepeat when there's no with-concur

I'm not convinced this should happen here instead
of being handled by the grouper (or some combination of both)"
Assembly,BBN-Q/pyqgl2,230259845f6dc59a50f7e77e1bd637e9d379906b,2016-05-02T18:35:33Z,5ef8bad1610c96a35f31b0ae8e9cc4d56a2b2cdf/,2016-05-02 18:08:02-04:00/,"clean up interface to native_exec; docs

clean up the pythondoc for native_eval"
Assembly,BBN-Q/pyqgl2,f2d7e2c28813deeef204a03abe4219450c29bd83,2016-05-26T20:34:55Z,33067f585ad40ad342a80c3ddb2eadecf750346b/73d3663612c5127c1e6b036a9f40e86089645906/232fe6aa404c73b84b9a8efe3daa8be0227869b2/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/,2016-07-25 14:30:35-04:00/2016-09-29 16:36:27-04:00/2017-04-07 17:09:27-04:00/2017-03-23 09:45:53-04:00/,add another test with some explicit lengths that differ
Assembly,BBN-Q/pyqgl2,facc6ccc72cf72ba359a3bb7c0260e570045977c,2015-12-04T18:06:24Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/,2017-04-13 10:01:57-04:00/,"add 'seq' statement

it's useful for lists of statements not naturally
delineated by another statement body, but I'm not sure
whether it's a good long-term solution"
Assembly,BBN-Q/pyqgl2,d3de87fa0b4eb305fb1d6eb07a59ed0a68cdd27c,2016-09-15T18:27:34Z,7f140d94808dfcfe9aa3d166e655ed117e48c3ea/d6d6e6c68520ad1763d656298cc169ad93443073/17e96f5d2e64398881ad5427d3f1740d8c055a66/ef42a9b1125661d6997032a6199dae71ffaf7362/232aa6630dee440efd89b8cd05d67e0a35fbe264/64740a570fe942e2acc5ca955fac1bba67553f81/39305cd69ec192acd0d702be7874490c90e702f1/6a434ccb0431faa3f3da1d2f4be6ab3da446285a/d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/39e3932cd90e5ef914db10f83a30b0dd04f434d2/5c12dd53a964fb5e4ea4bc1ef5110358b8bb404c/e07e07028cf66d29fb7ffd1f437550ed8c89a033/968345dae11e8dbf983c06dc26cd22c6cac38aa4/032f0241eb969870a941956a7db8a17a86e76aa9/3bfe751db8d3c46463119be914a2cac7094da49d/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/356749f00b05fc4ae7521f49c9f90680a38a452e/a4e9b584ec2385271b2a8b174cd697da236dd543/348ef91c136834c516e89fd54f48bdfcf4591a4e/05b10c44be155cdae2b4ba8eac4d1e74d9501a24/b3bff13f83081af9987d1d91ce1ba2df96836a9c/530ff82ff7e2cbb7ad5a3262477407be7db0b186/cfe1f35afa7f46c80e11b1cc915868d58b77e5b0/1ebdb539ee352cb9ff78f38b08205c50ff612299/,2016-10-07 09:39:34-04:00/2016-09-27 19:03:24-04:00/2017-03-27 15:53:23-04:00/2017-03-22 16:13:42-04:00/2017-03-23 14:06:24-04:00/2016-09-20 09:36:01-04:00/2019-06-17 18:28:39-04:00/2016-09-29 14:20:43-04:00/2017-03-23 12:03:20-04:00/2016-10-12 10:18:52-04:00/2016-10-07 09:58:51-04:00/2016-09-28 13:55:57-04:00/2016-10-12 10:11:57-04:00/2017-04-11 16:00:27-04:00/2016-09-29 14:53:30-04:00/2017-04-07 15:05:12-04:00/2017-04-11 16:53:22-04:00/2016-10-07 12:26:51-04:00/2016-09-21 10:39:29-04:00/2016-09-23 10:51:59-04:00/2016-10-05 10:03:50-04:00/2017-04-11 11:41:47-04:00/2019-06-17 13:52:32-04:00/2019-06-11 14:58:17-04:00/,"add tests for most of the basic sequences, reflecting current status. So no calibration sequences are done, RB.py tests not included, and various #s are hard coded. AllXY test is disabled (should work soon). Haven't quite finished tests for Swap and RabiAmp_NQubits."
Assembly,BBN-Q/pyqgl2,fc671a7e59d780c580dac208bf43dee11440b942,2016-03-10T13:35:20Z,e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/,2017-04-12 11:00:41-04:00/,2 small typos
Assembly,BBN-Q/pyqgl2,a75d9fb40268df5edef39ccc535737b39a5debb2,2016-05-26T18:08:23Z,5e5ec4c308bc020a1a2f6659460ab75879fb1225/e86b8d2bc34d900e8697630275ec19c18cdbae38/3e317a747a48325612aa748bd4c7d38080951ed0/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/,2016-05-26 19:05:28-04:00/2016-05-26 18:09:53-04:00/2016-06-22 18:13:47-04:00/2017-04-05 17:07:07-04:00/2016-06-23 18:00:39-04:00/,"basic functionality restored for Qfor/Qiter

these now can be nested arbitrarily.  Testing
for break and continue statements still needs
to be performed."
Assembly,BBN-Q/pyqgl2,622d3dc9f8749adf42dd4dc5ef9d5f5e945a9284,2015-12-16T03:07:52Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,"a simple example, using the current syntax"
Assembly,BBN-Q/pyqgl2,69bce9b8adc838bd7d6c15fecdc4feb925eff0fb,2016-06-09T20:32:33Z,9a71e54fc5cb200c46d5b192d2ebe318eb40607d/ebf88aeda0758a5a0c9a8b1b386573e7fca2f911/,2016-07-01 11:57:21-04:00/2019-09-12 16:34:12-04:00/,"add check for multiple use of same qbit

this check is imperfect because it:

a) can be confused by multiple variables that reference
    the same qbit

b) doesn't give the programmer enough info to solve the problem"
Assembly,BBN-Q/pyqgl2,f791681624d5ec22b1a3a0005a83b1bfa31330a9,2016-09-07T14:19:20Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/c3de65667d0c27921cc7c7329a2561267656ecd4/bf8cfaf8ddcd4c3e3a0cd3ae4cc1031cc8378d72/d6d6e6c68520ad1763d656298cc169ad93443073/05b10c44be155cdae2b4ba8eac4d1e74d9501a24/3bfe751db8d3c46463119be914a2cac7094da49d/17e96f5d2e64398881ad5427d3f1740d8c055a66/9690375f0473337f0aa3593260803bdb26444a62/356749f00b05fc4ae7521f49c9f90680a38a452e/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-03-23 14:06:24-04:00/2016-09-07 14:44:15-04:00/2016-09-13 17:06:04-04:00/2016-09-27 19:03:24-04:00/2016-09-23 10:51:59-04:00/2016-09-29 14:53:30-04:00/2017-03-27 15:53:23-04:00/2016-09-12 16:38:08-04:00/2017-04-11 16:53:22-04:00/2017-03-22 16:13:42-04:00/,Add tests for the remainder of RabiMin.py
Assembly,BBN-Q/pyqgl2,6848fc22a83b00082c9e0e1895e6463c8a90c033,2016-09-16T14:47:56Z,3e0f8b30e048f342aba527de2f05d90430e40a1d/,2016-09-29 10:18:22-04:00/,"only paint control statements with call info

When we try to group the operations of an inlined
function by qbit (which happens elsewhere), we need to
make sure that we preserve the info about the original
call so that we can separate control statements properly.
Statements that just wrap an expression, however,
should only be grouped by the qbits that they reference
directly.

for example:

	def foo(a: qbit, b: qbit):

	    if cond1: # needs to be on both a and b
		X(a)  # needs to be only on a

	    if cond2: # needs to be on both a and b
		X(b)  # needs to be only on b

	    Y(a)  # needs to be only on a
	    Y(b)  # needs to be only on b

The barrier for Y(a) needs to be condition on both
a and b so that we don't charge ahead and start doing
Y(a) immediately while X(b) (which might or might not
be executed) is finished."
Assembly,BBN-Q/pyqgl2,d5259010741db8ab055c5384c6bcba80eebfddd8,2019-06-18T23:55:45Z,e69b2d64c34d7874ebad02ee707d55c7dd929c14/,2019-09-13 16:44:18-04:00/,clean up a single implementation of FlipFlop
Assembly,BBN-Q/pyqgl2,6306f5adfd154ce2ef7e5c9f3893305e1f669022,2016-10-04T12:27:25Z,2039148c0479387a4147c430a84c9d39f53a895d/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/,2016-10-04 16:46:41-04:00/2016-10-07 09:39:34-04:00/,"add Ramsey test with normal generators

test omitting the list() wrapper from generators"
Assembly,BBN-Q/pyqgl2,d5204011ed02416bf5406b93ed3c5746ff450d4c,2015-10-21T16:11:58Z,a4b19dc9ec7008b01891e777d88e2cec9abefe67/07c61e2c9f4588a395f95fc9e433267c24c9c60f/24c142ed6f812c7d98b7e107758e0f77f469c889/,2015-11-05 16:58:18-05:00/2015-11-11 14:22:19-05:00/2015-11-10 19:44:50-05:00/,"changed some type mismatch warnings to errors

if we don't match up qbits values to qbit parameters
then things are going to blow up when we try to do
the substitution.  Instead of trying to muddle on
with the processing (to generate additional useful
diagnostics) we might as well bail out."
Assembly,BBN-Q/pyqgl2,f2d86e7ed1cfa8b475e9a73b621da17fcfc1e2c4,2018-10-10T21:50:35Z,d652682248d68ed17e06249858a0d071bef60461/,2019-06-11 14:57:47-04:00/,"make sure the channel library is initialized

I'm skeptical that this is 100% correct, but it
gets the unittests working, sort of"
Assembly,BBN-Q/pyqgl2,9eb53d5150223e975335820cdf66bc0d14a438f3,2017-03-30T18:06:05Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,"Move BarrierIdentifier to grouper module.

That is the only place it is used."
Assembly,BBN-Q/pyqgl2,77b56c4f5915d00483d92b608e7161e6867f5d59,2017-04-08T01:12:55Z,007809886ea2b0ba82be8bc17002f9761dbfde36/dced4de17ced5dda99cc709bf797364fd6c2d27e/,2017-04-10 09:24:33-04:00/2017-04-11 16:42:52-04:00/,"Allow for slice ranges in QRegisters.

i.e. you can now do:
a = QRegister(5)
b = QRegister(a[0:3])"
Assembly,BBN-Q/pyqgl2,467892d4bf102a5486ba18dc5b848f510ef6ca9a,2016-09-15T17:53:59Z,2e6ce391646c6a0ee41c0b9591c21d330fcfb5e9/e25b68d34688f9f8c909288b056b3dfef2359b4f/0151c5d99395750d260bef24bf188e51195c3183/c2141967280aec3b34745815a2b49776ceedbdb1/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/efedc08ec3dee24a1dcc58842709815e79863a13/c07ad45f0d29d88ac0b32f92cdc5b94b35cfd80e/fbfa3804c8964c4400d5690624477e6e8bd001b3/,2016-08-31 16:43:09-04:00/2016-10-05 14:49:19-04:00/2016-10-07 17:08:32-04:00/2016-09-20 19:32:33-04:00/2017-04-06 10:01:35-04:00/2017-03-22 16:17:55-04:00/2016-09-27 13:27:42-04:00/2016-10-07 16:51:24-04:00/2016-09-15 14:23:21-04:00/,Various performance improvements. Use pickle (in quickcopy.py) instead of copy.deepcopy. Suppress debug printouts if log level 3+ (-D3 or -D4) and if didn't specify to save intermediate output.
Assembly,BBN-Q/pyqgl2,032f0241eb969870a941956a7db8a17a86e76aa9,2017-04-11T20:00:27Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/3f53a0c1f7d168ac2783c2bf3ac004ab4b548e29/1ebdb539ee352cb9ff78f38b08205c50ff612299/cda56a922723f87a7a6d39af3a862553609f2927/9b79c87699b33f1b9acd81a2baf499769fb899d2/,2017-04-13 10:01:57-04:00/2017-04-11 16:21:23-04:00/2019-06-11 14:58:17-04:00/2019-06-24 13:25:22-04:00/2019-06-24 13:26:05-04:00/,"Only accept QRegisters, QReferences, and iterables of QRegisters as toplevel bindings."
Assembly,BBN-Q/pyqgl2,f8cc371f9533693ca41474ec9ff47f6889874e13,2016-06-13T19:48:06Z,720f9c5451e35ff1fddab56b97c998e179469dac/467892d4bf102a5486ba18dc5b848f510ef6ca9a/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/0a311595509dcfb579f59b7672ca1f2dc68198bd/c07ad45f0d29d88ac0b32f92cdc5b94b35cfd80e/35857b77e836a35e1c8b480cca366924db9a79ed/31bc08fe845e19eb6d2141d5835dd6a15a69e5b2/,2016-10-03 16:24:18-04:00/2016-09-15 13:53:59-04:00/2017-04-06 10:01:35-04:00/2016-06-23 15:54:19-04:00/2016-10-07 16:51:24-04:00/2016-06-30 18:49:45-04:00/2016-06-13 19:14:43-04:00/,basic functionality except for qbit creation
Assembly,BBN-Q/pyqgl2,5529eed5daa11b86263c7d1393349ebfaede5aa4,2016-06-23T20:43:48Z,dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/,2017-04-05 17:07:07-04:00/2016-06-23 18:00:39-04:00/,"start to update flattener wrt new grouping/barrier

this is functional, except that it contains a large amount
of code that should be dead, and the output isn't in the
format that the rewriter expects to turn this back into QGL1.
The latter change will be addressed first."
Assembly,BBN-Q/pyqgl2,036d64348b517226421a6f352e7890d051cec0bb,2016-03-28T19:23:40Z,3f2ea3d243268ee50c8dd32c1d313616815a625f/fb4bee82a00e664668fbdfd3e3f69576d8e397c2/c16764c2105be1dc3d45200de7498c1618a8c38d/4526c98058166eabdce7fd7e719b929c1efdf445/,2016-05-11 11:11:14-04:00/2016-03-28 16:37:41-04:00/2016-03-31 11:26:10-04:00/2016-04-06 18:35:00-04:00/,"merge with Dan's stuff for getting a single sequence. try to infer the function name, and return the (callable) function"
Assembly,BBN-Q/pyqgl2,e3989d7514231679f7be5c8c52c28901f8e44584,2016-04-19T16:10:33Z,376981202e56dab3c048c7d6877b21aef9cac7e8/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/0339297462577559fbca509b9ba06a2997828742/ef42a9b1125661d6997032a6199dae71ffaf7362/,2016-05-05 16:06:12-04:00/2019-09-26 12:06:38-04:00/2016-04-28 09:31:16-04:00/2017-03-22 16:13:42-04:00/,further cleanup of sample notebooks
Assembly,BBN-Q/pyqgl2,dcd2bfd93d1abbb86f385a360790a3fad7cd3519,2016-04-01T13:48:17Z,3f2ea3d243268ee50c8dd32c1d313616815a625f/,2016-05-11 11:11:14-04:00/,"fix from Aaron, when saving a copy of the code

make sure to call find_imports before emitting the code.
(this should be structured better -- forcing the caller
to do this seems error-prone, and in fact I already made
the error once)"
Assembly,BBN-Q/pyqgl2,05b10c44be155cdae2b4ba8eac4d1e74d9501a24,2016-09-23T14:51:59Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/6a434ccb0431faa3f3da1d2f4be6ab3da446285a/d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/032f0241eb969870a941956a7db8a17a86e76aa9/232a7e379b0311f1d19d505b525193629a2598e3/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/da710b993ff14915935d4b92176187fded25f651/17e96f5d2e64398881ad5427d3f1740d8c055a66/722cebfeda7fadce9a4657971bd7731fc85ca74a/,2017-03-23 14:06:24-04:00/2016-10-07 09:39:34-04:00/2016-09-29 14:20:43-04:00/2017-03-23 12:03:20-04:00/2017-04-11 16:00:27-04:00/2017-03-22 17:09:00-04:00/2017-03-23 09:45:53-04:00/2016-09-20 15:44:45-04:00/2017-03-27 15:53:23-04:00/2017-03-22 16:18:22-04:00/,Add rewrite of assertEqual for pulse sequences that uses difflib.unified_diff instead of ndiff - MUCH faster when the test is failing
Assembly,BBN-Q/pyqgl2,53aa630dcdcbce14118eaebd0ff211582e489ad9,2016-09-20T14:28:17Z,822dacd6f543615fc8cb0bbf74b523abf179c4d4/,2016-09-27 16:34:57-04:00/,Mark failing tests.
Assembly,BBN-Q/pyqgl2,3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af,2016-05-13T18:58:56Z,ce4252b38c69a4d52eadbd4454de6c051c90be8d/8cdf50e3f3c97e91dabf592fb4bb44e5ed4cef5e/60ff672fe63657948385d69b9f33e497f58ef28b/ec5d2493b4d497df8407a5be031bc5df6971c364/0a6a77c169d7af5c4dd2dac7e23919a5123581c1/968345dae11e8dbf983c06dc26cd22c6cac38aa4/91ecf1456789b8d7b2bfcc7894979d78a06d507a/60227f5d493445cb5f1476a4ffdbcca17fb327e3/ee4fac6b4af31c640b3fad195241a656177735f3/62409cd6269ea8644472010e2a7636ff556b76d7/b8e2e96934317ff22b1f06088dc02a8e826312e7/a29ad125d1662023231fef50e27ee697ded4c333/cda56a922723f87a7a6d39af3a862553609f2927/,2019-06-12 13:42:45-04:00/2016-07-15 11:42:29-04:00/2016-09-24 15:57:51-04:00/2019-06-17 13:51:22-04:00/2019-08-16 14:22:52-04:00/2016-10-12 10:11:57-04:00/2019-09-16 11:31:44-04:00/2017-03-23 17:06:57-04:00/2017-04-06 13:45:31-04:00/2016-09-27 19:02:19-04:00/2019-06-17 14:44:15-04:00/2016-09-24 14:31:52-04:00/2019-06-24 13:25:22-04:00/,use only absolute imports. Move init to qgl2.qgl2
Assembly,BBN-Q/pyqgl2,97fd6c72c341dc6233339e59cc528f71bddb52aa,2016-07-06T21:21:37Z,3e0f8b30e048f342aba527de2f05d90430e40a1d/,2016-09-29 10:18:22-04:00/,"continue prototyping the eval-time checker

remove calls that use this code, however, because
it doesn't work properly yet -- many cases unhandled.

I won't finish this before vacation, probably, and I don't want
to leave this branch in non-functioning state."
Assembly,BBN-Q/pyqgl2,e7671ebd3d6e1b2275d3a9f8f3086f016584d810,2015-12-01T21:16:36Z,c1ca2f051f40ec7f16a6c338ecf33f30a4e18af4/,2016-04-06 16:30:50-04:00/,"waveforms are any functions that return a pulse

don't use a canned list; find pulse functions on the fly"
Assembly,BBN-Q/pyqgl2,917a97f4a34398c3a7d8a5d4e2e4e54ef599ab7d,2019-09-13T20:31:44Z,516aea6ebbc7912f00e0930a89ecb39efddf057f/,2019-09-16 11:31:01-04:00/,Helpers to generate axis_descriptors
Assembly,BBN-Q/pyqgl2,0151c5d99395750d260bef24bf188e51195c3183,2016-10-07T21:08:32Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,"reduce unnecessary copying in the grouper

two changes:

1. instead of making a copy of the entire tree and
    then replacing the children, only make a copy of
    the root node.  We do this by temporarily replacing
    the body of the root with an empty list, making
    the copy, and putting the original body back

2. eliminate a copy of the body statements by using
    the input copy as the scratch copy while processing
    the last qbit.  (this operation is destructive to
    the scratch copy, so we can't do this until we're
    doing the last qbit)

the upshot is that for the single qbit case, we've eliminated
two (nearly) complete copies of the input tree."
Assembly,BBN-Q/pyqgl2,e07e07028cf66d29fb7ffd1f437550ed8c89a033,2016-09-28T17:55:57Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/39305cd69ec192acd0d702be7874490c90e702f1/,2017-03-23 14:06:24-04:00/2019-06-17 18:28:39-04:00/,HahnEcho now works more fully
Assembly,BBN-Q/pyqgl2,954002b8dce2a90127a146d839fca186c3e4a5fd,2017-03-21T14:38:11Z,69637b7eae113a830fa13c067714ceef1283f19c/,2019-10-02 13:57:45-04:00/,Minimal documentation of compiler steps/stages.
Assembly,BBN-Q/pyqgl2,9b79c87699b33f1b9acd81a2baf499769fb899d2,2019-06-24T17:26:05Z,ef101589a68a6cf182e82a75489ff49d93580d7c/,2019-08-16 14:24:21-04:00/,"fix Rabi unit tests, plus create QRegisters from the matching Qubit directly; less error prone"
Assembly,BBN-Q/pyqgl2,3a016d8ee3404a53b9da8d4b35cdba34d6edc68b,2019-09-13T18:41:08Z,91ecf1456789b8d7b2bfcc7894979d78a06d507a/,2019-09-16 11:31:44-04:00/,"Bug fixes and cleanup, so SimultaneousRB_AC and SingleRubitRB_AC now work, and comments reflect the issues elsewhere"
Assembly,BBN-Q/pyqgl2,ecbb4b555430abe51da447cd001212b5796bc092,2015-12-14T23:23:19Z,d6609429fab293865800b39da43c68af66047894/,2016-05-16 16:04:39-04:00/,"convenience function to halt on error

if we've seen an error (but continued on in the hope
of getting some good diagnostic messages) then call
this method to halt before moving to the next phase
of the program"
Assembly,BBN-Q/pyqgl2,5f579e4c4cf8e674a0743ab0563a3993c5639960,2015-10-20T18:26:58Z,5b6d59d06703388764770dec0f09cc6a260c0114/,2015-11-10 18:51:46-05:00/,"cosmetic change to indentation of diagnostics

don't put as much whitespace before each import msg"
Assembly,BBN-Q/pyqgl2,403f8ca7cc9b1ca8be023b680e96790293ca06bb,2017-05-25T20:22:05Z,b48dc66f25b9f7b3dd7fa92a8ddc085b0711a834/fc86e40edd9744dd60fecc9a130ef15bffe9196e/,2017-06-08 11:50:35-04:00/2019-09-13 16:28:50-04:00/,Dramatically simplify qgl2_compile_to_hardware.
Assembly,BBN-Q/pyqgl2,911736e07dfafc594092684b941a3970f804d8c7,2016-04-14T19:04:34Z,d4c5be0d5320963642cc958433f72f5a6bc68911/,2016-05-02 14:28:38-04:00/,fix problem with evaluating AST
Assembly,BBN-Q/pyqgl2,15ffa5bc196aed990e7b27ac057b4189476738e9,2016-03-31T23:38:03Z,ce4252b38c69a4d52eadbd4454de6c051c90be8d/48f241e225aefb0576662297ea290f68b0c9fb00/,2019-06-12 13:42:45-04:00/2016-04-20 13:35:26-04:00/,"remove import of PulsePrimitives; add control stubs

we shouldn't import QGL1 stuff here, and we need to
import the control stubs manually right now (although
eventually this should be automated)"
Assembly,BBN-Q/pyqgl2,9e41daaf2971453d6e0df0b56f1252a00f9a9ba9,2016-05-17T16:27:22Z,b39d88a3615dbec591fb248a713ce1da509ea9e8/,2016-06-08 16:58:15-04:00/,"added stub for CmpEq

need to think about what other stubs make sense
for comparison functions; I don't understand CMP
well enough yet"
Assembly,BBN-Q/pyqgl2,dd9394c625a7c6c5138f3534431a34add267f79b,2019-06-21T15:30:29Z,d06e9a42f9596c48ace82ae82c1df4d249715de9/2204ad7f8b33b7ae2971e077fd5b391db6f9f7d9/,2019-06-27 15:45:34-04:00/2019-09-13 16:32:33-04:00/,"simpleminded implementation of BlankingSweeps with a QGL2 function for the sequence and a QGL1 function for the loop compiling to hardware. FIXME: Test CL has no phys_chan.generator, and the sweep params may not be reasonable in the test main()"
Assembly,BBN-Q/pyqgl2,f2ddef629359f6b4fe29c60ed9cede38f00c2fa4,2016-03-18T20:36:54Z,f40d398390b0998ec36c58ba1b2fdf70e1df2e07/aa26adf868fff3486042cdb63d1c37a45ca8ac27/,2016-06-13 19:30:38-04:00/2016-04-08 16:58:22-04:00/,use a constant for seq
Assembly,BBN-Q/pyqgl2,1d070afb4c5fa5cf7eb3ad1bf50c6208cd486b7a,2015-10-20T18:46:56Z,9c5bde1898650ca5be0c2680a7c055f773e2ea08/07c61e2c9f4588a395f95fc9e433267c24c9c60f/24c142ed6f812c7d98b7e107758e0f77f469c889/,2015-11-10 18:50:58-05:00/2015-11-11 14:22:19-05:00/2015-11-10 19:44:50-05:00/,use importer; use QGL2 lang constants
Assembly,BBN-Q/pyqgl2,ce80fe23ee599e86ce112369f9612cda433695d4,2016-07-07T22:34:22Z,baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2019-06-11 14:59:37-04:00/,"more tests for barriers

not all the results have been completely reviewed"
Assembly,BBN-Q/pyqgl2,93c10c9b909171fad737051c8473cdd28d44c773,2016-02-18T21:32:03Z,8f1c86075cd1d0646742c33010f523380b020bf2/93e91f3cb853321899340850a241a5c237f40b31/,2016-02-19 14:55:37-05:00/2017-02-16 14:56:23-05:00/,re-order args to qreset to match args to Reset. Pass in the measChans to qreset so we measure the right channels (in general)
Assembly,BBN-Q/pyqgl2,7d91ee99c852dc019fbee029833348e067773324,2016-05-12T23:00:18Z,ddbaf39ee4162f676ebf53b94da3e98c1181d857/9864616317c02db858472e4f861f282e054683ad/dc3cf36f7d3749770848fcc440337e487c29cdda/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2016-05-13 06:43:26-04:00/2016-05-16 16:35:35-04:00/2016-08-29 18:16:29-04:00/2016-09-15 13:53:59-04:00/,"defer rewritting variables until necessary

don't blindly rewrite variables across an entire
statement, because part of the statement may change
the mapping (and by then the info is lost)"
Assembly,BBN-Q/pyqgl2,1039810d60a5c875f7ceda44c5ff5c830c83b6df,2016-05-25T20:45:41Z,9800d938f4f5f08f003c6d16ece745e6e8273bb2/e31145b3337acdf8917932119e192f4448733704/,2017-03-23 17:09:22-04:00/2017-04-05 16:56:18-04:00/,Add stubs for LoadCmp and the various Cmp functions
Assembly,BBN-Q/pyqgl2,200d480eda5e4279e6192d1dae034fc7f5af99ff,2016-02-11T21:21:26Z,8fef60223a508b19c549dd1d2938e5a7486b3878/ce4252b38c69a4d52eadbd4454de6c051c90be8d/4d534baa977af5f119a5af91d7d7da10e41af3ac/e039c6e8a0bb7e0d55d010185a800bb7c3f514bb/e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/853d88257383734c38522454933a77f3bf15510c/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/968345dae11e8dbf983c06dc26cd22c6cac38aa4/615352f7b26ba981e27b58c382d9565184fccadd/62409cd6269ea8644472010e2a7636ff556b76d7/4cf47b421ad55b4f420741d0e56c7a850d2b728f/aef4175cc70ab3498c8828fe7c662120b0f3f486/faed54ad9b90e3ad6ef9a772754cfc4335cc12bb/,2016-03-17 13:44:27-04:00/2019-06-12 13:42:45-04:00/2016-02-16 11:31:36-05:00/2016-02-22 14:45:24-05:00/2017-04-12 11:00:41-04:00/2016-03-01 12:59:34-05:00/2016-05-13 14:58:56-04:00/2016-10-12 10:11:57-04:00/2016-03-17 13:40:17-04:00/2016-09-27 19:02:19-04:00/2016-02-26 13:43:46-05:00/2016-02-16 11:29:00-05:00/2016-02-29 09:10:30-05:00/,"revised AllXY to use blocks of statements not python lists, and a new decorator to try to help the glue from QGL2 to QGL1"
Assembly,BBN-Q/pyqgl2,58032c6fd87afb94b34dd35f808eff47cbdd2e91,2016-04-05T20:23:11Z,8c26dc6db09a579c467d38169013f358e6a78927/,2016-04-13 18:10:24-04:00/,placeholder for a call to constant propagation code
Assembly,BBN-Q/pyqgl2,af2f9abb22ef2956c04ced351d6df508b16b4f9b,2016-02-24T19:43:57Z,8fef60223a508b19c549dd1d2938e5a7486b3878/62409cd6269ea8644472010e2a7636ff556b76d7/,2016-03-17 13:44:27-04:00/2016-09-27 19:02:19-04:00/,compileAndPlot returns a handle to the window for callers that want that
Assembly,BBN-Q/pyqgl2,399fc16ebed980e6374c4c06248e6559daefd613,2015-11-30T19:45:30Z,f97498bbbbd8b136660e6736b322f47c777ff858/da8b8b3138cca7be5e19596da9c38ec6f977cc87/628f2240b0142a48606abcc1606cafc1b34191db/b315d6ab3e7ca4bc2756fe6bf0400cf2e0f2a7ce/561bb35044b9bc3f7026e8201239ac987772389b/cb3c04cf1c98d6c67b9018d31c48fcb637ae0874/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2016-04-07 11:54:09-04:00/2015-12-01 16:09:19-05:00/2015-11-30 17:31:59-05:00/2015-12-07 17:26:36-05:00/2016-04-05 21:14:19-04:00/2016-01-22 13:47:15-05:00/2016-03-25 16:12:15-04:00/,"start of ""main"" program to simplify use

eventually will become the CLI for the preprocessor,
up in scripts"
Assembly,BBN-Q/pyqgl2,9c5a62b338523833d8bd2036ea2f829f1e726743,2016-03-17T02:21:37Z,7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2016-04-08 13:19:09-04:00/2017-04-05 17:07:07-04:00/,"support break and continue in REPEAT blocks

we always do everything in the most general way, which
means that we often add extra labels that are never
referenced (i.e. we add labels needed to support ""continue""
even if there are no ""continue"" statements in the block).
This is OK because labels are free at runtime"
Assembly,BBN-Q/pyqgl2,444e95042d4d5875f0f21e72c06476362ad3e544,2016-05-18T20:42:19Z,718a3d9a3a12e92ce382bd73a4048991b7aaf039/3677c10a9f69f01971dbdb8eb67a0aa0f8d5161e/,2016-05-25 18:37:16-04:00/2016-09-19 10:12:55-04:00/,"cleanup the main loop - remove dead code

comment out the unroller, which is no longer used,
and remove the test whether the unroller made any
changes (since it never will if it's commented out)"
Assembly,BBN-Q/pyqgl2,9800d938f4f5f08f003c6d16ece745e6e8273bb2,2017-03-23T21:09:22Z,e31145b3337acdf8917932119e192f4448733704/,2017-04-05 16:56:18-04:00/,Cleanup of qgl1.py
Assembly,BBN-Q/pyqgl2,8ebe59f49d5a01bd2bc058e8bea9b1b168b2b7c7,2016-02-11T21:59:06Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/06a08bd650997ece86188246d62da8b773e34643/,2016-06-30 18:21:21-04:00/2016-03-09 18:03:23-05:00/,"return a more useful representation

unfortunately there is still a bug in how lists of
statements with multiple qbits are merged together
(see the triple-nested loop--all the statements are
dropped, instead of merged into one)"
Assembly,BBN-Q/pyqgl2,156bd7901b7dc52a897fe637ff23b7d4e90ee9a2,2016-03-21T20:42:12Z,aeb80edee57487014837931862d9aa617e949fac/8dcac7bae4a4b3ac5f40f4245d8f3bfc8440c632/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2016-04-20 14:04:13-04:00/2016-07-22 09:49:27-04:00/2017-04-07 15:05:12-04:00/,test file for ways you can and cannot create a qubit
Assembly,BBN-Q/pyqgl2,0410ea63691c7f77873ad86a16168d4c48479abd,2015-11-24T19:18:19Z,7b46f7dbe5ff212d1683cf68bc7a516a0b924da3/fe23589da046428c73d2d75aa0673efb81a8f475/bb3608b6d7638f22ade047baf404c589784d3d76/1211bbefce3f770fe77fe78fd7a72297a9d123a9/774cbf867dcbcde02c73bebdb7be21b65a1d19e9/30eb3a2e55d4b9aa451b2da20aa3a5592a480bc3/,2015-12-15 16:38:36-05:00/2015-12-02 18:23:10-05:00/2015-12-08 13:03:21-05:00/2015-12-08 12:45:37-05:00/2016-03-18 10:09:02-04:00/2015-11-24 14:56:27-05:00/,sketch out the inliner
Assembly,BBN-Q/pyqgl2,ff3c9e51fdf012c291b8eaa852eb6f83cd03c8a1,2017-04-06T17:58:21Z,09d8a149bd0acc11e9883d12a05746cc06f83d4f/,2019-02-25 14:19:10-05:00/,Update TravisCI script.
Assembly,BBN-Q/pyqgl2,615352f7b26ba981e27b58c382d9565184fccadd,2016-03-17T17:40:17Z,a89acfe5108e89bb8efa763dbbdc387000b47d80/,2016-03-25 16:12:15-04:00/,strip all the no longer needed stuff. working on imports of the qgl1 stubs
Assembly,BBN-Q/pyqgl2,bcaafd1e4e5917cee2475f366c7b3d99e587b571,2016-02-23T21:47:48Z,30ecc1f528c973a326d224463ff6f94ef4de01f9/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/39188a72c8a2484e3a13f5fb4c3eb65131889f29/4cf47b421ad55b4f420741d0e56c7a850d2b728f/809241af26d59ed76e81fb5c908ff2e7e262c84e/b8e2e96934317ff22b1f06088dc02a8e826312e7/ccb54dbe588819f0c6c5acef356b351ad09489ee/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2018-10-10 18:12:56-04:00/2019-06-19 13:35:55-04:00/2019-06-12 16:34:55-04:00/2016-02-26 13:43:46-05:00/2016-05-12 19:41:16-04:00/2019-06-17 14:44:15-04:00/2016-02-25 13:54:02-05:00/2016-03-25 16:12:15-04:00/,initial rewrite of T1T2 functions
Assembly,BBN-Q/pyqgl2,d9b9288543d1cce7b178a985ac657105cc202372,2016-03-25T20:02:20Z,e8869d31e5329a6781f8b9f75c44265c045d706a/c83f2f16110457d4512a757486ea2ba0ed87e77a/5204ecd0473c66ee812039244ace1e5a35cb22b7/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/3b31a3ecf49fb20b15d38883465414f14336ce36/13f98aaf9bc5cae4002ef0616c72683c52f4f3be/0d5953cfae64c729ecac1086ff403495241503d9/2e56196f4ba58a0ec597f2d4d3e35bf98fc4211d/d898e0c46e8c73fbcea9448087435b9d751bd404/4526c98058166eabdce7fd7e719b929c1efdf445/,2016-03-28 16:39:09-04:00/2016-03-28 14:02:37-04:00/2016-06-30 18:32:06-04:00/2017-04-06 21:52:58-04:00/2016-05-02 18:42:48-04:00/2016-03-25 16:31:09-04:00/2016-04-07 14:40:32-04:00/2016-04-08 09:45:23-04:00/2016-04-28 13:09:58-04:00/2016-04-06 18:35:00-04:00/,"simple function generator for a single qbit

boobytrapped to fail if given a multi-qbit program

creates a function that corresponds to an equivalent QGL1 program.
There are some fuzzy bits because I haven't integrated all
of Aaron's QGL1 stubs yet, so some of the functions don't
have the new names"
Assembly,BBN-Q/pyqgl2,22d291105e893a6358330b08e3fa1c8daa01a1fd,2015-10-16T14:15:58Z,182775d6778082e94af6cc832d2c4f2a7f258f0a/2ac21c47f37e72605037fc66f90c079e05335ee7/72ef3b9b49e57df642940c280a5a0a5e22373943/b0ecccb54e82ff0273ba0e3d14a212f5b9c5485f/9cb318b7571c04e45f01390200822782cafe3311/,2017-03-30 14:11:17-04:00/2015-10-16 10:21:58-04:00/2015-11-10 14:06:19-05:00/2015-12-04 13:04:45-05:00/2015-12-10 22:36:51-05:00/,"initial draft of check_waveforms

this is lifted from check_symtab; not rewritten
for the waveform checks yet"
Assembly,BBN-Q/pyqgl2,09dd93a8aa98726aed7083952cff3ed3c0afa5eb,2016-09-20T23:35:05Z,ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-03-22 16:13:42-04:00/,"fix path to test source

reflects the move from src/python/pyqgl2/test to test/code/"
Assembly,BBN-Q/pyqgl2,46d73ada6bf61b80f1938453376bdc0830f087a2,2016-04-11T14:29:36Z,a99fbc838c186178e25d78686802f93eba1c1df8/0024e44a9ebbf347bbad90151d759fc2060656da/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/376981202e56dab3c048c7d6877b21aef9cac7e8/,2016-04-25 15:52:17-04:00/2016-04-20 12:45:43-04:00/2019-09-26 12:06:38-04:00/2016-05-05 16:06:12-04:00/,add more single qubit sample notebooks
Assembly,BBN-Q/pyqgl2,f355f020707b416513f9120d4875848236ba0deb,2016-03-17T17:41:18Z,39305cd69ec192acd0d702be7874490c90e702f1/,2019-06-17 18:28:39-04:00/,2 minor import cleanups
Assembly,BBN-Q/pyqgl2,531561bbac6870cd85c2c2a8121e0f2752401929,2016-05-19T19:20:50Z,d3378ba814f5634ebabe9724cf0c5fd380f31e7c/d5473a57ff46e031f05aeb87eebff36e89f6b0c8/9ade3a7c693ad77c43f5aa23278accef63ff6971/,2016-05-26 16:06:58-04:00/2016-05-20 10:47:50-04:00/2016-06-24 10:48:34-04:00/,fix typos so it runs at all
Assembly,BBN-Q/pyqgl2,6819b64e042f26e35002cd1b0f795064fe676922,2016-01-28T19:09:02Z,8f1c86075cd1d0646742c33010f523380b020bf2/615352f7b26ba981e27b58c382d9565184fccadd/15ffa5bc196aed990e7b27ac057b4189476738e9/7e100f49509143f211dac0439665a913cf6ba997/,2016-02-19 14:55:37-05:00/2016-03-17 13:40:17-04:00/2016-03-31 19:38:03-04:00/2016-02-01 15:10:33-05:00/,first pass at re-implementing AllXY. Does not yet use the helpers I want to add
Assembly,BBN-Q/pyqgl2,3bf4dba28f1b624e9342e98e4821788001ed5aa6,2016-05-26T21:59:19Z,060ad79c1eaf5f4e2bbacb5f8af7316eb1ad7df4/cbd421f6cefc2dbd63d696b0ca92698054324459/,2017-03-23 17:05:09-04:00/2017-03-22 16:14:31-04:00/,"fix bugs in empty statements, quantum conditions

if we eliminate all of the statements in a body,
then don't try to blindly update the resulting empty
block with the original location data (doing a
copy-all-loc on the new root will crash)

in quantum conditions, we weren't catching all
the cases, and weren't emitting the body of the
condition properly."
Assembly,BBN-Q/pyqgl2,017b82de79e3d02d2aeaf715494e7f973d7398d6,2016-06-01T21:55:16Z,9554d34ff2639c458f7e04c9072e0b65b0578fc3/,2016-06-01 19:08:16-04:00/,"basic repetition detection working, but not in AST

useful for testing whether things are working, but doesn't
handle AST yet."
Assembly,BBN-Q/pyqgl2,84ffb66daf33f2cb15dfe620de877cfb1111fe14,2015-10-07T21:58:42Z,cd7cd07036892418f0406c5a0f6cb312fe835a19/0522bce54a848d15881dcf6848e9c3fdfbbbf9ac/321f895002fb9f3aad5cefde57f3b6ed1d91938e/1d070afb4c5fa5cf7eb3ad1bf50c6208cd486b7a/07c61e2c9f4588a395f95fc9e433267c24c9c60f/c569f7f12e652cbe6c9fe939b134024fd30368a3/24c142ed6f812c7d98b7e107758e0f77f469c889/0f8ea31365689e39b82f6d1ea2c3f51ec0e18c9b/a3bc39be4ebb3aff3b2158c80e79a4ebef2674ef/dbc6d8089474ba45b53c33dc517863b7ffb2786f/2a85685e09084ad4434d7bfe94997a23eb486dec/a4b19dc9ec7008b01891e777d88e2cec9abefe67/e7671ebd3d6e1b2275d3a9f8f3086f016584d810/9ecc634ba618a2d92c12dfe998bab00033a1e30b/4d702cbc44df1d3ef0020abb41e68a28567f76ce/2e28a739e8fe6adb6f7ad1a296bf19edb14cc632/35e1f806ccbf2bf1c53f2fc7ab94eadb226d435f/6707061c1c5e4ea31bee04903baa1bfc6d7b5309/996228b23a7311edeb3d0e528f1454a302d30806/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2015-10-14 13:34:53-04:00/2015-10-14 18:10:45-04:00/2015-10-15 19:24:21-04:00/2015-10-20 14:46:56-04:00/2015-11-11 14:22:19-05:00/2015-11-10 18:01:57-05:00/2015-11-10 19:44:50-05:00/2015-10-09 10:29:54-04:00/2015-11-11 17:14:33-05:00/2015-10-12 12:32:43-04:00/2015-10-15 15:53:22-04:00/2015-11-05 16:58:18-05:00/2015-12-01 16:16:36-05:00/2015-10-16 09:30:20-04:00/2015-10-12 13:29:14-04:00/2016-01-19 14:44:08-05:00/2015-12-04 13:04:17-05:00/2015-11-10 14:09:40-05:00/2015-12-11 13:30:05-05:00/2015-12-10 22:38:33-05:00/,"testing the validity of QGL code

tracks which variables are declared as qbits;
makes sure they aren't reassigned, or conflict
in concurrent statements

still very rough"
Assembly,BBN-Q/pyqgl2,405d4f545ba6a13bf973f700b4dc952760dea045,2016-03-31T23:47:54Z,6b744c3ea8d97417cb27f0f1c8b20b7b5d6b05d8/376981202e56dab3c048c7d6877b21aef9cac7e8/4526c98058166eabdce7fd7e719b929c1efdf445/,2016-04-04 19:55:51-04:00/2016-05-05 16:06:12-04:00/2016-04-06 18:35:00-04:00/,"emit only the imports we need

uses some heuristics to classify symbol names that
probably came from generated code: this could fail
at some point in the future, if the symbol names
are defined elsewhere, but right now the only
reason we can't find the namespace associated with
a symbol is if the symbol was generated without a
namespace by the preprocessor itself."
Assembly,BBN-Q/pyqgl2,141f38dc180b56885275749fc1338692f9122093,2016-06-20T22:45:14Z,9eb53d5150223e975335820cdf66bc0d14a438f3/ab3b38a7721c6ed4065589340f32575eb94d7f6d/ffb03129c741bbf455de32cfecd95a234eae1243/f363a7bf1f9f3c912196ed1807905282125a0b57/,2017-03-30 14:06:05-04:00/2016-06-21 18:12:34-04:00/2016-06-21 13:44:09-04:00/2016-06-27 21:09:50-04:00/,"new transformer to add barriers earlier

add barriers prior to grouping/flattening.  waiting
until grouping meant that it was awkward to keep the
barrier IDs consistent across different groups"
Assembly,BBN-Q/pyqgl2,42855ec601664de8d132fa579a868ebcc2e3dda9,2015-11-10T19:10:56Z,e281e54b46fe09121fa92f0c28e909cf522672f2/21e78ce60057ebf2a97e3626232b73e38614a3fd/ee605da2e7adbd5202696c1e5ba4bb90c088b663/,2015-12-10 16:09:42-05:00/2015-12-14 18:24:47-05:00/2015-11-11 17:17:49-05:00/,"changes to use new importer, diagnostics

use the new NodeError functions and the NameSpaces
instead of Importer"
Assembly,BBN-Q/pyqgl2,09ca916589707db44d306d29d62648f863ef358a,2016-04-01T20:08:45Z,48f241e225aefb0576662297ea290f68b0c9fb00/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/fd72bc0dd9fab5e7190054525e9a70310315fe50/5da3bf36f1f05553fb713a14cc55fa46424b2cd8/73d3663612c5127c1e6b036a9f40e86089645906/,2016-04-20 13:35:26-04:00/2019-06-19 13:35:55-04:00/2016-04-06 09:08:23-04:00/2016-04-05 09:15:51-04:00/2016-09-29 16:36:27-04:00/,start on a doRamsey function
Assembly,BBN-Q/pyqgl2,acee3cb5c75ca170ff3396c6543e666a72111439,2016-06-21T18:43:13Z,a909069892de1c660acff723571e2043632ec785/96ba32c894075dee8727fb1565dc534a32235f6d/27a480251f41147f42a98593feb1964ef98f980b/ab3b38a7721c6ed4065589340f32575eb94d7f6d/1076516228cea52a79eae11ec5a1473127b9298a/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/9eb53d5150223e975335820cdf66bc0d14a438f3/,2016-06-22 18:17:09-04:00/2016-07-07 18:10:24-04:00/2016-06-23 11:09:00-04:00/2016-06-21 18:12:34-04:00/2016-06-27 21:22:46-04:00/2017-04-06 10:01:35-04:00/2017-03-30 14:06:05-04:00/,"adding ""sequential"" barriers for non-concur code

adds overly-restrictive barriers in too many places.
need to think of the right balance between removing
barriers that we don't need and allowing concurrency
where it's permitted."
Assembly,BBN-Q/pyqgl2,058bfc790852e629427cd48ace879c09eaf492f6,2016-05-27T14:17:05Z,cbd421f6cefc2dbd63d696b0ca92698054324459/,2017-03-22 16:14:31-04:00/,"deal with optimized-away loops

if there's nothing to do, then omit the loop
(because the grouper and flattener will choke
on empty loops)"
Assembly,BBN-Q/pyqgl2,5d92ef4212c54230918036bcdfb8313bd7ee2342,2016-09-09T22:06:17Z,73d3663612c5127c1e6b036a9f40e86089645906/baf708c6e624f8c1271336391ee2cda6bdc19fb5/dca7b6b4edc1742d814495d456128e10beffa88f/c62613279d611bc2e4384e16daa118759833f5c0/,2016-09-29 16:36:27-04:00/2019-06-11 14:59:37-04:00/2016-09-15 17:34:55-04:00/2016-09-28 13:43:12-04:00/,test program based on Aaron's test-cliffords
Assembly,BBN-Q/pyqgl2,5c76ad62ff8f8eaf65da5717506e20d98578ec7e,2016-09-21T15:33:16Z,232a7e379b0311f1d19d505b525193629a2598e3/da710b993ff14915935d4b92176187fded25f651/,2017-03-22 17:09:00-04:00/2016-09-20 15:44:45-04:00/,"Add flattening of sequences to make them testable, so we can support echoCR"
Assembly,BBN-Q/pyqgl2,cec97bcecca89a3ebb34cc0282db6072fa5507eb,2016-04-11T14:38:10Z,535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/,2017-03-30 13:31:14-04:00/,"document that unit tests need compiled QGL2 really, don't work, and may never"
Assembly,BBN-Q/pyqgl2,f6cccb6d914f39b609a4ffcf0031ca81da52f3c0,2017-04-07T18:25:11Z,37c5ee691d7cee1490d038bb881f688d4b866a8c/,2017-04-10 11:24:40-04:00/,"Fix handling of QRegister subscripts.

Introduces a QReference object to hold onto the operation. I explored an
alternative approach that directly returns QRegisters from indexing operations,
but this would end up creating a new QRegister for every subscript.
Consequently, I expect we would end up with A LOT of QRegisters. This approach
avoids that."
Assembly,BBN-Q/pyqgl2,b782c2ee3ede6dd1a410ad7e6feffe520a7db586,2016-02-24T15:20:49Z,df5c4375105e76e542ea234a4c3d8dba6af9a649/a98488ed25ebbacd02789388f37940c60dc8be9f/,2016-05-03 19:43:17-04:00/2016-02-26 15:13:42-05:00/,"fix location info in expanded range list

when we create new AST nodes to represent the
expansion of a range() expression, make sure that
the new nodes are properly marked with their
provenance so that later diagnostic messages
have the proper info."
Assembly,BBN-Q/pyqgl2,853d88257383734c38522454933a77f3bf15510c,2016-03-01T17:59:34Z,8fef60223a508b19c549dd1d2938e5a7486b3878/a76459f972ef3d91648f774e2d5982c4ed1dafcf/ce4252b38c69a4d52eadbd4454de6c051c90be8d/38d7e74ff3da509312382d8117d86fdb4745bce7/e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/956225b652eb80b56aa726a830a1f4768eff67f0/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/93e91f3cb853321899340850a241a5c237f40b31/26e5f34431e1cb9719436e9bd96101df6c7eaa00/71f94a2cfa6119e8227b7a06fc59faad26741a79/479ff3b17446485d0c5e518a9c0bbbb3593848c3/,2016-03-17 13:44:27-04:00/2017-04-13 10:01:57-04:00/2019-06-12 13:42:45-04:00/2016-09-29 14:19:17-04:00/2017-04-12 11:00:41-04:00/2016-07-25 14:28:24-04:00/2016-09-07 16:05:57-04:00/2017-02-16 14:56:23-05:00/2016-05-13 14:55:26-04:00/2016-03-18 10:09:40-04:00/2016-04-11 11:18:58-04:00/,marke functions that do pulses as though they return a pulse. New version of AllXY that should work sooner
Assembly,BBN-Q/pyqgl2,7049b38da4c002dd828f8666fceec215dbfe3361,2016-05-23T23:41:02Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/4611edd714d596507beed2a26db2471c20df2d03/c5e1724225fede74eb1fbb631c60e6268c04ec04/ad545e053dab391e567b59e2ba672b39b8a337c6/3083b39c6dfa5347c3678f989aa90cec5d409238/f40d398390b0998ec36c58ba1b2fdf70e1df2e07/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-06-30 18:21:21-04:00/2016-10-04 18:09:39-04:00/2016-05-25 18:32:15-04:00/2016-10-03 11:35:34-04:00/2016-06-28 11:23:49-04:00/2016-06-13 19:30:38-04:00/2017-04-06 21:52:58-04:00/,sketch of using the QubitPlaceholder
Assembly,BBN-Q/pyqgl2,491f282f69521cbb33d22ae9810af8053694df5b,2016-09-07T02:37:28Z,1bf90265d83b75301896f1bb20e1991487e05827/,2016-09-07 09:37:51-04:00/,Try generating coverage report inside src/python.
Assembly,BBN-Q/pyqgl2,790b784d40c340c915e54eba740ccd3f3aba5e87,2016-04-20T16:44:21Z,956225b652eb80b56aa726a830a1f4768eff67f0/,2016-07-25 14:28:24-04:00/,Add FIXME that lets Id() work for now but is wrong
Assembly,BBN-Q/pyqgl2,39e3932cd90e5ef914db10f83a30b0dd04f434d2,2016-10-12T14:18:52Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/39305cd69ec192acd0d702be7874490c90e702f1/032f0241eb969870a941956a7db8a17a86e76aa9/,2017-04-13 10:01:57-04:00/2017-04-07 15:05:12-04:00/2019-06-17 18:28:39-04:00/2017-04-11 16:00:27-04:00/,Update DecouplingMin methods to take arguments.
Assembly,BBN-Q/pyqgl2,a65b9479f6dc37d81e38f6f5ad495865b8f93fc4,2016-10-10T15:27:29Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/722cebfeda7fadce9a4657971bd7731fc85ca74a/b86d08ed8c4d1ff11f55f85d440625ec4278d5e0/,2017-04-07 13:22:20-04:00/2017-03-22 16:18:22-04:00/2019-06-11 13:50:19-04:00/,"don't crash on the empty program

If there are no qbit sequences whatsoever, don't crash.
Give the user a warning message telling them that compilation
has aborted due to having nothing to compile, but don't
treat this as an error per se because perhaps the program
was merely executed for its classical effect -- which is
pointless, although permissible."
Assembly,BBN-Q/pyqgl2,8ad1e8b1a0c5bee00bcb887b748bfe15f224ef68,2016-02-29T13:43:21Z,5db9a0bd92135038df4120e79f0a8fd1d8e01546/,2016-03-17 13:43:19-04:00/,init now does ControlFlow.Wait
Assembly,BBN-Q/pyqgl2,9f605dd820a879a0285c425e6a98c7d00685202c,2016-08-11T12:57:14Z,8c8cca897c43f56f7bc0504add6d441b7d09fecf/ada4818fa41409cfdb4f4ad246d1f122e852209d/ad66aad5919b9be3fa1666414ef6b33de1936a95/72cacc79eaf15d058bcd932607d06d6b3d8d175d/65fa5a9942c61ca2b32d92d9e6f48f4e70cd8ff6/362b36d9e9f9d57a6e63552b78b5524049c52b13/c7497df9f519ff1b808cbc2bafae21752051fe1f/2c7267243798adbacc4f07368be0e438b009bb94/,2016-08-23 19:01:33-04:00/2016-08-11 10:59:12-04:00/2016-09-15 15:13:28-04:00/2016-09-12 16:36:37-04:00/2016-08-18 18:47:48-04:00/2016-08-18 17:25:25-04:00/2016-09-15 17:13:03-04:00/2016-08-11 17:00:44-04:00/,"prototype of checking code (for args, not kwargs)"
Assembly,BBN-Q/pyqgl2,95bc42df89afc143ad25d53b1ac50588b8414eb0,2016-07-07T17:46:31Z,1d7caae5a1909e00e7d63c4125133d2a028faa8f/dabe675ff8918039179cf53f1b22c7d99597ee52/395f3a901018b3208958b1ae0859880e3dce68d1/0aed8a16950da4f7d3e8995ebec4aa0ac5ef2418/999fa4c3a5ac3c379350abc94b06130813521f9a/,2016-07-12 10:50:39-04:00/2016-07-22 09:48:58-04:00/2016-07-07 14:35:17-04:00/2016-07-13 11:33:51-04:00/2016-07-11 16:36:40-04:00/,Improved debug log messages. Catch case where Wait isn't on all channels sooner. Fix printout of replacement Id's length. Catch 2 more cases of barrier not being on expected sequences. Add a couple unit tests - more to come.
Assembly,BBN-Q/pyqgl2,c73b10dd90b67e1376274b13bc24008ae08b36ba,2017-04-07T14:21:37Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/88add230f0b5aab97676855a8556987f29f96464/,2017-04-07 13:22:20-04:00/2019-06-11 13:49:21-04:00/,Define repr() and eq() for QRegisters.
Assembly,BBN-Q/pyqgl2,e40df754b4e2c306d7151a4383e22162f4d02b7a,2019-08-05T16:22:03Z,5428eafec3bbbf7d05622c429727620b88247917/,2019-08-15 16:44:44-04:00/,"add helper stripWaitBarrier to remove QGL2 added Wait and Barrier, for easier comparison with expected QGL1"
Assembly,BBN-Q/pyqgl2,9898452226f3d4e6b4b4ceb826474c9e0443dc9a,2017-03-24T15:11:27Z,2046d547729c7d5669507b6cbae46aa69a3746dd/e31145b3337acdf8917932119e192f4448733704/,2017-03-24 13:15:04-04:00/2017-04-05 16:56:18-04:00/,Support a wider set of comparison operators.
Assembly,BBN-Q/pyqgl2,170e720cbfa5069f523c4eaed7d550185e33eb6f,2016-04-06T21:19:48Z,ff4d3749290f55f783502b3f8ff6e0b5e36fe2b4/1e2bff01dc361528f8bf090d99d0785cd1b18f7f/,2016-04-20 13:32:45-04:00/2016-07-05 16:54:27-04:00/,change diagnostic prints to DebugMsg.log
Assembly,BBN-Q/pyqgl2,7535de8805c2506a1bc19259065423bbf7e7a135,2016-04-04T23:52:03Z,561bb35044b9bc3f7026e8201239ac987772389b/5cc6a5af0f25c13df7f2f5281cdee1c2d2fad080/5ac645d651444613745ca65e3c3473324a1a4b41/,2016-04-05 21:14:19-04:00/2016-04-04 19:57:46-04:00/2017-03-31 10:35:54-04:00/,"fail if Wait()/Sync() undefined in qglmain scope

The compilation is very likely to fail if Wait and/or Sync
are not defined in a scope visible from the function
declared as qglmain, because these functions may be called
by introduced code.  Therefore if we detect that these
are not defined, we complain and fail right away, forcing
the programmer to add the proper imports.

This is a gross hack and we need a better solution, but
for now, at least we get a meaningful error message"
Assembly,BBN-Q/pyqgl2,7cb634dd515ac6ad148ba5e261e563d8c833f0be,2016-10-10T18:05:42Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/9c0ce6f0fff79d660166c55a299465390c4cde31/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-07 15:05:12-04:00/2017-03-22 17:22:30-04:00/2017-03-22 16:13:42-04:00/,add test of append -- currently fails
Assembly,BBN-Q/pyqgl2,cc6d6bc7882fe4742346762ceabd214a384d8f44,2016-09-19T19:21:57Z,822dacd6f543615fc8cb0bbf74b523abf179c4d4/0a2d00c97f489253bc2966d44e991bccc4d4317a/a76459f972ef3d91648f774e2d5982c4ed1dafcf/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/032f0241eb969870a941956a7db8a17a86e76aa9/7d3717bbc80e3b3d6451ac2ff837ae754ea28e9d/0ef68904abf9cbec8dab18502224194e82f87f14/ef42a9b1125661d6997032a6199dae71ffaf7362/,2016-09-27 16:34:57-04:00/2016-09-29 16:00:23-04:00/2017-04-13 10:01:57-04:00/2017-04-06 21:52:58-04:00/2017-04-11 16:00:27-04:00/2016-09-02 18:23:52-04:00/2017-03-22 16:36:36-04:00/2017-03-22 16:13:42-04:00/,"Allow Qubit parameters in top-level bindings.

Right now we only handle Qubits that are uniquely described by their label. We
also are not yet type-checking the inputs to qgl2main."
Assembly,BBN-Q/pyqgl2,ce4252b38c69a4d52eadbd4454de6c051c90be8d,2019-06-12T17:42:45Z,6c3376ed1d6b33ca98339b323c9da0799b35c978/2204ad7f8b33b7ae2971e077fd5b391db6f9f7d9/93d8c6dce27f080dd70cdf27ca05d2545fa3a5ef/,2019-06-13 17:51:03-04:00/2019-09-13 16:32:33-04:00/2019-08-15 15:50:55-04:00/,"redo AllXY to drop the OBE implementation attempts, get working with QRegisters. Also added a main() for self-contained testing"
Assembly,BBN-Q/pyqgl2,736e28cd113ab3ed78568a82a5f831ab845f6e27,2016-09-09T17:03:19Z,6785cdccb960d6740112ec1b0a46f387e1f98417/,2016-09-27 11:32:11-04:00/,wrap a few more logger calls in isEnabledFor
Assembly,BBN-Q/pyqgl2,69637b7eae113a830fa13c067714ceef1283f19c,2019-10-02T17:57:45Z,059079ff55389300ab457353e450ea7526377c2c/7acc8b244ee7799c21df03ecff8325e15cdb94d3/,2019-10-11 12:48:31-04:00/2019-10-11 12:54:11-04:00/,Clean up documentation to try to avoid lies. Gives basic instructions.
Assembly,BBN-Q/pyqgl2,0b70edcd5fd36af91c14c555fb4e1566168988fe,2016-04-14T13:24:17Z,69637b7eae113a830fa13c067714ceef1283f19c/2b099279cb339afbc5e464e40c3fbed00c8f48be/,2019-10-02 13:57:45-04:00/2016-09-14 13:22:33-04:00/,clean up list to highlight things we'll fix
Assembly,BBN-Q/pyqgl2,760cb116fef3fad9b43195f1ab4154429b4733c3,2016-04-11T14:32:39Z,940bd940dd9341d40b72f18f0afb862c7d0e78bc/956225b652eb80b56aa726a830a1f4768eff67f0/1b1217e427e6762fe40a3705630f5682834a045d/d3b983ea87b19a1a5ad45089e78773e8573603aa/,2016-09-06 16:44:46-04:00/2016-07-25 14:28:24-04:00/2016-04-14 09:24:47-04:00/2016-07-25 10:26:08-04:00/,"comment out use of create_cal_seqs. Eliminate a use of an inner qgl2decl. Make 2nd arg to Id() be a kw arg to try to eliminate an error, at cost of accuracy."
Assembly,BBN-Q/pyqgl2,64740a570fe942e2acc5ca955fac1bba67553f81,2016-09-20T13:36:01Z,42ac0100eee487900b748cd5f7b5e287bb6e924b/348ef91c136834c516e89fd54f48bdfcf4591a4e/b44db5a4c9d492a26f3be6714f35d35fa905668b/,2016-09-21 14:26:59-04:00/2016-09-21 10:39:29-04:00/2016-09-21 15:00:48-04:00/,"debug code for Swap, fix import of channel setup functions"
Assembly,BBN-Q/pyqgl2,2a85685e09084ad4434d7bfe94997a23eb486dec,2015-10-15T19:53:22Z,182775d6778082e94af6cc832d2c4f2a7f258f0a/9ecc634ba618a2d92c12dfe998bab00033a1e30b/9c5bde1898650ca5be0c2680a7c055f773e2ea08/72ef3b9b49e57df642940c280a5a0a5e22373943/c577ee5e3961137491303cf2f65a1d91af0689c8/1011c23b64bc4f09a532f841f973e4ba7b8cd8c3/f0529a30383e9d6aa74b8bb5bf34e78c89135108/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2017-03-30 14:11:17-04:00/2015-10-16 09:30:20-04:00/2015-11-10 18:50:58-05:00/2015-11-10 14:06:19-05:00/2015-11-06 13:47:40-05:00/2015-12-04 13:01:58-05:00/2016-03-01 17:31:56-05:00/2015-12-10 22:38:33-05:00/,"starting to break out functionality

breaking down the classes by compiler pass and functionality

this is preliminary, but the single do-everything class
was getting too large"
Assembly,BBN-Q/pyqgl2,42bbab0943065a0535b5daf85482e9a1b3db6d14,2016-09-24T18:38:13Z,7d51040821a2b7be9aaa1a326f4053500b375814/,2016-09-24 15:52:47-04:00/,make flat_top_gaussian_edge_impl a stub
Assembly,BBN-Q/pyqgl2,00c77f4e1d8b528cf330c8a965dc44ef248cfcfd,2016-09-19T19:32:12Z,822dacd6f543615fc8cb0bbf74b523abf179c4d4/a76459f972ef3d91648f774e2d5982c4ed1dafcf/032f0241eb969870a941956a7db8a17a86e76aa9/a0b3e924f75c03feced4d3506379a04d7c1c0858/0ef68904abf9cbec8dab18502224194e82f87f14/ef42a9b1125661d6997032a6199dae71ffaf7362/,2016-09-27 16:34:57-04:00/2017-04-13 10:01:57-04:00/2017-04-11 16:00:27-04:00/2019-08-15 16:46:35-04:00/2017-03-22 16:36:36-04:00/2017-03-22 16:13:42-04:00/,"Try a functional handle as input.

Currently fails, but seems similar to other failing usages of function handles."
Assembly,BBN-Q/pyqgl2,cfe1f35afa7f46c80e11b1cc915868d58b77e5b0,2019-06-17T17:52:32Z,ef101589a68a6cf182e82a75489ff49d93580d7c/,2019-08-16 14:24:21-04:00/,Use new clean CR implementations in CR.py
Assembly,BBN-Q/pyqgl2,2039148c0479387a4147c430a84c9d39f53a895d,2016-10-04T20:46:41Z,d5259010741db8ab055c5384c6bcba80eebfddd8/d1e05426b802ebe0ec2f0e2321f92e88a732ea1d/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/a4e9b584ec2385271b2a8b174cd697da236dd543/c3e8a4a8e1abef53e1fb09e4aa9e260e8a54a5be/,2019-06-18 19:55:45-04:00/2019-08-05 12:20:28-04:00/2016-10-07 09:39:34-04:00/2016-10-07 12:26:51-04:00/2017-03-23 12:02:29-04:00/,"remove fixed FIXMEs, and remove more wrapping of generators with list()"
Assembly,BBN-Q/pyqgl2,df76b970d2cf6f6eb62b55346a55b6c5dc2aff54,2016-04-08T13:57:35Z,5c9fcdfb78b71fb2283dd954bc0542f315aa454b/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/e3989d7514231679f7be5c8c52c28901f8e44584/102ba7d564b5b98134c4f3aad5a4920139e7b14a/,2016-04-08 15:20:02-04:00/2019-09-26 12:06:38-04:00/2016-04-19 12:10:33-04:00/2016-04-08 15:17:02-04:00/,Cleaned up minimal RabiAmp and AllXY
Assembly,BBN-Q/pyqgl2,24c142ed6f812c7d98b7e107758e0f77f469c889,2015-11-11T00:44:50Z,996228b23a7311edeb3d0e528f1454a302d30806/07c61e2c9f4588a395f95fc9e433267c24c9c60f/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2015-12-11 13:30:05-05:00/2015-11-11 14:22:19-05:00/2015-12-10 22:38:33-05:00/,"remove dead code; fix type nits

using 'type' is deprecated in Python3; using isinstance instead"
Assembly,BBN-Q/pyqgl2,d898e0c46e8c73fbcea9448087435b9d751bd404,2016-04-28T17:09:58Z,376981202e56dab3c048c7d6877b21aef9cac7e8/62bc4470539cf15ac0eef9662feb0652957622d8/,2016-05-05 16:06:12-04:00/2016-05-06 16:21:50-04:00/,hacked up single.py that treats every 'with seq' as starting a new sequence. Almost certainly fails for every other case.
Assembly,BBN-Q/pyqgl2,b79de7d4ad2794b039d1f4f77653e8a7dbe8d7b6,2016-06-29T22:16:07Z,32ecb54cab0aa6684473b1c0a6e04a3aef839a73/d846317069ec3cfec09975c8ddf7408030ff3baa/afbbade7e99bb424b40a75aea68bc77f16ab6d26/,2016-06-30 13:13:46-04:00/2016-06-30 15:13:56-04:00/2016-08-29 18:15:38-04:00/,"basic functionality complete; still missing stmnts

handles the basic statements but doesn't have the templates
for all the statements we want to handle (i.e. while loops,
with statements, etc).  Most of the functionality will
occur already because of the default handlers for the
types that compose these statements, but things like
handling the items clause of with statements won't be
exactly right without a little more work."
Assembly,BBN-Q/pyqgl2,b880f02b6abe665fa8c3f300b0a0e674620a3488,2016-09-12T20:56:02Z,4f4b71beeaba6a1f2e9d945f2a3e50eaddf54876/,2016-09-15 17:46:24-04:00/,"new combination checks (not referenced yet)

do checks in sequence before seeing if any of them
failed; give the programmer more info about what went
wrong"
Assembly,BBN-Q/pyqgl2,722be81387aecd78fc2f2e5e08a3cd43e061dfe3,2016-06-22T22:20:14Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/36f8ad5bfeadb0f22c9b87998692d0de0b0c04ce/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2017-03-22 16:17:55-04:00/2017-04-06 10:01:35-04:00/2016-09-12 11:02:42-04:00/2016-09-15 13:53:59-04:00/,insert call to AddSequential - prototype
Assembly,BBN-Q/pyqgl2,5271a92b91f026b55ea241b4dda434a6e9f309d7,2016-02-22T20:05:12Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/2be4234461b4bd2af1f75c8f8fa483e5a80407c1/93e91f3cb853321899340850a241a5c237f40b31/853d88257383734c38522454933a77f3bf15510c/,2017-04-13 10:01:57-04:00/2019-08-16 14:21:52-04:00/2017-02-16 14:56:23-05:00/2016-03-01 12:59:34-05:00/,"add an intermediate version of Reset - not sure it helps, as it leaves in some of the harder bits. Also add missing import of qgl2.qbit"
Assembly,BBN-Q/pyqgl2,d5f2789d7813c76d64040a7630985264e5b9517c,2016-09-09T15:41:33Z,e937c1ca91d90f2028ad1d12dadac85fea2e1e58/,2016-09-09 12:01:39-04:00/,shuffle around call to replaceBarriers in anticipation of more cleanup
Assembly,BBN-Q/pyqgl2,8ab6a5da55ee8728b1add116b6cd613e0d7ea719,2015-12-03T23:15:18Z,2ae99b8615b5956acd5b58480da47dc57587d875/c61a8629542da409076c68d2b27bd2d6783a7d0f/,2015-12-04 15:02:46-05:00/2015-12-07 17:16:28-05:00/,"add warning messages for fishy parameter shadowing

these are usually a sign that the programmer has made
a mistake and inadvertently reused a symbol (but not
always)"
Assembly,BBN-Q/pyqgl2,f7d234f0a9805d44894c19367fed9291ade69170,2016-04-14T20:46:51Z,1a7c61d8629aaac62c00b6152f4e4cfd36b78d52/,2016-05-13 09:20:40-04:00/,"don't recursively substitute calls; just copy

we keep a reference back to the original call whenever
we do a substitution/specialization, in order to keep
a reference to the actual parameters in the call.
This is important if there are actual parameters in
the original call that are qbits that are not referenced
in the substitution.  The common example is ""init(q)"",
which is obviously related to channel q, but which
expands to ""Wait(); Sync()"", which no longer mentions q
explicitly.  Keeping a reference back to the original
call to init tells us the actual value of the formal
parameter q at the moment the call occurred.

The bug was that we were trying to do substitution
recursively on the original call as well.  This doesn't
seem to make sense, causes bugs during substitution,
and it's not obvious why I added this code.  So to
remove the bugs, I'm removing the recursion."
Assembly,BBN-Q/pyqgl2,072803ac808aed256055e8f2de2e39e42806dd0c,2016-03-04T13:22:01Z,2046d547729c7d5669507b6cbae46aa69a3746dd/ad76ab4ac298e83e49d22d3bcfeb3c28ac24eddc/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/9a15e9deb3b45bb80de99428b564937ae864f0ff/,2017-03-24 13:15:04-04:00/2017-03-23 22:15:42-04:00/2017-04-05 17:07:07-04:00/2016-03-04 09:36:47-05:00/,"generalized to deal with nested bodies

needs more testing for while loops"
Assembly,BBN-Q/pyqgl2,4ab7da4826dc5ede7c520bf03d6b14242d8dbc99,2016-09-24T19:59:35Z,ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-03-22 16:13:42-04:00/,"fix path to test location

src/python/pyqgl2/test/ is now test/code/"
Assembly,BBN-Q/pyqgl2,83a0a189df522fc4e101fc80f1989dd5ad08c4d9,2016-10-04T21:55:33Z,99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-06 21:52:58-04:00/,check that the label is well-formed
Assembly,BBN-Q/pyqgl2,9217721da958f15856927c4f9695c61f2fdad3f1,2019-06-19T17:11:28Z,e69b2d64c34d7874ebad02ee707d55c7dd929c14/,2019-09-13 16:44:18-04:00/,clean up SPAM basic sequence to have single implementation with test main()
Assembly,BBN-Q/pyqgl2,e6c722dbc35cb906b4b019733a05094b648eb7c6,2016-05-17T23:43:06Z,b0dbde7afd20b58f045222929a9cd703af17c35b/0aca44a93f0b0a3e99de37886ed0b3786db085ce/467892d4bf102a5486ba18dc5b848f510ef6ca9a/1e4c5580f67255583e94351cbc7acf9766a0a06d/2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/dc3cf36f7d3749770848fcc440337e487c29cdda/060ad79c1eaf5f4e2bbacb5f8af7316eb1ad7df4/,2016-05-20 12:11:52-04:00/2016-08-19 18:11:55-04:00/2016-09-15 13:53:59-04:00/2016-06-22 09:06:17-04:00/2016-09-06 18:44:10-04:00/2016-08-29 18:16:29-04:00/2017-03-23 17:05:09-04:00/,"starting to add while loops - very buggy

testing the while loops exposed many conditions where
the right things don't happen, such as list appending.
So there's progress here, and things sometimes work,
but it's not complete"
Assembly,BBN-Q/pyqgl2,50673f0f0fee2a96e38bad053f57243f70996db0,2015-11-10T23:03:34Z,fd37a60783482b749656e3a30c21f88487e7dded/141cf4c1da1851044917184ba1747ed0a03bc07e/,2016-04-20 13:53:39-04:00/2015-12-10 22:39:29-05:00/,"resolve functions in assignments

we need to figure out exactly what we're calling
in order to determine whether what it's a Qbit
allocator"
Assembly,BBN-Q/pyqgl2,628f2240b0142a48606abcc1606cafc1b34191db,2015-11-30T22:31:59Z,da8b8b3138cca7be5e19596da9c38ec6f977cc87/f97498bbbbd8b136660e6736b322f47c777ff858/,2015-12-01 16:09:19-05:00/2016-04-07 11:54:09-04:00/,change to use argparse; remove unused logger
Assembly,BBN-Q/pyqgl2,15828dab7365f60555dbdaa0632ca4140f87f1d1,2016-06-23T11:33:41Z,e3df2cefc4c56f2d5810c89dfea0ba0f90079d24/,2017-03-22 16:16:10-04:00/,add function name to infunc parameters
Assembly,BBN-Q/pyqgl2,f78855ddc720412f6bf05d5f08b69ad273786d78,2016-03-11T15:27:55Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/0527f57fb9d8fb427497f729f752f80e8ea41a6c/467892d4bf102a5486ba18dc5b848f510ef6ca9a/94250b99d38edd67798a85a10aa51289b898fa34/,2017-04-06 10:01:35-04:00/2016-05-06 16:18:59-04:00/2016-09-15 13:53:59-04:00/2016-04-07 12:27:11-04:00/,"sketch how sequence pretty-printing

this should be moved elsewhere, and made a lot prettier"
Assembly,BBN-Q/pyqgl2,40ae09d6154f1bb93e06bde16472b61c7c3cc270,2016-07-05T15:06:13Z,97fd6c72c341dc6233339e59cc528f71bddb52aa/4b1ad56a0d5299353a2c03aa47c3394967e87601/0094db642e169ec3415149e4b37222ee4767b893/e3df2cefc4c56f2d5810c89dfea0ba0f90079d24/,2016-07-06 17:21:37-04:00/2016-07-28 10:55:27-04:00/2016-07-05 18:34:15-04:00/2017-03-22 16:16:10-04:00/,"initial version of runtime type-checker

checks types, but in a user-surly way.  Doesn't
provide any useful information about how to fix anything."
Assembly,BBN-Q/pyqgl2,9a9208211be9de5c36e37e2f12d3c9e194909919,2016-10-03T15:34:29Z,d68d8b2be4baeb6f093b55e5374a29c26b7b0aaf/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-10-04 18:09:05-04:00/2017-04-06 21:52:58-04:00/,start of support of real Qubits
Assembly,BBN-Q/pyqgl2,987e1e67bda13a4b7777ee23c2268f2885d42aec,2017-03-22T20:25:57Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/27f82084b3176663baa8375a9d5bc013479f51be/,2017-04-13 10:01:57-04:00/2017-04-07 15:05:12-04:00/2017-03-29 11:21:06-04:00/,Update tomography test.
Assembly,BBN-Q/pyqgl2,5c12dd53a964fb5e4ea4bc1ef5110358b8bb404c,2016-10-07T13:58:51Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/9217721da958f15856927c4f9695c61f2fdad3f1/032f0241eb969870a941956a7db8a17a86e76aa9/,2017-04-13 10:01:57-04:00/2019-06-19 13:11:28-04:00/2017-04-11 16:00:27-04:00/,Update SPAMMin to take arguments.
Assembly,BBN-Q/pyqgl2,90274ec6285379f09771a7746dbdd8b5f5d2e099,2016-02-25T18:57:14Z,3b36c7aeab46aa255af2ba14b4a464e50c636987/c3e8a4a8e1abef53e1fb09e4aa9e260e8a54a5be/530ff82ff7e2cbb7ad5a3262477407be7db0b186/,2016-04-08 16:48:44-04:00/2017-03-23 12:02:29-04:00/2017-04-11 11:41:47-04:00/,add missing calls to init(). Also note that QGL2 version once compiled will need to return the sequences
Assembly,BBN-Q/pyqgl2,dced4de17ced5dda99cc709bf797364fd6c2d27e,2017-04-11T20:42:52Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/66ed22c49453a5aa49f7866faffbcb0efa22df35/19f090f0b17ed60b9195793f183eae5fd7b73a2b/,2017-04-13 10:01:57-04:00/2017-05-15 10:21:32-04:00/2017-04-13 16:03:24-04:00/,Remove labels from Barriers.
Assembly,BBN-Q/pyqgl2,1ca96adee995154e8d97684e1d05fcb93b3ba516,2016-03-25T22:10:03Z,c407e7f4d939f700ec1d7a88173a58f91e56d169/,2016-03-31 11:25:48-04:00/,"returns a nameless qgl1 function

this function can be bound to a name in the
local namespace of the caller

the current function is expected to fail (because
it calls a bunch of things that aren't quite QGL1)
but the intention corresponds to a real QGL1 function"
Assembly,BBN-Q/pyqgl2,c514d7d527ff184ef54472df1752605326ee0b9e,2016-05-03T20:33:35Z,7dfd483ce04c8a50399506273e659c0da1e95edd/,2016-09-19 15:33:17-04:00/,"add native import for the ""base"" file

this is a bit of a hack, because the base file isn't
imported as the result of an import statement, so if
there's any error we don't know how to frame this
error in terms of an executable statement.  Fortunately
if there were going to be an error, it probably would
have already happened... but that's not certain."
Assembly,BBN-Q/pyqgl2,80c66a55cd4a1fd64afdaa72dea2ab42b2fe5c80,2016-04-01T13:13:59Z,ac6c73abd2bd4c98bbf7a08882cd19e14ce39d01/f9e615c9e7526e3b0dbb949ac9f236de49da8675/,2016-04-07 17:51:49-04:00/2016-04-07 17:43:56-04:00/,"clean up diagnostic prints

remove some, turn others into diag_msg messages"
Assembly,BBN-Q/pyqgl2,405248dbc32969e1c80bee93248ad7f9d755099a,2016-04-08T13:58:48Z,74102ff0446ef0a5604bd3ea73aa741b85f51d48/ce4252b38c69a4d52eadbd4454de6c051c90be8d/48f241e225aefb0576662297ea290f68b0c9fb00/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/68a2c89dafa19dc73b7b221abfcde55245394383/968345dae11e8dbf983c06dc26cd22c6cac38aa4/d3b983ea87b19a1a5ad45089e78773e8573603aa/956225b652eb80b56aa726a830a1f4768eff67f0/26e5f34431e1cb9719436e9bd96101df6c7eaa00/73d3663612c5127c1e6b036a9f40e86089645906/479ff3b17446485d0c5e518a9c0bbbb3593848c3/,2016-04-08 16:50:04-04:00/2019-06-12 13:42:45-04:00/2016-04-20 13:35:26-04:00/2016-05-13 14:58:56-04:00/2016-09-27 18:58:40-04:00/2016-10-12 10:11:57-04:00/2016-07-25 10:26:08-04:00/2016-07-25 14:28:24-04:00/2016-05-13 14:55:26-04:00/2016-09-29 16:36:27-04:00/2016-04-11 11:18:58-04:00/,simple test files for the minimal QGL2 program of RabiAmp and AllXY
Assembly,BBN-Q/pyqgl2,6f7bb5d286b965f6c3fa68fc861a501125bee616,2015-10-20T20:29:42Z,de966a014ccfcdb33674cf00b694beb01d73c40b/5b6d59d06703388764770dec0f09cc6a260c0114/,2015-11-06 17:47:53-05:00/2015-11-10 18:51:46-05:00/,"fix bug in context stack; detect as-name conflicts

pop the context stack when appropriate (the pop got
fat-fingered somewhere recently)

if two imports in the same context use the same as-name,
then tell the user it's an error (unless it's a repeated
import, in which case simply chide the user)"
Assembly,BBN-Q/pyqgl2,efedc08ec3dee24a1dcc58842709815e79863a13,2016-09-27T17:27:42Z,da710b993ff14915935d4b92176187fded25f651/,2016-09-20 15:44:45-04:00/,"use copy.copy instead of quickcopy here; it's good enough. Also do sorted() many fewer times (don't sort list of length 1, sort positions once per sequence)"
Assembly,BBN-Q/pyqgl2,b89bf1d120c8da01a56d925816c828803f7dd20e,2017-03-21T14:38:39Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/,2017-03-22 16:17:55-04:00/,Print something at the start of each compiler stage.
Assembly,BBN-Q/pyqgl2,e4b99b809a40ba6ca7807c29b4e1d295df5c7454,2016-03-04T14:59:54Z,a343512707afe9c177089cc904c0eb50fe4087fe/30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-04 10:29:58-05:00/2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,"example input for the current (broken) flattener

MEAS doesn't do what we want yet; that needs to get
fixed, or else we need to live with what it does"
Assembly,BBN-Q/pyqgl2,bb9c84bf80034d4ac76fffea84b64a0d363de97f,2019-06-17T17:47:18Z,d1e05426b802ebe0ec2f0e2321f92e88a732ea1d/,2019-08-05 12:20:28-04:00/,"create_cal_seqs now allows diff measChans than qubits. Also now adds the optional delay before MEAS and waitcmp after each loop, as in QGL1. Also added measConcurrently which creates a QRegister from its argument, does a Barrier, then a MEAS"
Assembly,BBN-Q/pyqgl2,2896ce970bc79a8ed742cf4bfc07c10c1bbc920d,2015-11-06T18:46:23Z,24c142ed6f812c7d98b7e107758e0f77f469c889/,2015-11-10 19:44:50-05:00/,"handling str 'qbit', 'classical'

accept these annotations as strings rather than symbols.

this change will likely be reverted (based on feedback
this morning) but I want to capture it first"
Assembly,BBN-Q/pyqgl2,832bbb92824bad5904f9f3ca8d8e70c2628eff6e,2016-05-03T23:45:22Z,e29c4ebb9b01cb9e29c766c2990862919f88324a/c63f9abd605a701d527d107ebc418f3c8f801a96/,2016-05-13 00:03:55-04:00/2016-05-11 22:43:59-04:00/,"add evaluator to the main loop

along with the other iterative processes for
unrolling/inlining the qgl2main, add a step for
evaluating expressions based on previously-computed
values.

this isn't complete yet (some variables are overlooked)
but it's a step forward; we can use variables in many
ways"
Assembly,BBN-Q/pyqgl2,d5473a57ff46e031f05aeb87eebff36e89f6b0c8,2016-05-20T14:47:50Z,d3378ba814f5634ebabe9724cf0c5fd380f31e7c/57327193ac48193bb8c5cfca6b333bce94f3a562/2842a813ea5925ac14f6d987425f928bc7e00f70/9ade3a7c693ad77c43f5aa23278accef63ff6971/,2016-05-26 16:06:58-04:00/2016-05-26 16:35:07-04:00/2016-05-26 11:08:51-04:00/2016-06-24 10:48:34-04:00/,"Clean up, logging. 1 logic error on skipping initial wait pulses fixed. Code works for simple cases."
Assembly,BBN-Q/pyqgl2,9edea011b124607c51e3a4c78ebbc7590129b854,2016-08-31T20:39:11Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/5a183e7ff4b06cdcd96b3af39a62b77d4329146c/d72caa7df364f7f1ce6cc4ccc78b1089e07bce8f/,2017-04-07 15:05:12-04:00/2017-03-23 14:08:52-04:00/2016-09-09 09:33:32-04:00/,clean up and add some comments
Assembly,BBN-Q/pyqgl2,1a21dd1faaa1a563ad8ce349d3ef5c87ca3d8132,2016-09-21T14:38:58Z,4d4482de68da8dfcd9a3683e4eabae12988943e6/232aa6630dee440efd89b8cd05d67e0a35fbe264/cda56a922723f87a7a6d39af3a862553609f2927/032f0241eb969870a941956a7db8a17a86e76aa9/,2016-09-29 15:11:40-04:00/2017-03-23 14:06:24-04:00/2019-06-24 13:25:22-04:00/2017-04-11 16:00:27-04:00/,RabiAmp_NQubits: dont re-assign measChans (fails). Replace zip with enumerate (more readable). Make MEAS work on measChans (despite bug in QGL1 that does differently). Swap: Assume the QGL1 intent was to do the Xs and Ids as fast as possible; the QGL1 function may be meaningless.
Assembly,BBN-Q/pyqgl2,83efd98e03ac4ba373c5785b04aa401b71065d2b,2016-04-15T12:42:09Z,2b099279cb339afbc5e464e40c3fbed00c8f48be/,2016-09-14 13:22:33-04:00/,typo
Assembly,BBN-Q/pyqgl2,a3bc39be4ebb3aff3b2158c80e79a4ebef2674ef,2015-11-11T22:14:33Z,89559491966bfd0bcece21896b8bcbf40203372d/c1ca2f051f40ec7f16a6c338ecf33f30a4e18af4/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2016-05-17 19:44:30-04:00/2016-04-06 16:30:50-04:00/2015-12-10 22:38:33-05:00/,"gripe about/handle undefined methods

of a QGL2 function calls something that's outside of QGL2,
or not properly declared, then it's an error.

We already know that this is too restrictive, because we want
to be able to call external ""QGL1"" functions, and we can find
them."
Assembly,BBN-Q/pyqgl2,3ff029724ed8b2f026b1fb81ac3b7e3290ba07e1,2017-04-07T19:57:07Z,3391175511edfe746a3f461b105a99798d3e1916/37c5ee691d7cee1490d038bb881f688d4b866a8c/19f090f0b17ed60b9195793f183eae5fd7b73a2b/,2017-04-07 16:21:14-04:00/2017-04-10 11:24:40-04:00/2017-04-13 16:03:24-04:00/,"Handle tuples of QRegisters in expander.

Relevant to cases like Barrier(""A"", (qr1, qr2))."
Assembly,BBN-Q/pyqgl2,b23cc2a0f8812536b6ffbfcaf0d8bc4014a01e47,2016-01-29T19:54:34Z,d76040ae3c0c26e56a9f49cebfc6556034b8c5dd/,2016-02-18 11:29:13-05:00/,"handles nested loops; doesn't handle tuples

so now something like:

	with concur:
	    for x in [1, 2]:
	        for y in [3, 4]:
		    foo(x, y)

will expand to:

	with concur:
	    foo(1, 3)
	    foo(1, 4)
	    foo(2, 3)
	    foo(2, 4)

(although perhaps in a different order--the order is considered
unimportant)"
Assembly,BBN-Q/pyqgl2,1211bbefce3f770fe77fe78fd7a72297a9d123a9,2015-12-08T17:45:37Z,86c45050dbbb7149fe86c4ec5697249eb15f4871/3e0f8b30e048f342aba527de2f05d90430e40a1d/d1a77b24ebeeffa7f5470bd041b84a470ba3ac3a/,2016-03-17 15:43:23-04:00/2016-09-29 10:18:22-04:00/2015-12-08 16:42:39-05:00/,"recurse the inlining through called functions

even if we can't inline a function, we might be
able to inline calls made by that function, so
make an attempt to do so.

An open issue is how to represent and access the
transformed functions.  Right now they are added
as an annotation to the original definition of the
function, but that's a bit clunky.  We could also
add them to the namespace, but what to do with the
final code is awkward.  The problem is that we need
to get the new code somewhere that the interpreter
will find it when it's time to actually execute
the program."
Assembly,BBN-Q/pyqgl2,3338c4dafcb8986964bc3c24fedb6f1b603a4492,2015-10-20T18:08:38Z,5b6d59d06703388764770dec0f09cc6a260c0114/9fd00f045a66b4db21318320aeb74e973935a172/,2015-11-10 18:51:46-05:00/2015-11-10 10:18:48-05:00/,"fix dependencies on import/stmnt ordering

make more like Python; whether an import happens
before or after a statement can change how the
symbols within that statement are treated"
Assembly,BBN-Q/pyqgl2,b8ff0910fe61d135b330e97df31656e4b5e2d477,2016-08-22T18:54:21Z,258626ae0b8cc4848cf347b13ef5132e5f737dd8/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/,2016-09-12 16:35:42-04:00/2016-10-07 09:39:34-04:00/2019-06-19 13:35:55-04:00/,np.linspace and np.arange working. A use of numpy.pi seems to work. zip() fails.
Assembly,BBN-Q/pyqgl2,c5544809471d93e1a157356ee81e7cac5761b4c7,2016-05-24T14:50:10Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-07 13:22:20-04:00/2017-04-06 21:52:58-04:00/,"track known qbits by use name as well as var name

if we have something like

	x = QubitFactory('1')

then the local variable name for this qbit is ""x"",
but the ""use name"" (which has global scope) is the
name of the underlying channel, typically something
like 'QBIT_1'."
Assembly,BBN-Q/pyqgl2,509de1607c281765471c80200c96729719a05cf3,2016-02-16T16:29:50Z,ec5d2493b4d497df8407a5be031bc5df6971c364/,2019-06-17 13:51:22-04:00/,"rewrite all functions so they are QGL2 functions, with simplified QGL1 variants included for testing"
Assembly,BBN-Q/pyqgl2,e664ae1facfd6addf11f3b859328841d9534ae6b,2015-11-05T19:37:02Z,de966a014ccfcdb33674cf00b694beb01d73c40b/5b6d59d06703388764770dec0f09cc6a260c0114/11d7381d9ff00f5f005352d0902d27570c6ad14e/53db27637e4b66d965ed74a9dd7d5c46dbf978e2/,2015-11-06 17:47:53-05:00/2015-11-10 18:51:46-05:00/2015-11-10 19:45:36-05:00/2015-11-06 13:50:20-05:00/,handle context in def lookup
Assembly,BBN-Q/pyqgl2,7e100f49509143f211dac0439665a913cf6ba997,2016-02-01T20:10:33Z,200d480eda5e4279e6192d1dae034fc7f5af99ff/e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/eedd04eea773ef0dd11d7db7c0d6d7e9af0bbb94/615352f7b26ba981e27b58c382d9565184fccadd/ccb54dbe588819f0c6c5acef356b351ad09489ee/,2016-02-11 16:21:26-05:00/2017-04-12 11:00:41-04:00/2016-02-05 16:15:14-05:00/2016-03-17 13:40:17-04:00/2016-02-25 13:54:02-05:00/,Cleaned up and working helper functions. Cleaned up AllXY to use the new helpers. Much cleaner.
Assembly,BBN-Q/pyqgl2,3a39bcac63dff15c8318508b136108fff6f75596,2016-03-09T21:26:29Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/d6af00f88a8977a72366860560c799c3d61cad10/4778e78488f7e7a45b60c39a4e7155f254d2ec74/c2886289544e8a30088c0cc11caf8fc6f4203953/06a08bd650997ece86188246d62da8b773e34643/aa26adf868fff3486042cdb63d1c37a45ca8ac27/,2016-06-30 18:21:21-04:00/2016-04-08 13:19:09-04:00/2016-06-28 11:47:45-04:00/2016-03-16 22:21:06-04:00/2016-05-04 10:30:21-04:00/2016-03-09 18:03:23-05:00/2016-04-08 16:58:22-04:00/,"use ""repeat"" instead of unrolling simple iteration

this isn't integraged with the grouper or the flattener yet"
Assembly,BBN-Q/pyqgl2,c34cff6f4079aa3ddb2d5961765cb3aa0d1df688,2016-05-19T22:55:35Z,baf708c6e624f8c1271336391ee2cda6bdc19fb5/9328f819d887cecd9334502182fe23c8862b0529/,2019-06-11 14:59:37-04:00/2016-06-06 10:52:56-04:00/,drafts of tests for different interesting cases
Assembly,BBN-Q/pyqgl2,c07ad45f0d29d88ac0b32f92cdc5b94b35cfd80e,2016-10-07T20:51:24Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,"QbitGrouper2 doesn't need to be a NodeTransformer

the visit_ methods are never used and were leftover
from earlier drafts (QbitGrouper)"
Assembly,BBN-Q/pyqgl2,da710b993ff14915935d4b92176187fded25f651,2016-09-20T19:44:45Z,84a76946f6980331a4153dc9af13e5b6ad766f2d/706341fa677c38073a5e5cc6ec85fa771b3418bd/4bb20c45b541d7dba6456cded56932f628f99851/,2016-09-28 15:39:20-04:00/2016-09-28 15:41:09-04:00/2016-09-28 15:39:00-04:00/,"Revert ""Revert ""resolve merge conflicts""""

This reverts commit 9f4b8451daf674db43ed89752e8fa84eb9bd47e9."
Assembly,BBN-Q/pyqgl2,be00e5ce8a507df5a79d7190607fcccef78cfcfe,2016-04-26T19:26:49Z,956225b652eb80b56aa726a830a1f4768eff67f0/,2016-07-25 14:28:24-04:00/,change to use QubitFactory
Assembly,BBN-Q/pyqgl2,804d6f6fe7fb830f0bf06f73365be1124c31e4e5,2016-02-26T22:22:48Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,for testing the latest expansion code
Assembly,BBN-Q/pyqgl2,b315d6ab3e7ca4bc2756fe6bf0400cf2e0f2a7ce,2015-12-07T22:26:36Z,b83bd733bf2546c3a530ff8e47593113db873163/3337c7e54bca2f5217d95353cf6c3b6a128c9dea/2343939e5e65d994bb327472f1e894d5c5194562/94250b99d38edd67798a85a10aa51289b898fa34/0ab2a2db3f2d2c3af5e35e5aabd20f338a28679c/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/b24538119fd6d1243f08b19ab30a159522b8abe9/910eced8ea0d5aba83e8cb61715cbe11da1d6f9e/,2015-12-07 18:33:05-05:00/2016-09-19 15:43:52-04:00/2015-12-07 19:25:28-05:00/2016-04-07 12:27:11-04:00/2016-01-28 12:34:58-05:00/2017-04-06 10:01:35-04:00/2016-02-26 16:25:29-05:00/2015-12-08 16:44:49-05:00/,"add iterative inliner to repeat expansion steps

still need a process for finding calls within a ptree
and expanding the corresponding functions where possible,
and then modifying the namespace in a graceful way to
use the expanded functions instead of the original"
Assembly,BBN-Q/pyqgl2,b40ad8cb74d29d9ffe9ee480e6c9a404467a16ef,2016-05-16T21:31:16Z,6eb72ec72bd75379fdc3205f542f21ec3311fb48/,2016-05-17 13:33:17-04:00/,"copy over info to new Qcond news

when we create a Qcond node, copy over all the file/lineno info
from the original condition."
Assembly,BBN-Q/pyqgl2,8bc9a561f38f6c1e4bde77a2fec360e8638892ea,2016-04-14T19:06:03Z,444e95042d4d5875f0f21e72c06476362ad3e544/,2016-05-18 16:42:19-04:00/,the unroller now needs an importer
Assembly,BBN-Q/pyqgl2,9219cc02cd83026c424fd5360a49dce092eaf262,2015-12-15T21:36:50Z,22bd61a52126ae4ae663859c5d1511a3a40d5b17/,2016-01-29 17:04:07-05:00/,"enable NodeError to work without a node

if we don't have a node, then we can't localize the
error to a specific row and column, but we can still
print something"
Assembly,BBN-Q/pyqgl2,aeb80edee57487014837931862d9aa617e949fac,2016-04-20T18:04:13Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/1b9522bacb877a410d65fe4c3f6e13695e32d20b/8dcac7bae4a4b3ac5f40f4245d8f3bfc8440c632/,2017-04-07 15:05:12-04:00/2016-09-07 16:36:22-04:00/2016-07-22 09:49:27-04:00/,use QubitFactory not Qubit
Assembly,BBN-Q/pyqgl2,bdd8683903b9fe4f6803259b76e5ee72ad7ffeed,2016-09-12T14:58:41Z,4d4482de68da8dfcd9a3683e4eabae12988943e6/2039148c0479387a4147c430a84c9d39f53a895d/38d7e74ff3da509312382d8117d86fdb4745bce7/2dda94cc53f72247ed39ad3cf7637162f81f2f64/,2016-09-29 15:11:40-04:00/2016-10-04 16:46:41-04:00/2016-09-29 14:19:17-04:00/2016-09-27 16:48:01-04:00/,Comments. Wrap calls to zip and product in call to list() as you can't iterate over a generator currently.
Assembly,BBN-Q/pyqgl2,8ecf32fcfabce60513bc2810137d518d89084f0b,2016-10-04T22:16:34Z,7efd718ffcd5f3c32725d92a0a9cb93beeaeba9d/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-10-04 17:44:06-04:00/2017-04-06 21:52:58-04:00/,resolve merge/rebase conflicts
Assembly,BBN-Q/pyqgl2,22dda2d3d247952c772a6bf91905307ae8af9e1c,2016-07-25T14:24:24Z,940bd940dd9341d40b72f18f0afb862c7d0e78bc/,2016-09-06 16:44:46-04:00/,supply a bunch of qubit names to cover common cases
Assembly,BBN-Q/pyqgl2,c2886289544e8a30088c0cc11caf8fc6f4203953,2016-05-04T14:30:21Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/,2016-06-30 18:21:21-04:00/,"somewhat generalize concept of simple iteration

don't limit it to just range(n); permit other kinds of iters"
Assembly,BBN-Q/pyqgl2,96178b3bd09987e99f74f3d6f0675a23ceeed5bc,2016-03-31T23:15:33Z,604df34f56aec9719c476e98ac77a99a3544616b/,2016-07-28 10:57:23-04:00/,"permit the qgl2stub decorator to carry import info

the ""parameters"" of this decorator include the module
name and the original symbol name (if not the same as
the imported name) of the code that implements the
stubbed functionality"
Assembly,BBN-Q/pyqgl2,d82c5036752cfbc8bb49decc8717685833cc90e1,2015-10-19T19:57:49Z,1d070afb4c5fa5cf7eb3ad1bf50c6208cd486b7a/07c61e2c9f4588a395f95fc9e433267c24c9c60f/24c142ed6f812c7d98b7e107758e0f77f469c889/d5204011ed02416bf5406b93ed3c5746ff450d4c/,2015-10-20 14:46:56-04:00/2015-11-11 14:22:19-05:00/2015-11-10 19:44:50-05:00/2015-10-21 12:11:58-04:00/,use the parameterized names
Assembly,BBN-Q/pyqgl2,d3b983ea87b19a1a5ad45089e78773e8573603aa,2016-07-25T14:26:08Z,6deaaa0373cc4830a1a5dc236271b48589d2fb4d/232aa6630dee440efd89b8cd05d67e0a35fbe264/b5ad2f88d155f15bf456de242e90f020cd0b0249/9690375f0473337f0aa3593260803bdb26444a62/032f0241eb969870a941956a7db8a17a86e76aa9/956225b652eb80b56aa726a830a1f4768eff67f0/3bfe751db8d3c46463119be914a2cac7094da49d/f791681624d5ec22b1a3a0005a83b1bfa31330a9/940bd940dd9341d40b72f18f0afb862c7d0e78bc/cda56a922723f87a7a6d39af3a862553609f2927/,2016-08-22 14:52:52-04:00/2017-03-23 14:06:24-04:00/2016-08-22 11:29:55-04:00/2016-09-12 16:38:08-04:00/2017-04-11 16:00:27-04:00/2016-07-25 14:28:24-04:00/2016-09-29 14:53:30-04:00/2016-09-07 10:19:20-04:00/2016-09-06 16:44:46-04:00/2019-06-24 13:25:22-04:00/,updated comments on what currently works
Assembly,BBN-Q/pyqgl2,0aca44a93f0b0a3e99de37886ed0b3786db085ce,2016-08-19T22:11:55Z,2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/,2016-09-06 18:44:10-04:00/,"return ERROR instead of False if failed

use an error code consistent with what the caller expects.

also remove some noisy diagnostics"
Assembly,BBN-Q/pyqgl2,0f4b6c56ec50070a8b713d6b028eddf89b0a368a,2016-05-12T04:22:34Z,ddbaf39ee4162f676ebf53b94da3e98c1181d857/,2016-05-13 06:43:26-04:00/,"don't copy calls in expanded for body statements twice

there was an extra ""append this to the list of things to do""
that meant that calls to stubs got called twice"
Assembly,BBN-Q/pyqgl2,6aa0822aa786a03660822ff5bf1013e632d87f5f,2016-04-20T17:31:49Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/bb728282e2365260f4ebd992c1c79b1c6e550856/,2017-04-13 10:01:57-04:00/2017-03-30 15:26:04-04:00/,make the label argument to Qubit be a kw arg (bug fix). Support QubitFactory stub (better way to get qubits)
Assembly,BBN-Q/pyqgl2,9acaad7dfede78fb06880fa7b4cc0f7af97cf2c2,2016-10-07T21:23:15Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,improve the class comment for QbitGrouper2
Assembly,BBN-Q/pyqgl2,74102ff0446ef0a5604bd3ea73aa741b85f51d48,2016-04-08T20:50:04Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/39305cd69ec192acd0d702be7874490c90e702f1/790b784d40c340c915e54eba740ccd3f3aba5e87/48f241e225aefb0576662297ea290f68b0c9fb00/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/940bd940dd9341d40b72f18f0afb862c7d0e78bc/60ff672fe63657948385d69b9f33e497f58ef28b/cda56a922723f87a7a6d39af3a862553609f2927/1b1217e427e6762fe40a3705630f5682834a045d/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/eb31178265da44b649a8f07f861debdeadc788ac/258626ae0b8cc4848cf347b13ef5132e5f737dd8/956225b652eb80b56aa726a830a1f4768eff67f0/760cb116fef3fad9b43195f1ab4154429b4733c3/26e5f34431e1cb9719436e9bd96101df6c7eaa00/73d3663612c5127c1e6b036a9f40e86089645906/b8ff0910fe61d135b330e97df31656e4b5e2d477/9217721da958f15856927c4f9695c61f2fdad3f1/,2017-03-23 14:06:24-04:00/2019-06-17 18:28:39-04:00/2016-04-20 12:44:21-04:00/2016-04-20 13:35:26-04:00/2016-05-13 14:58:56-04:00/2016-09-06 16:44:46-04:00/2016-09-24 15:57:51-04:00/2019-06-24 13:25:22-04:00/2016-04-14 09:24:47-04:00/2019-06-19 13:35:55-04:00/2016-04-20 13:53:55-04:00/2016-09-12 16:35:42-04:00/2016-07-25 14:28:24-04:00/2016-04-11 10:32:39-04:00/2016-05-13 14:55:26-04:00/2016-09-29 16:36:27-04:00/2016-08-22 14:54:21-04:00/2019-06-19 13:11:28-04:00/,add some more minimal single qubit qgl2 basic sequences to work on
Assembly,BBN-Q/pyqgl2,e591628c28a1072e9f4ad6875d07d72dcb6a06a1,2016-09-07T20:05:57Z,39188a72c8a2484e3a13f5fb4c3eb65131889f29/0b93b5de5824af6abfbe5d6f44f47ede5dcc917b/2dda94cc53f72247ed39ad3cf7637162f81f2f64/cda56a922723f87a7a6d39af3a862553609f2927/ef42a9b1125661d6997032a6199dae71ffaf7362/,2019-06-12 16:34:55-04:00/2016-09-19 15:25:32-04:00/2016-09-27 16:48:01-04:00/2019-06-24 13:25:22-04:00/2017-03-22 16:13:42-04:00/,"Cleanup of Rabi.py

Uses ""goal syntax"" for compiling a top-level QGL2 function with arguments."
Assembly,BBN-Q/pyqgl2,17b73b294d515538d7936547f2e8b250bd60131f,2016-02-17T19:27:34Z,4d4482de68da8dfcd9a3683e4eabae12988943e6/93e91f3cb853321899340850a241a5c237f40b31/,2016-09-29 15:11:40-04:00/2017-02-16 14:56:23-05:00/,comments to help explain what is going on here
Assembly,BBN-Q/pyqgl2,322c306829bd1123c4df21340342d534ac2a0762,2019-06-24T17:23:10Z,e867bb59b73d8b26fb1d85d3bedc521e3326b076/d0bbc7cc0c42609a2618a68ff6bb6a037f3dc644/,2019-10-11 12:08:09-04:00/2019-08-06 17:15:29-04:00/," - Fix issue #35
 - if a single arg and it is int, handle specially
 - else for each Arg, allow it to be a tuple, list, QRegister, String, or a Qubit
  - QRegister: Append all qubits in the arg to the local set of qubits, ignoring any duplicates
  - String: Try parsing as 'q#' and append that to local set if not already present
  - Fix issue #31: Qubit: Try parsing name as 'q#' and append that to local set if not already present
  - Fix Issue #32: list/tuple: Recurse"
Assembly,BBN-Q/pyqgl2,7775f56f5e3743a9b6b73f33a063cfd3ed1a8871,2016-03-18T14:12:26Z,4d360b2fa2ea73387efcfb7132343bff79a6d09c/170e720cbfa5069f523c4eaed7d550185e33eb6f/,2016-03-21 16:15:52-04:00/2016-04-06 17:19:48-04:00/,"improve a couple log messages
comment out a log message and empty block for handle_builtins (unused)

can_specialize no longer fails for qgl_stub functions. Instead, explicitly avoid qgl_stubs when we get to the point of actually specializing the function. The result is that we do error checking on args of qgl stubs"
Assembly,BBN-Q/pyqgl2,10bb55d2cf6dc8c9fbe9c0ccb060e788da443876,2015-11-11T22:16:43Z,06de51e238484a3a2bc71408d11f11f869276a55/f45dc8c6d9e5b88c00dff2547a96f53a9643943f/,2015-12-15 21:15:33-05:00/2015-11-23 15:08:10-05:00/,"clean up error messages/add module variables

adds hooks for tracking module variables (aka ""global"" variables).
We don't do anything with them yet."
Assembly,BBN-Q/pyqgl2,4d534baa977af5f119a5af91d7d7da10e41af3ac,2016-02-16T16:31:36Z,8fef60223a508b19c549dd1d2938e5a7486b3878/4cf47b421ad55b4f420741d0e56c7a850d2b728f/af2f9abb22ef2956c04ced351d6df508b16b4f9b/,2016-03-17 13:44:27-04:00/2016-02-26 13:43:46-05:00/2016-02-24 14:43:57-05:00/,"comments, cleanup so we have runnable QGL2 code here"
Assembly,BBN-Q/pyqgl2,e4840430c5e6d3398179df32e749f987b9e5d0c9,2016-03-16T21:36:18Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/c2886289544e8a30088c0cc11caf8fc6f4203953/4778e78488f7e7a45b60c39a4e7155f254d2ec74/,2016-06-30 18:21:21-04:00/2016-05-04 10:30:21-04:00/2016-03-16 22:21:06-04:00/,"add diagnostic msgs about ""repeat"" disqualifiers

if we can't turn a loop into a repeat block, provide
a diagnostic explaining why.  (this isn't always the
clearest diagnostic, if names have been mangled, etc,
but at least it's something)"
Assembly,BBN-Q/pyqgl2,bc4722240b0ee0c4509d3a5eba4eb07b04f86bbb,2016-07-13T17:48:05Z,6785cdccb960d6740112ec1b0a46f387e1f98417/,2016-09-27 11:32:11-04:00/,cut short searching for barriers to replace when they've already been replaced
Assembly,BBN-Q/pyqgl2,e9f53ed95e3d5af23d95d8e6a4b1f9538a6e79a5,2015-12-14T20:07:42Z,9b7a544414650f8d04e88697397a27578208dcdb/5d90941cb879212d5043e1f5222d59022e24488b/c1ca2f051f40ec7f16a6c338ecf33f30a4e18af4/,2016-03-18 16:16:29-04:00/2016-03-21 16:09:56-04:00/2016-04-06 16:30:50-04:00/,"starting new type analyzer

the new type analyzer is better at finding variables
and infering their types, but not perfect: it doesn't
know how to deal with complicates rvals or actual parameters,
and doesn't know what to do with tuple assignments yet

the intent of the new analyzer was to replace the ugly
old analyzer, which was getting too complicated to maintain.
with the new features, however, the new analyzer is getting
hairy as well."
Assembly,BBN-Q/pyqgl2,112558d1601c587de9c92c6eb71a93b41a6ffdbb,2016-03-11T15:28:28Z,0b2de90291611a6282d22a52cadfb837a874f2d4/,2016-06-27 18:40:13-04:00/,add is_seq predicate to find seq blocks
Assembly,BBN-Q/pyqgl2,4d360b2fa2ea73387efcfb7132343bff79a6d09c,2016-03-21T20:15:52Z,170e720cbfa5069f523c4eaed7d550185e33eb6f/63756f13d45cbd3c7ff192cb2196e32b4d814764/,2016-04-06 17:19:48-04:00/2016-03-28 16:38:33-04:00/,"* improve some error / debug messages
* If you include Qubit() in a Call instead of an Assign, log an error
* Try to support functions with kw args when mapping qbits. Before it gave an error if the # of args (not *args or **kwargs) in the method signature was different from that # of non kw args supplied in the invocation. Now be a little more flexible; if # of args supplied is more than the number of positional or keyword args declared, that's an error. Or if the # supplied is less than the number declared that do not have defaults, then that's an error. Otherwise, try to do the mapping - just bail out with the first formal parameter for which we don't have an argument"
Assembly,BBN-Q/pyqgl2,a4defbf6fcb4282276e4dc6c9283ac5e4e19c751,2017-03-24T18:28:10Z,57699994fc8284b9f07054bd8a6f4c8e2379b4ac/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/e31145b3337acdf8917932119e192f4448733704/bb728282e2365260f4ebd992c1c79b1c6e550856/,2017-04-11 15:23:04-04:00/2017-04-07 15:05:12-04:00/2017-04-05 16:56:18-04:00/2017-03-30 15:26:04-04:00/,Test new runtime value functionality.
Assembly,BBN-Q/pyqgl2,f8b0e39f7bbe41898f057b426ac6458bf46650f4,2015-11-03T19:29:29Z,e664ae1facfd6addf11f3b859328841d9534ae6b/5b6d59d06703388764770dec0f09cc6a260c0114/,2015-11-05 14:37:02-05:00/2015-11-10 18:51:46-05:00/,"begin resolving symbols in imported namespaces

incomplete, but starts to look for the right namespace."
Assembly,BBN-Q/pyqgl2,fa489ce07d9993cc1ea19e1606344b4da6f5acbc,2016-10-27T15:57:29Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/,2017-05-25 16:22:05-04:00/,"check for missing channels

if the user tries to use a qbit that isn't in the channel
library, print an error message and then halt (instead of
generating output for the existing channels, if any, and
not considering this to be an error)"
Assembly,BBN-Q/pyqgl2,673d4af48598e6cf070394c538e19c3facb4f69b,2015-12-10T22:38:11Z,e2f8e8dbb3969de855447d253bc9ed0772d58f20/,2016-03-01 17:12:39-05:00/,"clean up how the specializer is called

also clean up where it creates copies of the function
so that we don't create copies we know we don't need"
Assembly,BBN-Q/pyqgl2,e9c64b74c266dfcdb61d282e6723cd1973fa4bfa,2016-05-13T02:40:57Z,2e89b67c2a84a0d1a44bb4a83773ae9e827a2ad0/,2016-08-29 18:11:45-04:00/,"an improved name finder

the previous functions for finding names didn't
differentiate between attributes and names; this
does (and tracks them separately)"
Assembly,BBN-Q/pyqgl2,833ba1184087fa3627f658ae5abc1237fe14c0ff,2016-05-26T03:19:34Z,cbd421f6cefc2dbd63d696b0ca92698054324459/3bf4dba28f1b624e9342e98e4821788001ed5aa6/,2017-03-22 16:14:31-04:00/2016-05-26 17:59:19-04:00/,"add location info to synthetic with nodes

the with-qfor and with-qiter nodes need to have
the right location info, in case there's an error
and we want to know what line in the source it
came from"
Assembly,BBN-Q/pyqgl2,8ad70bafc2ec24b08347d77e70a7f980440e779d,2015-12-07T21:45:28Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/987e1e67bda13a4b7777ee23c2268f2885d42aec/8ef163c973be2334f5f7850ca6e25148da2e43ac/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/1b9522bacb877a410d65fe4c3f6e13695e32d20b/30b22f27f5b740f388e8ed7a01f2efacc086f507/,2017-04-13 10:01:57-04:00/2017-03-22 16:25:57-04:00/2016-09-13 16:14:42-04:00/2017-04-07 15:05:12-04:00/2016-09-07 16:36:22-04:00/2016-03-21 16:46:01-04:00/,"Add tomography metaprogramming example.

It doesn't actually run, yet."
Assembly,BBN-Q/pyqgl2,714e04f946598a495c356c6904353b1e1bd48cb1,2016-02-26T18:57:01Z,ce51c3da3e5924e22bbbe958258a7042f1cf7a51/3a016d8ee3404a53b9da8d4b35cdba34d6edc68b/956225b652eb80b56aa726a830a1f4768eff67f0/26e5f34431e1cb9719436e9bd96101df6c7eaa00/b8e2e96934317ff22b1f06088dc02a8e826312e7/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2019-06-25 15:48:25-04:00/2019-09-13 14:41:08-04:00/2016-07-25 14:28:24-04:00/2016-05-13 14:55:26-04:00/2019-06-17 14:44:15-04:00/2016-03-25 16:12:15-04:00/,last RB function
Assembly,BBN-Q/pyqgl2,09d8a149bd0acc11e9883d12a05746cc06f83d4f,2019-02-25T19:19:10Z,a96a26072a3d117b76af8a783f92edd7f21c04f7/1111ddf736da46dc38079c8fa503089872a6a7ea/,2019-10-02 15:33:45-04:00/2019-02-25 14:33:35-05:00/,updating travis config
Assembly,BBN-Q/pyqgl2,7fd1c5a76fc05da4e5ce323ce8681e1cab90b202,2016-04-08T14:01:24Z,d898e0c46e8c73fbcea9448087435b9d751bd404/,2016-04-28 13:09:58-04:00/,"remove Sync calls at the start of the sequence

This is a hack, and needs to be better thought-out.
There may be other, similar cases to consider.

Currently, Sync() calls at the start of a sequence
seem to confuse the compiler, and don't serve
any obvious meaningful purpose (at best, they're a nop)"
Assembly,BBN-Q/pyqgl2,626669397b8d6ad7bb524c1f3d7d9a6bbb0b11e8,2016-02-15T21:03:45Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/f40d398390b0998ec36c58ba1b2fdf70e1df2e07/d76040ae3c0c26e56a9f49cebfc6556034b8c5dd/,2016-06-30 18:21:21-04:00/2016-06-13 19:30:38-04:00/2016-02-18 11:29:13-05:00/,"fix bug with non-for-loops in concurs

also a bug in loops that contained multiple variables."
Assembly,BBN-Q/pyqgl2,82c4ae6159402d9a1076db0eba9ed737fb2f1e01,2016-02-12T15:22:51Z,d53082bc53ac520ca47355f1fa6663973c3c16a8/30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-04-15 08:27:39-04:00/2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,simple tests of 'for' unrolling/grouping
Assembly,BBN-Q/pyqgl2,c099cce83ea753676736fcfeae657a06fc8cea6b,2016-08-18T16:10:58Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/0151c5d99395750d260bef24bf188e51195c3183/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2017-04-06 10:01:35-04:00/2016-10-07 17:08:32-04:00/2016-09-15 13:53:59-04:00/,"When grouping statements by channel (qubit), insert at the beginning of the block a Barrier named 'group_marker...' that marks which Qubit this group/sequence is for. qgl2_compile_to_hardware can look for this later to know which sequence is which."
Assembly,BBN-Q/pyqgl2,a236c99bf96716c6aee8142c16e9a2663ae47a2d,2016-10-07T12:46:38Z,480d7b93e215f1e3ce84cb563f09df82ff9bcdcb/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-03-22 17:23:34-04:00/2017-04-07 15:05:12-04:00/2017-03-22 16:13:42-04:00/,tests for issue 100
Assembly,BBN-Q/pyqgl2,144a79f1b2df8d24599208d3e30c9093521712fe,2016-05-13T18:34:55Z,588663e793fa7c2d19344083ca3eb20988bfdfbf/c5544809471d93e1a157356ee81e7cac5761b4c7/dc3cf36f7d3749770848fcc440337e487c29cdda/,2016-05-18 14:36:14-04:00/2016-05-24 10:50:10-04:00/2016-08-29 18:16:29-04:00/,"replace symbols with redirection through a table

the table is used to hold the cached, already-computed
values of those symbols at the time they are assigned
(which for single-assignment variables, is their true value)"
Assembly,BBN-Q/pyqgl2,ff4d3749290f55f783502b3f8ff6e0b5e36fe2b4,2016-04-20T17:32:45Z,1e2bff01dc361528f8bf090d99d0785cd1b18f7f/8c808fab3df3b1e961bc6d307f4ae6aee057d213/3b31a3ecf49fb20b15d38883465414f14336ce36/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-07-05 16:54:27-04:00/2016-05-25 18:31:24-04:00/2016-05-02 18:42:48-04:00/2017-04-06 21:52:58-04:00/,Support QubitFactory as a way to create qubits and use that instead
Assembly,BBN-Q/pyqgl2,42f5e63fc9cd40e7678004f4cd4c544cb35761b0,2016-09-24T19:54:45Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/530ff82ff7e2cbb7ad5a3262477407be7db0b186/68a2c89dafa19dc73b7b221abfcde55245394383/,2017-03-23 14:06:24-04:00/2017-04-11 11:41:47-04:00/2016-09-27 18:58:40-04:00/,"remove refs to QGL; copy over tanh; fix Id calls

If Id() uses a length, it must be a keyword parameter right now.

The PulseShapes from QGL are independent from QGL, but pull
in many QGL imports nonetheless, which breaks the preprocessor
right now.  So I've reproduced tanh, the one routine we need
(right now, anyway) here.

This removes all dependencies on QGL, so remove those imports"
Assembly,BBN-Q/pyqgl2,d3ead6d832e550ea71511f6814a626e3648ddf3a,2019-01-17T20:50:43Z,1ebdb539ee352cb9ff78f38b08205c50ff612299/,2019-06-11 14:58:17-04:00/,"fix calls to qwait to use channels kw

in earlier versions of QGL, the ""channels"" parameter to qwait()
was the first keyword parameter, so we got away with specifying
it positionally.  QGL changed this a few months ago (and we haven't
run these tests in a while...) so this broke everything."
Assembly,BBN-Q/pyqgl2,c0d5ea433c8e8954b3964a32bb5947b5527057ab,2016-06-21T17:44:53Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/256612663974a239a56ec092780236210164dfea/24e85f9147619dd95605bca8b12d33932ca7c412/,2017-03-22 16:17:55-04:00/2017-04-06 10:01:35-04:00/2016-06-23 18:06:52-04:00/2016-06-27 21:09:33-04:00/,add AddBarriers transformer
Assembly,BBN-Q/pyqgl2,d53082bc53ac520ca47355f1fa6663973c3c16a8,2016-04-15T12:27:39Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/,2016-06-30 18:21:21-04:00/,"merge latest from master, adding some comments in substitute.py"
Assembly,BBN-Q/pyqgl2,760cc9add70c097b1bb732f791d454d42fc8cf32,2016-02-26T22:24:16Z,baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2019-06-11 14:59:37-04:00/,test new expansion functionality
Assembly,BBN-Q/pyqgl2,18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76,2017-03-23T13:45:53Z,232fe6aa404c73b84b9a8efe3daa8be0227869b2/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/dced4de17ced5dda99cc709bf797364fd6c2d27e/66ed22c49453a5aa49f7866faffbcb0efa22df35/,2017-04-07 17:09:27-04:00/2017-04-07 15:05:12-04:00/2017-04-11 16:42:52-04:00/2017-05-15 10:21:32-04:00/,Fix test_multi.
Assembly,BBN-Q/pyqgl2,db6d3739e75272be796f25530cdfa878edb0b53b,2016-09-20T13:30:02Z,5c76ad62ff8f8eaf65da5717506e20d98578ec7e/d4f4f6887422e5821c1b299e022f0d79357584a4/693d76d959e5944ed3a39f3afc60734e1162d12d/a7d763c536918c55d62a28563770cba2b27a6a43/b44db5a4c9d492a26f3be6714f35d35fa905668b/,2016-09-21 11:33:16-04:00/2016-09-21 14:55:41-04:00/2016-09-21 08:48:43-04:00/2016-09-21 14:27:26-04:00/2016-09-21 15:00:48-04:00/,move test functions for creating a channel library into pyqgl2 so main.py can use them
Assembly,BBN-Q/pyqgl2,f0a6327c5cd7531873d5e6ccd9783a479919718f,2017-04-13T21:20:38Z,69637b7eae113a830fa13c067714ceef1283f19c/1e7764f714eb68c38b6a534e662f8ca1e069519c/,2019-10-02 13:57:45-04:00/2017-04-13 17:34:23-04:00/,:memo: add examples to README
Assembly,BBN-Q/pyqgl2,ba8eb39f23f8c7bf5f4dc5425d6596d56461859a,2016-05-25T22:33:48Z,f4e18097d15a7152836080bc2e1043548c61bc0c/cbd421f6cefc2dbd63d696b0ca92698054324459/058bfc790852e629427cd48ace879c09eaf492f6/,2016-05-26 19:08:30-04:00/2017-03-22 16:14:31-04:00/2016-05-27 10:17:05-04:00/,"adding new blocks for unrolled loops

to handle break/continue properly, we need
to track where the beginning and ending of
each iteration was in the unrolled form of
the loop.  This requires plumbing that we
didn't have in the past."
Assembly,BBN-Q/pyqgl2,48f241e225aefb0576662297ea290f68b0c9fb00,2016-04-20T17:35:26Z,ce4252b38c69a4d52eadbd4454de6c051c90be8d/d5259010741db8ab055c5384c6bcba80eebfddd8/39305cd69ec192acd0d702be7874490c90e702f1/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/ec5d2493b4d497df8407a5be031bc5df6971c364/cda56a922723f87a7a6d39af3a862553609f2927/968345dae11e8dbf983c06dc26cd22c6cac38aa4/ce51c3da3e5924e22bbbe958258a7042f1cf7a51/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/258626ae0b8cc4848cf347b13ef5132e5f737dd8/39e3932cd90e5ef914db10f83a30b0dd04f434d2/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/956225b652eb80b56aa726a830a1f4768eff67f0/3bfe751db8d3c46463119be914a2cac7094da49d/93e91f3cb853321899340850a241a5c237f40b31/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/878be35fcde09a64716aeaba75cc9c83e9386411/9217721da958f15856927c4f9695c61f2fdad3f1/,2019-06-12 13:42:45-04:00/2019-06-18 19:55:45-04:00/2019-06-17 18:28:39-04:00/2016-10-07 09:39:34-04:00/2019-06-17 13:51:22-04:00/2019-06-24 13:25:22-04:00/2016-10-12 10:11:57-04:00/2019-06-25 15:48:25-04:00/2019-06-19 13:35:55-04:00/2016-09-12 16:35:42-04:00/2016-10-12 10:18:52-04:00/2016-09-07 16:05:57-04:00/2016-07-25 14:28:24-04:00/2016-09-29 14:53:30-04:00/2017-02-16 14:56:23-05:00/2017-04-07 15:05:12-04:00/2016-09-12 16:38:59-04:00/2019-06-19 13:11:28-04:00/,convert basic sequences to use QubitFactory to create qubits
Assembly,BBN-Q/pyqgl2,6d77c31c1c681d3b68581a37b4c9601e3d828cf7,2015-12-16T03:14:52Z,d0c2180aa9adf557e134650c824453549e904b0a/,2017-03-30 14:14:48-04:00/,notes for January
Assembly,BBN-Q/pyqgl2,960ebc53027973267019fee3066a9bd20750b220,2016-02-04T21:21:42Z,c4400a5c4f42c5c6c4f5b766a2c2bd871e42cb76/,2016-02-08 17:15:20-05:00/,"fix from-as imports with relative paths/no modules

this needs more testing, because the semantics
of from-as imports is complex"
Assembly,BBN-Q/pyqgl2,e695735349c259a143aae1fd71754e5fa2dd4012,2016-04-19T16:01:58Z,22dda2d3d247952c772a6bf91905307ae8af9e1c/30ecc1f528c973a326d224463ff6f94ef4de01f9/376981202e56dab3c048c7d6877b21aef9cac7e8/a65b9479f6dc37d81e38f6f5ad495865b8f93fc4/3677c10a9f69f01971dbdb8eb67a0aa0f8d5161e/940bd940dd9341d40b72f18f0afb862c7d0e78bc/ebbe7b3dd394d01a709cb375e67c1c95353e9ce3/,2016-07-25 10:24:24-04:00/2018-10-10 18:12:56-04:00/2016-05-05 16:06:12-04:00/2016-10-10 11:27:29-04:00/2016-09-19 10:12:55-04:00/2016-09-06 16:44:46-04:00/2016-09-27 16:36:30-04:00/,rename main() as compileFunction. Create channel library before doing compilation. Use QubitFactory() to get the qubit in __main__.
Assembly,BBN-Q/pyqgl2,c1ea1b08865aefe9c63ba68d47e10c53e46709bc,2016-10-04T21:40:35Z,b818c774957b78c3b3c443563225eace003c5bd7/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-10-05 11:13:17-04:00/2017-04-06 21:52:58-04:00/,"QubitPlaceholder subclasses QGL.Channels.Qubit

instead of having QubitPlaceholder be a stub class,
have it subclass the real Qubit impl"
Assembly,BBN-Q/pyqgl2,2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449,2016-09-06T22:44:10Z,4d1336e092148ce229b13d716336dc9ad5a279ca/c687a1ddf1228fa2f885c6988c9906a00a516adc/0ea2e6e31197db97d0fdfbb5afc4b3dc0fb19e38/,2016-09-12 18:54:39-04:00/2017-03-23 11:59:02-04:00/2016-09-26 15:04:24-04:00/,"clean up how function refs are checked

includes renaming do_call, which really just checks
for the type of a call (the action of the function is
performed elsewhere)"
Assembly,BBN-Q/pyqgl2,e90b3311d9a820e4c98ff5ee1bd465298f2f080e,2016-03-25T22:12:03Z,036d64348b517226421a6f352e7890d051cec0bb/3f2ea3d243268ee50c8dd32c1d313616815a625f/,2016-03-28 15:23:40-04:00/2016-05-11 11:11:14-04:00/,"use the returned func from single_sequence

this is just for testing purposes; not well integrated yet"
Assembly,BBN-Q/pyqgl2,31c66fdb42102b67299084069fbceef4fe7d3068,2016-03-10T23:14:46Z,7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/a75d9fb40268df5edef39ccc535737b39a5debb2/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/9c5a62b338523833d8bd2036ea2f829f1e726743/0bbe80a220c1121687475914e061ead01f6a8e0c/,2016-04-08 13:19:09-04:00/2016-05-26 14:08:23-04:00/2016-06-23 18:00:39-04:00/2017-04-05 17:07:07-04:00/2016-03-16 22:21:37-04:00/2016-03-11 08:47:19-05:00/,"stubbed out a prototype of repeat blocks

there needs to be a cleaner way labeling the control
statements versus the pulse statements.  It's not
very easy to read."
Assembly,BBN-Q/pyqgl2,c4400a5c4f42c5c6c4f5b766a2c2bd871e42cb76,2016-02-08T22:15:20Z,6d013fa62f8050da64be893e54a924186de05993/8a224933e9a6512a0bc8a5e2e10ab2e6d2d85a3d/,2016-02-29 15:58:40-05:00/2016-04-01 08:55:04-04:00/,"improved logic for relative imports

includes diagnostic statements and doesn't do all the checks,
so this is an interim commit"
Assembly,BBN-Q/pyqgl2,2019ed77591b824855a46a938f51dbed0f10c46d,2016-03-04T14:51:49Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/94250b99d38edd67798a85a10aa51289b898fa34/,2017-04-06 10:01:35-04:00/2016-04-07 12:27:11-04:00/,"added flattener; flattens, but result is wrong

the specializer doesn't know how to do substitution
within some of the flattened constructs; need to go
back and fix that."
Assembly,BBN-Q/pyqgl2,1b9522bacb877a410d65fe4c3f6e13695e32d20b,2016-09-07T20:36:22Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/8ef163c973be2334f5f7850ca6e25148da2e43ac/91418d1bd17b7684e7eb06f405b68ae7d9b31396/722cebfeda7fadce9a4657971bd7731fc85ca74a/987e1e67bda13a4b7777ee23c2268f2885d42aec/337228264a2260fb9f9b3d5dcc15e3cd947f72ab/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-07 15:05:12-04:00/2016-09-13 16:14:42-04:00/2016-09-14 09:51:42-04:00/2017-03-22 16:18:22-04:00/2017-03-22 16:25:57-04:00/2016-09-19 15:45:21-04:00/2017-03-22 16:13:42-04:00/,Add test of tomo.py
Assembly,BBN-Q/pyqgl2,17844923d90d765349921d6974d7e5febd3d3c52,2016-09-12T16:04:10Z,d465584177b0261ff6d42152c55b257ac7bb8f19/d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/bca8536feff2be7b199139d76cc61a3668f864eb/530ff82ff7e2cbb7ad5a3262477407be7db0b186/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2016-09-24 14:34:52-04:00/2017-03-23 12:03:20-04:00/2019-06-17 13:51:37-04:00/2017-04-11 11:41:47-04:00/2017-04-07 15:05:12-04:00/,"basic implementations of PiRabi, EchoCRLen, EchoCRPhase"
Assembly,BBN-Q/pyqgl2,bbeab821bc5829d8adc43e8560beabdb4790990b,2016-06-21T22:47:29Z,3eea02db2ad3d45b8770afe2570e532740fcae61/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2016-10-07 05:28:44-04:00/2016-09-15 13:53:59-04:00/,"initial fix for the AugAssign bug

static single assignment was baffled by AugAssign"
Assembly,BBN-Q/pyqgl2,5fedc3f741202f5a0209858aef39fa476f920fe2,2016-10-13T23:38:27Z,30ecc1f528c973a326d224463ff6f94ef4de01f9/b86d08ed8c4d1ff11f55f85d440625ec4278d5e0/,2018-10-10 18:12:56-04:00/2019-06-11 13:50:19-04:00/,"add -C flag for default channel creation

only used if there is no channel library already present"
Assembly,BBN-Q/pyqgl2,3083b39c6dfa5347c3678f989aa90cec5d409238,2016-06-28T15:23:49Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/5b9aaebdae76cafbff53de01cf8607777f39c259/,2016-06-30 18:21:21-04:00/2016-06-28 11:28:15-04:00/,"deprecate find_all_channels

use the qgl2_referenced_qbits member instead"
Assembly,BBN-Q/pyqgl2,48a6251c9b96234ed08c2bc9d16a085f5d815586,2016-09-19T22:46:16Z,24c647d0cc1c287df45536fa8d57705d1e4bf6ec/ebf88aeda0758a5a0c9a8b1b386573e7fca2f911/,2016-09-20 19:25:30-04:00/2019-09-12 16:34:12-04:00/,"detect and fail on function expressions

if we have something like:

	x = [foo]
	x[0]()

this should call foo, but we can't handle this yet.

If we get anything as the function reference other than a name,
gripe about it.  Hopefully we'll be able to handle this eventually."
Assembly,BBN-Q/pyqgl2,4c1529f1121da6a9fed0ab50409df323d194545e,2016-04-12T23:52:15Z,800348874f8ff7df95d9cac7aab21fc8e794ad9e/,2016-04-13 18:08:26-04:00/,"starting add native imports to populate globals

need to construct a view of each import in the manner
that Python would natively construct it, so we
can evaluate Python expressions in the correct
context as part of the partial evaluator

this is clunkier than expected, especially with
relative imports and conditional imports."
Assembly,BBN-Q/pyqgl2,42ac0100eee487900b748cd5f7b5e287bb6e924b,2016-09-21T18:26:59Z,d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/b44db5a4c9d492a26f3be6714f35d35fa905668b/,2017-03-23 12:03:20-04:00/2016-09-21 15:00:48-04:00/,"we flatten sequences before comparing them, so flatten these that use echoCR"
Assembly,BBN-Q/pyqgl2,1393dcecb5d7ed65ed27a129039d51c53b215e6b,2016-10-04T14:20:47Z,ce4252b38c69a4d52eadbd4454de6c051c90be8d/968345dae11e8dbf983c06dc26cd22c6cac38aa4/d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/17e96f5d2e64398881ad5427d3f1740d8c055a66/356749f00b05fc4ae7521f49c9f90680a38a452e/ef42a9b1125661d6997032a6199dae71ffaf7362/,2019-06-12 13:42:45-04:00/2016-10-12 10:11:57-04:00/2017-03-23 12:03:20-04:00/2017-03-27 15:53:23-04:00/2017-04-11 16:53:22-04:00/2017-03-22 16:13:42-04:00/,"test for allXY the ""QGL2 way""

no helpers required.

test needs improvement -- only checks the prefix
of the outcome (a behavior inherited from other tests:
all need to be updated at some point)"
Assembly,BBN-Q/pyqgl2,a94f8f81e3772ff7bfc2547d5a44f9a27781e467,2016-05-24T17:50:54Z,2046d547729c7d5669507b6cbae46aa69a3746dd/5b0316f4a59eac571e590a95fefafa014d7b3f02/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/874d95a0031a4a625a74b0cd73fd2069a580549f/,2017-03-24 13:15:04-04:00/2016-06-01 19:30:33-04:00/2017-04-05 17:07:07-04:00/2016-05-27 10:49:10-04:00/,"make sure each ast node is marked with loc info

when we create new nodes as part of the flattening
processing, make sure that they're given the proper
location info in case they show up in later error
messages

we might want to figure out a way to encode additional
location info because the relationship between the
original and flattened locations isn't always obvious"
Assembly,BBN-Q/pyqgl2,4611edd714d596507beed2a26db2471c20df2d03,2016-10-04T22:09:39Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,use new use_name() method; revert to Placeholders
Assembly,BBN-Q/pyqgl2,a5a7739bfc9f382ceb696288223075cc470f5a74,2016-03-08T00:32:59Z,dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/31c66fdb42102b67299084069fbceef4fe7d3068/a75d9fb40268df5edef39ccc535737b39a5debb2/,2017-04-05 17:07:07-04:00/2016-06-23 18:00:39-04:00/2016-03-10 18:14:46-05:00/2016-05-26 14:08:23-04:00/,"remove extraneous ""if"" blocks

remove unnecessary blocks by combining adjacent or enclosing
blocks"
Assembly,BBN-Q/pyqgl2,1e7764f714eb68c38b6a534e662f8ca1e069519c,2017-04-13T21:34:23Z,69637b7eae113a830fa13c067714ceef1283f19c/,2019-10-02 13:57:45-04:00/,improve README example with @blakejohnson suggestions
Assembly,BBN-Q/pyqgl2,5d37a4729256da8654900c2fd2fd48b3498b0862,2016-09-07T01:01:34Z,1bf90265d83b75301896f1bb20e1991487e05827/e0cb60ff052d72ac7398a9b6d64ebed17f9fdcf3/,2016-09-07 09:37:51-04:00/2016-09-06 22:42:25-04:00/,Generate coverage report.
Assembly,BBN-Q/pyqgl2,17e96f5d2e64398881ad5427d3f1740d8c055a66,2017-03-27T19:53:23Z,356749f00b05fc4ae7521f49c9f90680a38a452e/,2017-04-11 16:53:22-04:00/,"Remove Sync() from init().

Seems like an implementation detail of the APS2. Let's just do Wait() for now."
Assembly,BBN-Q/pyqgl2,30eb3a2e55d4b9aa451b2da20aa3a5592a480bc3,2015-11-24T19:56:27Z,0e1a0c5bbe1e832b4ac3586eb15f221a4c80abdc/c61a8629542da409076c68d2b27bd2d6783a7d0f/,2015-12-03 19:37:08-05:00/2015-12-07 17:16:28-05:00/,"reorganizing the tests

these need to get moved into a different module and automated.
requires examination by eye right now"
Assembly,BBN-Q/pyqgl2,1ddecbd66f8ed61f87e6aefb7dfbdf3613f94fe7,2016-03-15T22:25:40Z,d3378ba814f5634ebabe9724cf0c5fd380f31e7c/7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/6c66c74c4ac75a1a79638485ef3c33e83bd0f610/0a2b29593cf05b46c34351c3a25329326534fd22/e801c2cc56a229981d9687b67500aa52d9218de9/e430d3d21e6d57b56d2089aadc697c5c6e3df131/6f4a0dc83d0e0da165b4871f0637089449a7bb2a/,2016-05-26 16:06:58-04:00/2016-04-08 13:19:09-04:00/2016-03-28 15:24:21-04:00/2016-03-16 17:11:25-04:00/2016-03-17 18:21:51-04:00/2016-06-03 14:06:34-04:00/2016-03-28 16:38:17-04:00/,"first draft of code to insert WAIT/SYNC

also insert empty blocks for idle engines, because
synchronization is global in the current architecture
(so when we sync any engines, we need to sync *all*
of them, even the ones that are otherwise idle)"
Assembly,BBN-Q/pyqgl2,8ca9d01574f29d7ddbfc80b5730c8859bbe6b126,2015-11-13T15:11:24Z,138d0850af1a32891ee18bd737427c9f849fc959/,2019-06-11 13:48:44-04:00/,"cleaning up abstractions

using constants from qgl2 rather than literals"
Assembly,BBN-Q/pyqgl2,ae28a86460f5f0ceff5a3f11bda3ae4377ea0709,2016-01-28T20:35:55Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,"Here is another examply of ""with concur"" for qubit initialization."
Assembly,BBN-Q/pyqgl2,2c7267243798adbacc4f07368be0e438b009bb94,2016-08-11T21:00:44Z,8c8cca897c43f56f7bc0504add6d441b7d09fecf/ad66aad5919b9be3fa1666414ef6b33de1936a95/72cacc79eaf15d058bcd932607d06d6b3d8d175d/9904439ab96c4e0289d8c33d7506ff63ba8d336c/65fa5a9942c61ca2b32d92d9e6f48f4e70cd8ff6/362b36d9e9f9d57a6e63552b78b5524049c52b13/89ce070f145292b0276f72ccf8cf9fbe7cb59ba5/,2016-08-23 19:01:33-04:00/2016-09-15 15:13:28-04:00/2016-09-12 16:36:37-04:00/2016-09-27 13:26:16-04:00/2016-08-18 18:47:48-04:00/2016-08-18 17:25:25-04:00/2016-10-11 12:16:13-04:00/,"clean up inline checks for param types

also return the correct value (although nothing is done
with it yet)"
Assembly,BBN-Q/pyqgl2,2b109095e098683dbeb6c22d0c8d65428f2eb31a,2015-12-03T19:07:55Z,d2097d286109e4e81b1706aef116ca7d8406d37a/48bee6ec82fd9cafc298c3678d47a70e0f0ccb42/2c991f9217fcaa19ebc5cdae6865417719956f16/,2015-12-03 17:28:30-05:00/2015-12-07 18:40:18-05:00/2016-10-07 05:30:11-04:00/,"fix bug in inlining over with/try blocks

also starting to add machinery to do constant propogation,
but this is incomplete and has no effect on the output yet"
Assembly,BBN-Q/pyqgl2,cfbc6234d4ea25c70bf86724bfb3cc1d92da7868,2016-03-28T23:33:51Z,7049b38da4c002dd828f8666fceec215dbfe3361/,2016-05-23 19:41:02-04:00/,"when searching for qbits, look in orig_call

don't only search for qbits explicitly; look for
qbits in the original calls that might have been
inlined/optimized away"
Assembly,BBN-Q/pyqgl2,7d3717bbc80e3b3d6451ac2ff837ae754ea28e9d,2016-09-02T22:23:52Z,e1676dd3857d49811eddde4e419c36cb867b96f9/b26ba3037661c276113a7c3b7a5a52aac00773e1/2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/,2016-09-06 15:26:50-04:00/2016-09-09 10:11:51-04:00/2016-09-06 18:44:10-04:00/,"sketch of runtime expansion of func refs

we have a hard time with qgl2decl functions passed
by reference; we need to expand them.  First we need
to figure out *what* to insert into the expansion,
and this is the first step."
Assembly,BBN-Q/pyqgl2,d94600322b5a992cc2086f830e1010108dff2349,2019-09-12T20:35:54Z,75266a602ec73245deb1b25821fe2aa90df1ddfe/,2019-09-13 14:39:34-04:00/,"QGL2 copy of some Cliffords pieces, but clifford_seq remains a stub (and the methods only it uses are left in QGL1)"
Assembly,BBN-Q/pyqgl2,30ecc1f528c973a326d224463ff6f94ef4de01f9,2018-10-10T22:12:56Z,d5259010741db8ab055c5384c6bcba80eebfddd8/39305cd69ec192acd0d702be7874490c90e702f1/4f88f89684171f024eb415bb1b642ab44f444012/d652682248d68ed17e06249858a0d071bef60461/ec5d2493b4d497df8407a5be031bc5df6971c364/b86d08ed8c4d1ff11f55f85d440625ec4278d5e0/1e82c887088d9486d959b82cf601552b4c0c005b/4406bfda6402b7710b1d015c8f0904969991d5c0/,2019-06-18 19:55:45-04:00/2019-06-17 18:28:39-04:00/2019-08-15 18:46:31-04:00/2019-06-11 14:57:47-04:00/2019-06-17 13:51:22-04:00/2019-06-11 13:50:19-04:00/2019-06-24 12:46:02-04:00/2019-06-13 15:18:07-04:00/,"change ChannelLibrary -> ChannelLibraries

many attributes have new names in the refactored ChannelLibraries,
which has a ripple effect on many of these tests.

Note that most of the tests fail now, due to some problem with WAIT."
Assembly,BBN-Q/pyqgl2,06e71427909def2dd8c70d48a69c852899a863d8,2016-02-22T21:53:40Z,d5259010741db8ab055c5384c6bcba80eebfddd8/853d88257383734c38522454933a77f3bf15510c/30ecc1f528c973a326d224463ff6f94ef4de01f9/39188a72c8a2484e3a13f5fb4c3eb65131889f29/956225b652eb80b56aa726a830a1f4768eff67f0/b8e2e96934317ff22b1f06088dc02a8e826312e7/ccb54dbe588819f0c6c5acef356b351ad09489ee/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2019-06-18 19:55:45-04:00/2016-03-01 12:59:34-05:00/2018-10-10 18:12:56-04:00/2019-06-12 16:34:55-04:00/2016-07-25 14:28:24-04:00/2019-06-17 14:44:15-04:00/2016-02-25 13:54:02-05:00/2016-03-25 16:12:15-04:00/,first pass rewrite of FlipFlop
Assembly,BBN-Q/pyqgl2,57699994fc8284b9f07054bd8a6f4c8e2379b4ac,2017-04-11T19:23:04Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/2e89a9d65c25c114e3461b4d561f416a32ca558d/,2017-04-13 10:01:57-04:00/2019-06-11 13:51:27-04:00/,"Remove ""concur"" and ""seq"".

So that it is an error to even try to import these symbols."
Assembly,BBN-Q/pyqgl2,f25e8b071bad4a94db6ab159b45040815168b0a7,2016-10-14T15:50:38Z,ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-03-22 16:13:42-04:00/,"very basic test for syndrome calculation

makes sure that it can compile; doesn't check
anything else yet"
Assembly,BBN-Q/pyqgl2,8ae22d8242a539dcdabf013285a8dd2e42451ab7,2016-04-14T15:56:46Z,911736e07dfafc594092684b941a3970f804d8c7/230259845f6dc59a50f7e77e1bd637e9d379906b/d4c5be0d5320963642cc958433f72f5a6bc68911/,2016-04-14 15:04:34-04:00/2016-05-02 14:35:33-04:00/2016-05-02 14:28:38-04:00/,"draft of native_eval

evaluates an expr in ""native Python"" environ.
This only makes sense if the expression is known to
be free of any QGL2 stubs, references to the QGL2
runtime, or causes non-local side effects.  We don't
check for any of this right now."
Assembly,BBN-Q/pyqgl2,456a4ce7b7e0878be4fdf342474c311523b63f3f,2016-06-22T18:51:51Z,dd692464df3a04560fe3a229a9e734dfb77b084c/ce8a436ec9dae4e45cbcb513b8ec4ceb7441e578/ea575afa1f01af217fa203ceb5fca085dbf555ff/,2016-06-24 10:26:18-04:00/2016-06-24 10:43:08-04:00/2016-06-23 17:12:22-04:00/,current untested code to handle barriers
Assembly,BBN-Q/pyqgl2,be7caa4cde15e70454c4293c30592b7591427b77,2016-04-13T22:11:45Z,604df34f56aec9719c476e98ac77a99a3544616b/,2016-07-28 10:57:23-04:00/,"fix decorators so they can be imported

the code we put in to ensure that they're never
executed blows up when imported by normal Python.
It's OK if we do something like replace the functions
with a tombstone, but we can't fail an assertion
or something like that."
Assembly,BBN-Q/pyqgl2,73d3663612c5127c1e6b036a9f40e86089645906,2016-09-29T20:36:27Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/ce4252b38c69a4d52eadbd4454de6c051c90be8d/5c12dd53a964fb5e4ea4bc1ef5110358b8bb404c/d5259010741db8ab055c5384c6bcba80eebfddd8/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/968345dae11e8dbf983c06dc26cd22c6cac38aa4/9589e07bf9bf4718438097274d9b66baedd3e222/baf708c6e624f8c1271336391ee2cda6bdc19fb5/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/39188a72c8a2484e3a13f5fb4c3eb65131889f29/232a7e379b0311f1d19d505b525193629a2598e3/39e3932cd90e5ef914db10f83a30b0dd04f434d2/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/93d8c6dce27f080dd70cdf27ca05d2545fa3a5ef/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2017-04-13 10:01:57-04:00/2019-06-12 13:42:45-04:00/2016-10-07 09:58:51-04:00/2019-06-18 19:55:45-04:00/2016-10-07 09:39:34-04:00/2016-10-12 10:11:57-04:00/2016-10-07 09:26:40-04:00/2019-06-11 14:59:37-04:00/2019-06-19 13:35:55-04:00/2019-06-12 16:34:55-04:00/2017-03-22 17:09:00-04:00/2016-10-12 10:18:52-04:00/2017-03-23 09:45:53-04:00/2019-08-15 15:50:55-04:00/2017-04-07 15:05:12-04:00/,Issue #78: remove sequence return annotation usage
Assembly,BBN-Q/pyqgl2,8dcac7bae4a4b3ac5f40f4245d8f3bfc8440c632,2016-07-22T13:49:27Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2017-04-07 15:05:12-04:00/,start cleaning up test files
Assembly,BBN-Q/pyqgl2,99174590189c3bb4480b5fb6f6e9c01f3b5e47bc,2017-04-07T01:52:58Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/88add230f0b5aab97676855a8556987f29f96464/032f0241eb969870a941956a7db8a17a86e76aa9/f6cccb6d914f39b609a4ffcf0031ca81da52f3c0/10ec37bc54b130fcc47c8f92e2d35bebd453b8fb/322c306829bd1123c4df21340342d534ac2a0762/c73b10dd90b67e1376274b13bc24008ae08b36ba/,2017-04-07 13:22:20-04:00/2019-06-11 13:49:21-04:00/2017-04-11 16:00:27-04:00/2017-04-07 14:25:11-04:00/2017-04-07 20:35:59-04:00/2019-06-24 13:23:10-04:00/2017-04-07 10:21:37-04:00/,"Replace QubitPlaceholder with QRegister.

Allows for several different valid constructor signatures, including:

a = QRegister(3) # creates a 3-qubit register
b = QRegister(""q4"", ""q5"") # creates a 2-qubit register containing ""q4"" and ""q5""
c = QRegister(a, b) # combines QRegisters into a larger ""concatenated"" register.

Not fully working because I need to expand calls to qgl2stub's on QRegisters
back into calls on the constituent Qubits."
Assembly,BBN-Q/pyqgl2,f50249dc82f3502d5234037fb5eb0fa22ed41ce7,2016-09-29T18:19:53Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/39305cd69ec192acd0d702be7874490c90e702f1/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/bca8536feff2be7b199139d76cc61a3668f864eb/530ff82ff7e2cbb7ad5a3262477407be7db0b186/cda56a922723f87a7a6d39af3a862553609f2927/,2017-03-23 14:06:24-04:00/2019-06-17 18:28:39-04:00/2019-06-19 13:35:55-04:00/2019-06-17 13:51:37-04:00/2017-04-11 11:41:47-04:00/2019-06-24 13:25:22-04:00/,enable calibration sequences
Assembly,BBN-Q/pyqgl2,d8accbb9ab7498018af7026cdfb5fcb6e0f7689c,2017-03-23T16:03:20Z,530ff82ff7e2cbb7ad5a3262477407be7db0b186/356749f00b05fc4ae7521f49c9f90680a38a452e/66ed22c49453a5aa49f7866faffbcb0efa22df35/17e96f5d2e64398881ad5427d3f1740d8c055a66/,2017-04-11 11:41:47-04:00/2017-04-11 16:53:22-04:00/2017-05-15 10:21:32-04:00/2017-03-27 15:53:23-04:00/,Fix CRMin.py
Assembly,BBN-Q/pyqgl2,6577998beb36fc49b99e50a9253d5e32226ef37c,2016-09-09T16:09:16Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/,2017-05-25 16:22:05-04:00/,Put a potentially expensive logger.debug call inside an isEnabledFor block
Assembly,BBN-Q/pyqgl2,376981202e56dab3c048c7d6877b21aef9cac7e8,2016-05-05T20:06:12Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/7ff7d4403f219798f183239d1e07df601baa9344/ef42a9b1125661d6997032a6199dae71ffaf7362/1fd84313e44d1e74d3ea86ee9885263719001685/b86d08ed8c4d1ff11f55f85d440625ec4278d5e0/73d3663612c5127c1e6b036a9f40e86089645906/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/aa810ac7ffb3239ca094256f1df59233fc12c6cd/2592a6e0d6f662ba969be6d416a7085870a5c113/5dbad6f0e840cf2dcde52a16c4d44cb067cc96e5/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/0527f57fb9d8fb427497f729f752f80e8ea41a6c/,2017-05-25 16:22:05-04:00/2019-09-26 12:06:38-04:00/2016-05-06 10:07:02-04:00/2017-03-22 16:13:42-04:00/2016-08-18 12:14:41-04:00/2019-06-11 13:50:19-04:00/2016-09-29 16:36:27-04:00/2017-03-23 09:45:53-04:00/2016-05-19 15:45:07-04:00/2016-05-13 09:57:15-04:00/2016-07-15 11:40:59-04:00/2017-04-07 15:05:12-04:00/2016-05-06 16:18:59-04:00/,"New qgl2_compile_to_hardware that calls c2h once per sequence, collecting the filenames. It also passes the new flag specifying to only add the slave trigger for the sequence whose qbit shares an AWG with the slaveTrigger (or add it to a random channel if none uses its AWG). Use this c2h not the qgl1 version. New test program in my multi.py. Quiet down debug printouts in single.py. With this, my simple multi qbit program seems to work."
Assembly,BBN-Q/pyqgl2,3b31a3ecf49fb20b15d38883465414f14336ce36,2016-05-02T22:42:48Z,99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-06 21:52:58-04:00/,"move is_qbit_create to its own function

this is useful in more places than only this class,
and does not depend on the class (but rather vice versa).

Eventually it should be moved to a utility module/class"
Assembly,BBN-Q/pyqgl2,2358e1d67873108382c3119d15ccf0d4f804990e,2016-05-12T02:42:21Z,ee8c1d0b16cae0fcac2f2a0214b9097666325280/9864616317c02db858472e4f861f282e054683ad/812b0053e882196346e61e4c68e48a68cbdbee89/7d91ee99c852dc019fbee029833348e067773324/a9d4236458a27cdb1f42b22e7d266ce0161d526d/be92b87f356331e38626a06ed71a3836560ef326/ba8eb39f23f8c7bf5f4dc5425d6596d56461859a/cf7820b16fd2d366ac7e784076b2b9a0dc93682f/ddbaf39ee4162f676ebf53b94da3e98c1181d857/,2016-10-06 17:06:14-04:00/2016-05-16 16:35:35-04:00/2016-05-12 23:15:01-04:00/2016-05-12 19:00:18-04:00/2016-05-12 08:40:00-04:00/2016-05-12 15:42:45-04:00/2016-05-25 18:33:48-04:00/2016-10-04 08:28:08-04:00/2016-05-13 06:43:26-04:00/,"basic for loop unrolling

does not detect ""Qrepeat"" loops properly.
this functionality was prototyped in concur_unroll,
but the heuristics for detecting ""simple iteration""
were too simplistic and therefore often incorrect.
(we'll add this back when it's correct)"
Assembly,BBN-Q/pyqgl2,f3cb640f9318ffc5e2710fb8bbae1198d60f7303,2016-02-16T21:42:47Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/bf7ee0fe3a688c3b16eba56fb937494f800c87a2/52a2fc3c4ab98f296bc9e39159ccbe45102d3dec/f03e760c0e294bee6e042ec3d5915ddd47faea7f/6284ef1095ecc8180b7f6ee11011e79bd83faef2/,2016-06-30 18:21:21-04:00/2016-04-14 15:05:02-04:00/2016-02-29 17:31:51-05:00/2016-02-17 14:29:09-05:00/2016-02-23 21:28:02-05:00/,"move the unrolling engine to its own class

this is useful for more than with/concur blocks"
Assembly,BBN-Q/pyqgl2,718a3d9a3a12e92ce382bd73a4048991b7aaf039,2016-05-25T22:37:16Z,cb975217c053138d4e6f20abc0f3cfc91dc8a1cc/36f8ad5bfeadb0f22c9b87998692d0de0b0c04ce/,2016-06-16 17:21:54-04:00/2016-09-12 11:02:42-04:00/,"don't use specialize any more

the specialization of functions is no longer
necessary, and the checking functionality will
be moved elsewhere (but has not been moved yet)"
Assembly,BBN-Q/pyqgl2,6c3376ed1d6b33ca98339b323c9da0799b35c978,2019-06-13T21:51:03Z,90cee6454d7911872816d8abb64c51311859ef0d/,2019-06-18 18:39:29-04:00/,fix up comments; compile to HW by default
Assembly,BBN-Q/pyqgl2,68a2c89dafa19dc73b7b221abfcde55245394383,2016-09-27T22:58:40Z,3bfe751db8d3c46463119be914a2cac7094da49d/cda56a922723f87a7a6d39af3a862553609f2927/,2016-09-29 14:53:30-04:00/2019-06-24 13:25:22-04:00/,move tanh to pulses; mark RabiWidth as working
Assembly,BBN-Q/pyqgl2,2a68ff3280ba3627a35c7d1741992a613a54c567,2016-03-31T17:50:20Z,f97498bbbbd8b136660e6736b322f47c777ff858/aa535546e640cdfe1597e29eeb4ab89a615277d3/3f2ea3d243268ee50c8dd32c1d313616815a625f/94250b99d38edd67798a85a10aa51289b898fa34/,2016-04-07 11:54:09-04:00/2016-04-07 14:37:50-04:00/2016-05-11 11:11:14-04:00/2016-04-07 12:27:11-04:00/,Add -o option to save compilation of Foo.py as Fooqgl1.py. Note this is only the qgl2main() that gets saved
Assembly,BBN-Q/pyqgl2,71a0dbb1d730f495266876b5aa16ba0587f0f8d4,2016-10-05T16:03:34Z,0ef68904abf9cbec8dab18502224194e82f87f14/,2017-03-22 16:36:36-04:00/,Split up expected sequence into single-qubit sequences.
Assembly,BBN-Q/pyqgl2,4e14e678595bfa7cca38e2f49d4d773a48f2bdd0,2016-01-26T20:20:28Z,dd9394c625a7c6c5138f3534431a34add267f79b/8b121b8a30185f2435a8309881941805d0987099/6819b64e042f26e35002cd1b0f795064fe676922/dc38648e7543d7e7a8772ee327cedd83445708c8/06e71427909def2dd8c70d48a69c852899a863d8/3b9f6ae7cf67708f5a36fbc4ca46f540c858744e/eedd04eea773ef0dd11d7db7c0d6d7e9af0bbb94/aad9ff28bb3c75b8e286222accc1bcc390e9e839/535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/714e04f946598a495c356c6904353b1e1bd48cb1/00c13d2072512aad3b07ab405fc933a25134cd0b/e07aa94fd1889401e09156364033d7f3156e7461/bcaafd1e4e5917cee2475f366c7b3d99e587b571/202d3e05c3af1c4c5c9e4072ae020d2e3b48c348/80492201f1eaa3661441f5cce01ab3985afb8dda/,2019-06-21 11:30:29-04:00/2016-02-16 11:51:39-05:00/2016-01-28 14:09:02-05:00/2016-02-26 13:44:02-05:00/2016-02-22 16:53:40-05:00/2016-01-28 14:12:45-05:00/2016-02-05 16:15:14-05:00/2016-02-17 10:42:18-05:00/2017-03-30 13:31:14-04:00/2016-02-26 13:57:01-05:00/2016-02-16 13:16:34-05:00/2016-02-24 14:44:13-05:00/2016-02-23 16:47:48-05:00/2016-02-16 11:31:01-05:00/2016-02-23 14:17:19-05:00/,"for unimplemented basic sequences, raise a recognizable NotImplementedError. In test_QGL2, catch the NotImplementedError and the AssertionError (about calilng qgl2decl directly) and in these cases, stick with the qgl1 version of the method. This lets the unit test work (sort of) before compilation or where the method is not yet implemented, so we can incrementally flesh this stuff out"
Assembly,BBN-Q/pyqgl2,b0dbde7afd20b58f045222929a9cd703af17c35b,2016-05-20T16:11:52Z,4c34db8fff6964b79936963d2841f795c74f856f/060ad79c1eaf5f4e2bbacb5f8af7316eb1ad7df4/5424cd50d267bd4628904a79bb4bad84fa5b6846/,2016-09-24 20:06:20-04:00/2017-03-23 17:05:09-04:00/2016-05-20 17:14:46-04:00/,"handling classical break/continue

still broken for quantum measurements, however."
Assembly,BBN-Q/pyqgl2,66ed22c49453a5aa49f7866faffbcb0efa22df35,2017-05-15T14:21:32Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/,2017-05-25 16:22:05-04:00/,Move Barrier to QGL1.
Assembly,BBN-Q/pyqgl2,530ff82ff7e2cbb7ad5a3262477407be7db0b186,2017-04-11T15:41:47Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/d1e05426b802ebe0ec2f0e2321f92e88a732ea1d/bb9c84bf80034d4ac76fffea84b64a0d363de97f/39305cd69ec192acd0d702be7874490c90e702f1/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/032f0241eb969870a941956a7db8a17a86e76aa9/bca8536feff2be7b199139d76cc61a3668f864eb/72c31b07579fa4e44a834190e914ab7be693f9c2/dced4de17ced5dda99cc709bf797364fd6c2d27e/cda56a922723f87a7a6d39af3a862553609f2927/,2017-04-13 10:01:57-04:00/2019-08-05 12:20:28-04:00/2019-06-17 13:47:18-04:00/2019-06-17 18:28:39-04:00/2019-06-19 13:35:55-04:00/2017-04-11 16:00:27-04:00/2019-06-17 13:51:37-04:00/2019-06-11 13:24:18-04:00/2017-04-11 16:42:52-04:00/2019-06-24 13:25:22-04:00/,Refactor multi-qubit basic sequences to use registers of width > 1.
Assembly,BBN-Q/pyqgl2,a909069892de1c660acff723571e2043632ec785,2016-06-22T22:17:09Z,07de565eb23a4063117818f44b0c1993800f5c30/96ba32c894075dee8727fb1565dc534a32235f6d/ad545e053dab391e567b59e2ba672b39b8a337c6/0b2de90291611a6282d22a52cadfb837a874f2d4/2546ec4677a6fbeb30d46476d4f9b17c29add300/1076516228cea52a79eae11ec5a1473127b9298a/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/35857b77e836a35e1c8b480cca366924db9a79ed/,2016-09-22 18:41:39-04:00/2016-07-07 18:10:24-04:00/2016-10-03 11:35:34-04:00/2016-06-27 18:40:13-04:00/2016-06-23 11:05:47-04:00/2016-06-27 21:22:46-04:00/2017-04-06 10:01:35-04:00/2016-06-30 18:49:45-04:00/,"prototype of AddSequential working; needs testing

this should add barriers everywhere necessary to
enforce sequentiality where the programmer requested it.
(also a few redundant barriers, to make things easier
to read)

There's a lot left to test, however.

The code to add barriers for the concur and infunc blocks
can be rolled up into this, so that we get rid of all of
the ""implicit"" barriers in the same pass and never have
to look at a version of the code that has a mix of explicit
and implicit barriers."
Assembly,BBN-Q/pyqgl2,013cb3bf12a78cf63f021e8e89f600829bc97852,2016-10-10T14:52:15Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/,2017-03-22 16:17:55-04:00/,"don't try to interpret filenames

Addresses issue:99

There was an attempt to interpret filenames as executable QGL2.
I'm not sure it was complete, but it added a lot of unnecessary
complexity."
Assembly,BBN-Q/pyqgl2,482e36e12eb50cd029a17af3d2518972859dd058,2016-06-10T13:18:56Z,a60feff81ad5c8a4bb1c3c3ec9132245ed35d9b1/,2016-06-24 16:28:50-04:00/,Use real qbit names (strip leading QBIT_)
Assembly,BBN-Q/pyqgl2,bfb4909d003907498efdc50306aa0872c0d4bc4b,2017-04-07T17:22:20Z,3ff029724ed8b2f026b1fb81ac3b7e3290ba07e1/19f090f0b17ed60b9195793f183eae5fd7b73a2b/37c5ee691d7cee1490d038bb881f688d4b866a8c/10ec37bc54b130fcc47c8f92e2d35bebd453b8fb/f6cccb6d914f39b609a4ffcf0031ca81da52f3c0/3391175511edfe746a3f461b105a99798d3e1916/4a2a0aa6fef753bc8451d0f0d0293bed7fbd3ec7/,2017-04-07 15:57:07-04:00/2017-04-13 16:03:24-04:00/2017-04-10 11:24:40-04:00/2017-04-07 20:35:59-04:00/2017-04-07 14:25:11-04:00/2017-04-07 16:21:14-04:00/2017-04-12 11:00:58-04:00/,"Modify SequenceExtractor to expand QRegisters.

Will properly emit code operating on QRegisters without indexing, i.e.
    X90(qr)
will work, but
    X90(qr[1])
will not."
Assembly,BBN-Q/pyqgl2,006af8155a47e7e9de5da5ef124a3e82479c07e7,2016-04-01T17:21:39Z,6848fc22a83b00082c9e0e1895e6463c8a90c033/,2016-09-16 10:47:56-04:00/,"make a copy of the preserved call for the inliner

we want to make sure that the call isn't clobbered by
some later pass through the code, so we make a copy of
it.  This copy might be unnecessary, but better safe
than sorry (at least, until we run out of memory)"
Assembly,BBN-Q/pyqgl2,a37e616fcb0824ece4c02772f2a271b9aa080947,2016-10-24T19:01:56Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/27f82084b3176663baa8375a9d5bc013479f51be/04786fcbd27db36af9ab5760e9b90ae18958fe74/032f0241eb969870a941956a7db8a17a86e76aa9/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-13 10:01:57-04:00/2017-03-29 11:21:06-04:00/2017-03-22 17:32:06-04:00/2017-04-11 16:00:27-04:00/2017-04-07 15:05:12-04:00/2017-03-22 16:13:42-04:00/,Add QFT test.
Assembly,BBN-Q/pyqgl2,dbc6d8089474ba45b53c33dc517863b7ffb2786f,2015-10-12T16:32:43Z,2ac21c47f37e72605037fc66f90c079e05335ee7/c1ca2f051f40ec7f16a6c338ecf33f30a4e18af4/cd7cd07036892418f0406c5a0f6cb312fe835a19/,2015-10-16 10:21:58-04:00/2016-04-06 16:30:50-04:00/2015-10-14 13:34:53-04:00/,port print stmnts to python3 exprs
Assembly,BBN-Q/pyqgl2,fe23589da046428c73d2d75aa0673efb81a8f475,2015-12-02T23:23:10Z,7b46f7dbe5ff212d1683cf68bc7a516a0b924da3/bb3608b6d7638f22ade047baf404c589784d3d76/39891a454c1e80f642b9f860eaf2a2ebed014977/0e1a0c5bbe1e832b4ac3586eb15f221a4c80abdc/ddac889c64f980519b1938899c0f149b26a20494/f782658e06b511bc2ad181bf2e03456a03cc0625/2b109095e098683dbeb6c22d0c8d65428f2eb31a/8ab6a5da55ee8728b1add116b6cd613e0d7ea719/c61a8629542da409076c68d2b27bd2d6783a7d0f/1211bbefce3f770fe77fe78fd7a72297a9d123a9/65fa5a9942c61ca2b32d92d9e6f48f4e70cd8ff6/362b36d9e9f9d57a6e63552b78b5524049c52b13/d2097d286109e4e81b1706aef116ca7d8406d37a/,2015-12-15 16:38:36-05:00/2015-12-08 13:03:21-05:00/2015-12-07 19:23:24-05:00/2015-12-03 19:37:08-05:00/2015-12-03 12:23:25-05:00/2016-02-26 16:24:40-05:00/2015-12-03 14:07:55-05:00/2015-12-03 18:15:18-05:00/2015-12-07 17:16:28-05:00/2015-12-08 12:45:37-05:00/2016-08-18 18:47:48-04:00/2016-08-18 17:25:25-04:00/2015-12-03 17:28:30-05:00/,"add inliner for nested statements

Doesn't correctly recurse into sub-statements yet"
Assembly,BBN-Q/pyqgl2,1625d995d8c24a2e68b372cc03a3fe939e00a4de,2016-04-04T23:59:13Z,d3378ba814f5634ebabe9724cf0c5fd380f31e7c/7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/,2016-05-26 16:06:58-04:00/2016-04-08 13:19:09-04:00/,"clean up creation of injected Wait/Sync calls

we find Wait/Sync from the current namespace, rather
than injecting the stub information explicitly if it's
not known.  We could add this for the user (and we
might change our minds and decide to do this later)
but for now we consider it an error if they haven't
imported the proper definitions or stubs"
Assembly,BBN-Q/pyqgl2,19f090f0b17ed60b9195793f183eae5fd7b73a2b,2017-04-13T20:03:24Z,bb9c84bf80034d4ac76fffea84b64a0d363de97f/66ed22c49453a5aa49f7866faffbcb0efa22df35/d3ead6d832e550ea71511f6814a626e3648ddf3a/8f26f6e138c3b4483c3719a37cd5bdff2335cda0/2e89a9d65c25c114e3461b4d561f416a32ca558d/bca8536feff2be7b199139d76cc61a3668f864eb/cda56a922723f87a7a6d39af3a862553609f2927/,2019-06-17 13:47:18-04:00/2017-05-15 10:21:32-04:00/2019-01-17 15:50:43-05:00/2019-01-17 15:52:52-05:00/2019-06-11 13:51:27-04:00/2019-06-17 13:51:37-04:00/2019-06-24 13:25:22-04:00/,Choose argumnet expansion rule using return type annotation.
Assembly,BBN-Q/pyqgl2,f06a4bb7e76c0d249011af452a02e292465362de,2017-03-30T16:43:29Z,e606db6fa368ffea7720e17ede71bcf19b1c27d9/c91f259ee0759e5bdac3eb2d96327667006f284d/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2019-08-16 14:23:27-04:00/2019-07-16 12:44:12-04:00/2017-04-06 21:52:58-04:00/,"Expand what NameRedirector can replace to include simple iterables.

i.e. if we have
q_tmp = QubitFactory(""q1"")
foo = (q_tmp,)
create_cal_seqs(foo, 2)

we will now re-write the first argument of create_cal_seqs to (QBIT_q1,)."
Assembly,BBN-Q/pyqgl2,0d5953cfae64c729ecac1086ff403495241503d9,2016-04-07T18:40:32Z,3b31a3ecf49fb20b15d38883465414f14336ce36/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-05-02 18:42:48-04:00/2017-04-06 21:52:58-04:00/,remove obsolete diags; change others to warning_msg
Assembly,BBN-Q/pyqgl2,b3bff13f83081af9987d1d91ce1ba2df96836a9c,2016-10-05T14:03:50Z,69637b7eae113a830fa13c067714ceef1283f19c/39e3932cd90e5ef914db10f83a30b0dd04f434d2/de08d6b7a6c50a16115fd77999eb35612693c630/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2019-10-02 13:57:45-04:00/2016-10-12 10:18:52-04:00/2016-10-05 11:44:54-04:00/2017-04-07 15:05:12-04:00/,"Issue #65. Make doCPMG read real qubit length. This does not yet work. Added debug printouts, to be removed when this works."
Assembly,BBN-Q/pyqgl2,dd9ef22f7ff485f29905d659d3af6de44b3a437d,2016-01-21T20:09:38Z,fea2cfd0d3a388a517db3307734738f1dd5dcbde/80c66a55cd4a1fd64afdaa72dea2ab42b2fe5c80/,2016-03-01 17:18:48-05:00/2016-04-01 09:13:59-04:00/,"deal with *args and **kwargs in inlined functions

right now, ""dealing with them"" means ""not doing anything
with them"".  For the cases where we actually can construct
the *args and *kwargs, however, we could do something
smarter.  Unfortunately there's no mechanism for this yet."
Assembly,BBN-Q/pyqgl2,232fe6aa404c73b84b9a8efe3daa8be0227869b2,2017-04-07T21:09:27Z,37c5ee691d7cee1490d038bb881f688d4b866a8c/10ec37bc54b130fcc47c8f92e2d35bebd453b8fb/dced4de17ced5dda99cc709bf797364fd6c2d27e/,2017-04-10 11:24:40-04:00/2017-04-07 20:35:59-04:00/2017-04-11 16:42:52-04:00/,"Introduce some uses of broadcasted gates on QRegisters.

Modified the order of some test outputs for convenience."
Assembly,BBN-Q/pyqgl2,21bfcc5d5adf36c0a809ed7c897d83afb3c99d6a,2016-02-16T21:43:24Z,5204ecd0473c66ee812039244ace1e5a35cb22b7/b24538119fd6d1243f08b19ab30a159522b8abe9/,2016-06-30 18:32:06-04:00/2016-02-26 16:25:29-05:00/,replace concur unroller with generic unroller
Assembly,BBN-Q/pyqgl2,250fae91ec783c6cb52121e595e9d74e651a90bf,2016-05-18T18:49:13Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/013cb3bf12a78cf63f021e8e89f600829bc97852/,2017-03-22 16:17:55-04:00/2017-04-06 10:01:35-04:00/2016-10-10 10:52:15-04:00/,"use the new preamble, not the list of assignments

instead of the list all all the variable assignments,
use the preamble to pull in a table with the relevant
variables and their values"
Assembly,BBN-Q/pyqgl2,32ecb54cab0aa6684473b1c0a6e04a3aef839a73,2016-06-30T17:13:46Z,d846317069ec3cfec09975c8ddf7408030ff3baa/a22ef357d24769a3f6913c0ab97967d80a4fb315/2a5d9eda26de6714a4d38bce019b60933aa91f28/,2016-06-30 15:13:56-04:00/2016-09-23 15:53:12-04:00/2016-06-30 17:27:07-04:00/,add convenience function; add module scope
Assembly,BBN-Q/pyqgl2,b6e5b37ed95a2b3fc693b6efeccd6522c938ff6d,2015-11-24T18:04:27Z,7748910e5e76d718722d7db3b5f906b36e621345/9219cc02cd83026c424fd5360a49dce092eaf262/7e7d8f8b9ce5b14d3398abab60a816f7103c2244/41fd039f3c723e999d10bc3f1d5626242bd335d7/,2016-02-29 19:01:34-05:00/2015-12-15 16:36:50-05:00/2016-01-28 12:19:07-05:00/2015-12-03 18:12:44-05:00/,"record last msg at each log level

these will be used to access the output
for unit tests, i.e. if a test is supposed
to generate an error message, this makes it
easy to check that the error message is
generated correctly

right now we only record the most recent
message at each level, but we could record
a longer history (or everything)"
Assembly,BBN-Q/pyqgl2,b818c774957b78c3b3c443563225eace003c5bd7,2016-10-05T15:13:17Z,99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-06 21:52:58-04:00/,"use QubitFactory instead of Qubit

this uses the ChannelLibrary, instead of always
using the defaults"
Assembly,BBN-Q/pyqgl2,5d16ee8a0f754181d063f06108b567dc9573d88a,2016-01-25T18:14:19Z,960ebc53027973267019fee3066a9bd20750b220/c4400a5c4f42c5c6c4f5b766a2c2bd871e42cb76/,2016-02-04 16:21:42-05:00/2016-02-08 17:15:20-05:00/,handle relative imports of directories
Assembly,BBN-Q/pyqgl2,68247976460954f47703e527a9244408e4184694,2015-10-19T19:56:07Z,57699994fc8284b9f07054bd8a6f4c8e2379b4ac/988bc84f6002f49aa56b8fef77c44d3f4cbe476d/be86b0afcd96d12ba190ba091158877f3f817ca3/be7caa4cde15e70454c4293c30592b7591427b77/,2017-04-11 15:23:04-04:00/2015-12-02 18:24:47-05:00/2015-11-13 10:12:58-05:00/2016-04-13 18:11:45-04:00/,"updated names per discussion last week

these might change again; see pyqgl.lang"
Assembly,BBN-Q/pyqgl2,4a49eae565db99bcbb7c5ad6dfe5b070c6156c17,2015-10-07T21:46:28Z,b5683f14edb5b1221634eea1b59ec2c893e9a5ee/7ef047cf8ba2c04ab03fb8262eb1337a57e04bcd/a88e93486f7f38084ee198ff864ad043cd39023f/1db148f56dd9c107b0c4e6c670fc4ca07a15f477/26d13df5143ec8d7adf205b6a1871be4e9962120/3c99f4af70fffe2f5f8413c249c2de9a8d9cef43/453b25fb17c17e7d3f04390a1d7bfab3bc4efca0/4dea0b5e8cb550ffbe09d9e960cdfcaa5b96160f/b6e5b37ed95a2b3fc693b6efeccd6522c938ff6d/,2015-10-20 14:25:41-04:00/2015-11-10 14:01:12-05:00/2016-07-01 11:15:17-04:00/2015-11-10 10:12:32-05:00/2016-01-28 12:33:06-05:00/2016-07-01 11:11:51-04:00/2016-05-29 21:10:28-04:00/2015-11-09 22:23:52-05:00/2015-11-24 13:04:27-05:00/,"extensions to ast.NodeVisitor, NodeTransformer

add meaningful diagnostic/warning/error messages"
Assembly,BBN-Q/pyqgl2,aa26adf868fff3486042cdb63d1c37a45ca8ac27,2016-04-08T20:58:22Z,c2886289544e8a30088c0cc11caf8fc6f4203953/,2016-05-04 10:30:21-04:00/,"comment out unnecessary prints; fix diag for range

if the range value isn't an integer, we don't attempt
to do anything with it.  We should probably fail, but
there's a possibility we can handle it later"
Assembly,BBN-Q/pyqgl2,f03e760c0e294bee6e042ec3d5915ddd47faea7f,2016-02-17T19:29:09Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/52a2fc3c4ab98f296bc9e39159ccbe45102d3dec/6284ef1095ecc8180b7f6ee11011e79bd83faef2/,2016-06-30 18:21:21-04:00/2016-02-29 17:31:51-05:00/2016-02-23 21:28:02-05:00/,"handle more cases with nested bodies

if a nested statement can be unrolled, then do so even
if its outer ancestors cannot be.  Also be more careful
about checking whether a loop can be unrolled (by
examining the list over which it iterates)"
Assembly,BBN-Q/pyqgl2,d3378ba814f5634ebabe9724cf0c5fd380f31e7c,2016-05-26T20:06:58Z,9ade3a7c693ad77c43f5aa23278accef63ff6971/1fd84313e44d1e74d3ea86ee9885263719001685/b8cfa4a08503d7736630005f6bdd02ff6988feb6/e430d3d21e6d57b56d2089aadc697c5c6e3df131/ce8a436ec9dae4e45cbcb513b8ec4ceb7441e578/5ac645d651444613745ca65e3c3473324a1a4b41/,2016-06-24 10:48:34-04:00/2016-08-18 12:14:41-04:00/2016-05-27 09:13:20-04:00/2016-06-03 14:06:34-04:00/2016-06-24 10:43:08-04:00/2017-03-31 10:35:54-04:00/,concur blocks now start and end with Barrier() instead of using sync and wait. Code to replace waits is now code to replace barrier messages
Assembly,BBN-Q/pyqgl2,7424e5d489e10e4e48ec5aab8fe7e965d8f388a7,2016-04-08T17:19:09Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/d3378ba814f5634ebabe9724cf0c5fd380f31e7c/c71c4573938072e9fd43c073be9f87bfc3a16650/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/2ff5de43d404191b542cdb3a1e9a768bfd0d34bd/a60feff81ad5c8a4bb1c3c3ec9132245ed35d9b1/,2016-06-30 18:21:21-04:00/2016-05-26 16:06:58-04:00/2016-05-06 16:20:27-04:00/2017-04-05 17:07:07-04:00/2016-04-14 19:22:24-04:00/2016-06-24 16:28:50-04:00/,"use new idiom for parsing simple exprs

use ast_util.expr2ast instead of using ast.parse directly"
Assembly,BBN-Q/pyqgl2,0bbe80a220c1121687475914e061ead01f6a8e0c,2016-03-11T13:47:19Z,7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/,2016-04-08 13:19:09-04:00/,fix text of Return and LoadRepeat
Assembly,BBN-Q/pyqgl2,a661828fd4fec56a8c62418c841267239f584bd3,2016-05-19T18:09:38Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/c0c19b3177f13755d7e2cc341a5bd5a901bb051b/5cdb43a5023f0831d69fe58459bf81d5e81c23de/6c9e4ef845ad4c297d46b9196fe714f752a8781f/17e96f5d2e64398881ad5427d3f1740d8c055a66/,2017-04-13 10:01:57-04:00/2016-09-23 16:07:38-04:00/2016-09-23 12:00:52-04:00/2016-09-22 18:44:29-04:00/2017-03-27 15:53:23-04:00/,"move init() to its own file

this breaks circular dependencies between qgl2 and qgl1"
Assembly,BBN-Q/pyqgl2,7edb7b396cef97ed9f41affcf41bcc1e396e4015,2018-10-09T17:36:04Z,8f26f6e138c3b4483c3719a37cd5bdff2335cda0/d652682248d68ed17e06249858a0d071bef60461/,2019-01-17 15:52:52-05:00/2019-06-11 14:57:47-04:00/,update name of channel library
Assembly,BBN-Q/pyqgl2,8fef60223a508b19c549dd1d2938e5a7486b3878,2016-03-17T17:44:27Z,62409cd6269ea8644472010e2a7636ff556b76d7/968345dae11e8dbf983c06dc26cd22c6cac38aa4/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2016-09-27 19:02:19-04:00/2016-10-12 10:11:57-04:00/2016-03-25 16:12:15-04:00/,Fix return from things like IdId annotion to show it is a sequence. Comment out return from compileAndPlot; cannot inline something with a return. Cleanup.
Assembly,BBN-Q/pyqgl2,ddcac9f4b6462353e220d31122be6894d5977b8d,2016-04-05T00:01:53Z,26e5f34431e1cb9719436e9bd96101df6c7eaa00/,2016-05-13 14:55:26-04:00/,"misspelled qgl2.qgl1; error not detected

We don't complain enough about missing imports..."
Assembly,BBN-Q/pyqgl2,72b30f4db8b1393528baff040a9b0646eb114c18,2016-03-17T22:20:44Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/f40d398390b0998ec36c58ba1b2fdf70e1df2e07/,2016-06-30 18:21:21-04:00/2016-06-13 19:30:38-04:00/,"annotate seq block with location information

this needs review because if I missed this in one case,
I probably missed it in others"
Assembly,BBN-Q/pyqgl2,e07aa94fd1889401e09156364033d7f3156e7461,2016-02-24T19:44:13Z,03077bcf6b8ee1f962d0b8a881384b9b16b65fef/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/4cf47b421ad55b4f420741d0e56c7a850d2b728f/809241af26d59ed76e81fb5c908ff2e7e262c84e/ccb54dbe588819f0c6c5acef356b351ad09489ee/718fd84e435f86a42c970389e82b7699260aed36/a89acfe5108e89bb8efa763dbbdc387000b47d80/cda56a922723f87a7a6d39af3a862553609f2927/,2016-09-12 16:39:30-04:00/2016-09-07 16:05:57-04:00/2016-02-26 13:43:46-05:00/2016-05-12 19:41:16-04:00/2016-02-25 13:54:02-05:00/2019-08-15 15:53:57-04:00/2016-03-25 16:12:15-04:00/2019-06-24 13:25:22-04:00/,initial versions of the Rabi functions
Assembly,BBN-Q/pyqgl2,c7497df9f519ff1b808cbc2bafae21752051fe1f,2016-09-15T21:13:03Z,2c565e27b101cc1f6e4548996b1cd78e841e997b/,2016-09-15 17:34:26-04:00/,"removed old code; move to new call checker

build a vector of checks and invoke a single checker
rather than have one per annotated formal parameter"
Assembly,BBN-Q/pyqgl2,0522bce54a848d15881dcf6848e9c3fdfbbbf9ac,2015-10-14T22:10:45Z,a4b19dc9ec7008b01891e777d88e2cec9abefe67/366567b4d725acd0c00d4b51db25449519d70673/,2015-11-05 16:58:18-05:00/2015-10-15 13:39:02-04:00/,cleaned up some diagnostic prints
Assembly,BBN-Q/pyqgl2,69c651c52ee37938817d9307ffcd25a9914f7454,2016-05-13T18:33:48Z,837972554d9869e97702a0d91b32af83f4c4b888/,2016-05-17 18:08:25-04:00/,"NameRedirector: replaces symbols with table lookup

doesn't attempt to short-cut simple values yet"
Assembly,BBN-Q/pyqgl2,800348874f8ff7df95d9cac7aab21fc8e794ad9e,2016-04-13T22:08:26Z,8cb75c6563199fb636afd4483d50c9ec873797b0/28a519b4f9985b4dfd7d332029d81bb7f3248eb3/,2016-04-13 18:23:18-04:00/2016-09-14 18:22:26-04:00/,"move import_native into NameSpace class

begin fixing the issues related to importing natively
in parallel with importing as QGL2.  Still a lot of
rough edges, including handling relative imports in
a graceful way.  (We might decide that it's OK to just
punt on this for now, since where we use them right now
are places where it doesn't matter--it only matters if
we use them in actual ""QGL2"" code)"
Assembly,BBN-Q/pyqgl2,5cc6a5af0f25c13df7f2f5281cdee1c2d2fad080,2016-04-04T23:57:46Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/,2017-03-22 16:17:55-04:00/,"remove importer from SynchronizeBlocks

this parameter is no longer used (should have been removed
in an earlier commit)"
Assembly,BBN-Q/pyqgl2,d465584177b0261ff6d42152c55b257ac7bb8f19,2016-09-24T18:34:52Z,bca8536feff2be7b199139d76cc61a3668f864eb/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/530ff82ff7e2cbb7ad5a3262477407be7db0b186/,2019-06-17 13:51:37-04:00/2017-04-07 15:05:12-04:00/2017-03-23 12:03:20-04:00/2017-04-11 11:41:47-04:00/,"def measConcurrently here, rather than importing

the file we were importing from contains QGL imports"
Assembly,BBN-Q/pyqgl2,395e39cbef7ae90119157b3b0065cb4d2095ebbc,2016-02-24T16:17:45Z,7dfd483ce04c8a50399506273e659c0da1e95edd/,2016-09-19 15:33:17-04:00/,"fix some sloppy error handling in imports

1. print something useful if an imported file cannot be
    accessed for some reason (i.e. permissions)

2. don't make assumptions about where the system files
    are located; use is_system_file to test whether a file
    is or isn't a system file"
Assembly,BBN-Q/pyqgl2,491977725804cd0e8aced74dd8cd46f672229ef4,2016-10-03T20:26:49Z,61ddfc7d0ff3f986ee0214c8bc407a56cc378ce7/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-10-03 16:53:14-04:00/2017-04-06 21:52:58-04:00/,"add check for qbit_list

the qbit list type is not completely implemented,
but this provides enough functionality to start to
play with it"
Assembly,BBN-Q/pyqgl2,5204ecd0473c66ee812039244ace1e5a35cb22b7,2016-06-30T22:32:06Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-07 13:22:20-04:00/2017-04-06 21:52:58-04:00/,"move find_all_channels to find_channels

remove/rewrite references to concur_unroll"
Assembly,BBN-Q/pyqgl2,faed54ad9b90e3ad6ef9a772754cfc4335cc12bb,2016-02-29T14:10:30Z,615352f7b26ba981e27b58c382d9565184fccadd/853d88257383734c38522454933a77f3bf15510c/,2016-03-17 13:40:17-04:00/2016-03-01 12:59:34-05:00/,switch to the 'real' AllXY for qgl2
Assembly,BBN-Q/pyqgl2,9533a1d056ad635c8419957ea33b36ee1acda87c,2015-11-13T15:20:37Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,examples for the current preprocessor
Assembly,BBN-Q/pyqgl2,1d7caae5a1909e00e7d63c4125133d2a028faa8f,2016-07-12T14:50:39Z,70f0c0eaf36135fa53a2724dffd1958cfe243672/,2016-07-12 17:01:34-04:00/,add comments on what is expected from test cases
Assembly,BBN-Q/pyqgl2,bcf6928ae5052ee76a07e47399c7c083f8e530b1,2016-01-26T19:22:39Z,bcaafd1e4e5917cee2475f366c7b3d99e587b571/d5259010741db8ab055c5384c6bcba80eebfddd8/6819b64e042f26e35002cd1b0f795064fe676922/853d88257383734c38522454933a77f3bf15510c/2b1458eb04bb1aba1e1ffad24355ab5fa71888bc/dc38648e7543d7e7a8772ee327cedd83445708c8/06e71427909def2dd8c70d48a69c852899a863d8/39188a72c8a2484e3a13f5fb4c3eb65131889f29/8f1c86075cd1d0646742c33010f523380b020bf2/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/4cf47b421ad55b4f420741d0e56c7a850d2b728f/93e91f3cb853321899340850a241a5c237f40b31/e07aa94fd1889401e09156364033d7f3156e7461/097152c1727891087469a1405a895e142c4ab6c8/1cfbe6a5f9fe6597899e0654141da646ff601b2e/80492201f1eaa3661441f5cce01ab3985afb8dda/,2016-02-23 16:47:48-05:00/2019-06-18 19:55:45-04:00/2016-01-28 14:09:02-05:00/2016-03-01 12:59:34-05:00/2019-06-12 16:31:27-04:00/2016-02-26 13:44:02-05:00/2016-02-22 16:53:40-05:00/2019-06-12 16:34:55-04:00/2016-02-19 14:55:37-05:00/2016-09-07 16:05:57-04:00/2016-02-26 13:43:46-05:00/2017-02-16 14:56:23-05:00/2016-02-24 14:44:13-05:00/2016-01-27 08:44:58-05:00/2016-02-18 16:00:04-05:00/2016-02-23 14:17:19-05:00/,"decorate and annotate basic sequences for qgl2, and import those functions/tags"
Assembly,BBN-Q/pyqgl2,5753af8170f4f2558ed4e905a420cb62ec060f15,2016-02-26T18:57:23Z,11ba6a179809a327c5b096d5e35c05853fa19b96/,2016-05-13 14:56:02-04:00/,export init
Assembly,BBN-Q/pyqgl2,d1a77b24ebeeffa7f5470bd041b84a470ba3ac3a,2015-12-08T21:42:39Z,065efcd80a6c65a9b814c178446eb65adfe0510c/,2016-06-30 17:29:47-04:00/,add inlined functions to the namespace
Assembly,BBN-Q/pyqgl2,a0c25933ca0172f52e0a7ac07dc4a7065f81b1de,2016-05-26T22:39:32Z,467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2016-09-15 13:53:59-04:00/,save the output of the evaluator/rebinder
Assembly,BBN-Q/pyqgl2,ab2543752e96fb9cbdb18f181a03aa5f5e3305b0,2016-02-25T16:22:07Z,718a3d9a3a12e92ce382bd73a4048991b7aaf039/b24538119fd6d1243f08b19ab30a159522b8abe9/cb975217c053138d4e6f20abc0f3cfc91dc8a1cc/,2016-05-25 18:37:16-04:00/2016-02-26 16:25:29-05:00/2016-06-16 17:21:54-04:00/,"add a second substituter pass after unrolling

we're not actually planning to do more substitution
in the second pass (although it is possible), but we
use the type-checking mechanism built into the substituter:
the second substituter pass can check things that aren't
checked prior to unrolling/expansion.  For example:

	a = Qbit(1)
	for q in [ a ]:
	    for x in [ X90 ]:
		x(q)

The preprocessor isn't clever enough to analyze x(q), but after
these loops are unrolled and this becomes ""X90(QBIT_1)"", the
preprocessor can check the signature of X90 against the actual
parameters, and see whether they match"
Assembly,BBN-Q/pyqgl2,3bde1cac6163d90287d2bef2d0ca551c8d544488,2016-05-06T20:18:18Z,33067f585ad40ad342a80c3ddb2eadecf750346b/232fe6aa404c73b84b9a8efe3daa8be0227869b2/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/73d3663612c5127c1e6b036a9f40e86089645906/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2016-07-25 14:30:35-04:00/2017-04-07 17:09:27-04:00/2017-03-23 09:45:53-04:00/2016-09-29 16:36:27-04:00/2017-04-07 15:05:12-04:00/,add more multi qbit test programs
Assembly,BBN-Q/pyqgl2,5b0316f4a59eac571e590a95fefafa014d7b3f02,2016-06-01T23:30:33Z,dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/,2017-04-05 17:07:07-04:00/2016-06-23 18:00:39-04:00/,"fix typo in qrepeat ; invoke qrepeat flattener

the output has not been reviewed and it's complex enough
to deserve very careful checking"
Assembly,BBN-Q/pyqgl2,d2097d286109e4e81b1706aef116ca7d8406d37a,2015-12-03T22:28:30Z,2ae99b8615b5956acd5b58480da47dc57587d875/c61a8629542da409076c68d2b27bd2d6783a7d0f/8ab6a5da55ee8728b1add116b6cd613e0d7ea719/89ce070f145292b0276f72ccf8cf9fbe7cb59ba5/,2015-12-04 15:02:46-05:00/2015-12-07 17:16:28-05:00/2015-12-03 18:15:18-05:00/2016-10-11 12:16:13-04:00/,"basic constant propogation

needs testing, and also debugging messages to tell users
when they're probably doing something they didn't intend
to do.  There are a lot of ways to shoot yourself in the
foot with redeclaration of names."
Assembly,BBN-Q/pyqgl2,8c8062e62bfdc6ef728d8128e44fef382daa3cb6,2016-09-29T20:14:26Z,90c81c363a73d170b2e5f84abbd305dd3434d50b/e996b57229624dbbec6191cc5e73c17569e9597a/032f0241eb969870a941956a7db8a17a86e76aa9/,2016-10-05 12:00:10-04:00/2016-10-04 14:46:34-04:00/2017-04-11 16:00:27-04:00/,Attempt to fix qbit_list top-level args.
Assembly,BBN-Q/pyqgl2,8bb27d5f14b9bfb195eb004ed6e6ab9dfe7f2a21,2016-01-29T19:39:21Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/b23cc2a0f8812536b6ffbfcaf0d8bc4014a01e47/d76040ae3c0c26e56a9f49cebfc6556034b8c5dd/9229e97de194c663a44b3870e30d65f052bc1027/0b7edf6eef0f2928317789d11f6d318d1a1a07dc/,2016-06-30 18:21:21-04:00/2016-01-29 14:54:34-05:00/2016-02-18 11:29:13-05:00/2016-01-29 17:14:04-05:00/2016-02-12 09:53:55-05:00/,"basic functionality for 1-var/1-level loops

the code for tuples is untested; unlikely to work"
Assembly,BBN-Q/pyqgl2,cb52749fbdf212d4a6d996d954ac11631c351033,2016-02-26T22:00:11Z,2e6ce391646c6a0ee41c0b9591c21d330fcfb5e9/5f42bc28867d93359a63a480da3904dfd7d33bb9/94250b99d38edd67798a85a10aa51289b898fa34/8c26dc6db09a579c467d38169013f358e6a78927/0f3fe4d4f8f2f8d1230feecb85c8c9244d9a5a20/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2016-08-31 16:43:09-04:00/2016-09-07 10:31:30-04:00/2016-04-07 12:27:11-04:00/2016-04-13 18:10:24-04:00/2016-03-01 17:14:02-05:00/2017-04-06 10:01:35-04:00/2016-03-25 16:12:15-04:00/,"move error checking into the expansion loop

if we don't do error checking after each expansion,
we might expand a piece of incorrectly-typed code and
lose the opportunity to detect the error and/or
print a useful diagnostic.  This is particularly true
if we have some functions that aren't completely typed."
Assembly,BBN-Q/pyqgl2,a89acfe5108e89bb8efa763dbbdc387000b47d80,2016-03-25T20:12:15Z,013cb3bf12a78cf63f021e8e89f600829bc97852/2a68ff3280ba3627a35c7d1741992a613a54c567/b86d08ed8c4d1ff11f55f85d440625ec4278d5e0/036d64348b517226421a6f352e7890d051cec0bb/945ca6dfa3c86170146275b8b8374421eed44996/fb4bee82a00e664668fbdfd3e3f69576d8e397c2/ce51c3da3e5924e22bbbe958258a7042f1cf7a51/62409cd6269ea8644472010e2a7636ff556b76d7/93d8c6dce27f080dd70cdf27ca05d2545fa3a5ef/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/f97498bbbbd8b136660e6736b322f47c777ff858/e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/82df4b7c87b138637bc316e247548dead8866b61/48f241e225aefb0576662297ea290f68b0c9fb00/20dedec964618edd7efd65e1f5180555a0a0bda9/73d3663612c5127c1e6b036a9f40e86089645906/ce4252b38c69a4d52eadbd4454de6c051c90be8d/5f42bc28867d93359a63a480da3904dfd7d33bb9/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/2592a6e0d6f662ba969be6d416a7085870a5c113/479ff3b17446485d0c5e518a9c0bbbb3593848c3/,2016-10-10 10:52:15-04:00/2016-03-31 13:50:20-04:00/2019-06-11 13:50:19-04:00/2016-03-28 15:23:40-04:00/2016-04-11 10:33:06-04:00/2016-03-28 16:37:41-04:00/2019-06-25 15:48:25-04:00/2016-09-27 19:02:19-04:00/2019-08-15 15:50:55-04:00/2017-04-06 10:01:35-04:00/2016-04-07 11:54:09-04:00/2017-04-12 11:00:41-04:00/2016-04-28 09:30:07-04:00/2016-04-20 13:35:26-04:00/2016-03-28 15:24:45-04:00/2016-09-29 16:36:27-04:00/2019-06-12 13:42:45-04:00/2016-09-07 10:31:30-04:00/2016-05-13 14:58:56-04:00/2016-05-13 09:57:15-04:00/2016-04-11 11:18:58-04:00/,"* Note in restrictions state of things
* pyqgl2/main: make it when run directly try to run the result as QGL1, take options to pass to compile_to_hardware et al
* AllXY: create a new doAllXY() that is what we want to pass to the new pyqgl2.main
* clean up basic_sequences to use Qubit() not Qbit(). Haven't reworked these for new model of how to make things runnable
* get rid of GATHER_SEQUENCES
* compileAndPlot is no longer a qgl2 function
* compile_to_hardware no longer has/needs a stub"
Assembly,BBN-Q/pyqgl2,99aa4a127b3cf94737f8e806e30e0873d3d093ad,2016-05-03T23:29:24Z,81266a663f1a63f06470ee23530ed76aaff0b4fe/a9d4236458a27cdb1f42b22e7d266ce0161d526d/2358e1d67873108382c3119d15ccf0d4f804990e/9864616317c02db858472e4f861f282e054683ad/,2016-05-04 10:31:18-04:00/2016-05-12 08:40:00-04:00/2016-05-11 22:42:21-04:00/2016-05-16 16:35:35-04:00/,"improve the way the change count is calculated

count if/then/else changes"
Assembly,BBN-Q/pyqgl2,a9d4236458a27cdb1f42b22e7d266ce0161d526d,2016-05-12T12:40:00Z,9864616317c02db858472e4f861f282e054683ad/cbd421f6cefc2dbd63d696b0ca92698054324459/ba8eb39f23f8c7bf5f4dc5425d6596d56461859a/cf7820b16fd2d366ac7e784076b2b9a0dc93682f/ddbaf39ee4162f676ebf53b94da3e98c1181d857/,2016-05-16 16:35:35-04:00/2017-03-22 16:14:31-04:00/2016-05-25 18:33:48-04:00/2016-10-04 08:28:08-04:00/2016-05-13 06:43:26-04:00/,"almost recuring properly on ast.For

local variables within an expanded body are not being
renamed properly.  Every assignment in an inner block
needs to have its name rewritten unless we can prove that
the resulting binding is only used in that pass through
the block (which is rare, but possible)"
Assembly,BBN-Q/pyqgl2,c73264c05aa9a22635eb3cdfe1b9a58948910366,2016-05-26T20:06:13Z,dabe675ff8918039179cf53f1b22c7d99597ee52/e430d3d21e6d57b56d2089aadc697c5c6e3df131/,2016-07-22 09:48:58-04:00/2016-06-03 14:06:34-04:00/,add stub for Barrier()
Assembly,BBN-Q/pyqgl2,1d7ef261e6ca139d2ac75deaaeb5dca2ec801a5a,2016-06-09T19:29:21Z,065efcd80a6c65a9b814c178446eb65adfe0510c/1b0488f40fb5ea8adf25db9c7ca12ddebebf3ee1/69bce9b8adc838bd7d6c15fecdc4feb925eff0fb/9a71e54fc5cb200c46d5b192d2ebe318eb40607d/,2016-06-30 17:29:47-04:00/2016-06-13 19:31:56-04:00/2016-06-09 16:32:33-04:00/2016-07-01 11:57:21-04:00/,"mockup of barriers at start/end function

the code to process things later doesn't know what to do about
these barriers yet.  They may be converted into a ""parameterized""
with-concur on the appropriate set of qbits, or a vanilla with-concur
and a placeholder reference."
Assembly,BBN-Q/pyqgl2,339c185078bc4c6974ee501387f6d40a5ae607e4,2016-07-07T17:53:43Z,96ba32c894075dee8727fb1565dc534a32235f6d/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2016-07-07 18:10:24-04:00/2017-04-06 10:01:35-04:00/,"handle case where we have an empty orelse

I assumed that if there was an orelse, then it
would contain something.  This isn't true: some
AST nodes have empty orelse fields."
Assembly,BBN-Q/pyqgl2,33b817dfe7a03232d53f7db1bc0d18d98a364854,2016-10-14T15:37:43Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/5a183e7ff4b06cdcd96b3af39a62b77d4329146c/,2017-04-07 15:05:12-04:00/2017-03-23 14:08:52-04:00/,"replace pseudocode with more realistic pseudocode

still uses some fake operations, but at least it's consistent"
Assembly,BBN-Q/pyqgl2,6590fa7704526ae87459c5311c937b3b83173ff6,2016-03-31T23:12:10Z,60227f5d493445cb5f1476a4ffdbcca17fb327e3/9800d938f4f5f08f003c6d16ece745e6e8273bb2/bb728282e2365260f4ebd992c1c79b1c6e550856/,2017-03-23 17:06:57-04:00/2017-03-23 17:09:22-04:00/2017-03-30 15:26:04-04:00/,"add import information to the qgl2stub decorator

include info about what needs to be imported in order
to satisfy the stub references"
Assembly,BBN-Q/pyqgl2,b42a5c1100ba54c0b516c92c70bcb6a5d4acf6c5,2016-04-22T12:46:52Z,a99fbc838c186178e25d78686802f93eba1c1df8/,2016-04-25 15:52:17-04:00/,merge fixes to Waveform printing from QGL/master
Assembly,BBN-Q/pyqgl2,e281e54b46fe09121fa92f0c28e909cf522672f2,2015-12-10T21:09:42Z,673d4af48598e6cf070394c538e19c3facb4f69b/ae3b9b5e65e726585442559f1f8215eb3093a873/e9291c43ef1f7699221b17647d9e1d2d27ce4c88/80c66a55cd4a1fd64afdaa72dea2ab42b2fe5c80/e2f8e8dbb3969de855447d253bc9ed0772d58f20/7775f56f5e3743a9b6b73f33a063cfd3ed1a8871/170e720cbfa5069f523c4eaed7d550185e33eb6f/9b7a544414650f8d04e88697397a27578208dcdb/,2015-12-10 17:38:11-05:00/2016-04-06 16:02:17-04:00/2016-02-25 11:20:51-05:00/2016-04-01 09:13:59-04:00/2016-03-01 17:12:39-05:00/2016-03-18 10:12:26-04:00/2016-04-06 17:19:48-04:00/2016-03-18 16:16:29-04:00/,"propogate qbit definitions correctly

mostly works, except for keyword args, which don't work at all.

festooned with a lot of debugging/diagnostic code and old
comments from the previous version: needs a scrubbing"
Assembly,BBN-Q/pyqgl2,c3de65667d0c27921cc7c7329a2561267656ecd4,2016-09-07T18:44:15Z,51074226af6a68525168ff88c5e230eea7ce0918/db6d3739e75272be796f25530cdfa878edb0b53b/5c76ad62ff8f8eaf65da5717506e20d98578ec7e/91b34ced66e3c7df3030aadb2e0ef9e07b8a6049/232a7e379b0311f1d19d505b525193629a2598e3/d3de87fa0b4eb305fb1d6eb07a59ed0a68cdd27c/,2016-09-19 15:44:59-04:00/2016-09-20 09:30:02-04:00/2016-09-21 11:33:16-04:00/2017-03-29 11:41:52-04:00/2017-03-22 17:09:00-04:00/2016-09-15 14:27:34-04:00/,Try to fix unit tests by creating a test channel library.
Assembly,BBN-Q/pyqgl2,bbfd3d55979979d6e62ada9c339de5018169f9f6,2016-03-17T17:47:05Z,9a821ed0853081096597d096ff9ad3344f3c0762/ae3b9b5e65e726585442559f1f8215eb3093a873/,2016-04-06 17:10:57-04:00/2016-04-06 16:02:17-04:00/,"Support qgl2stub as a function whose args we check but do not inline the body. Special case when inlining a function: if the first line is an expression that is a string, skip it - it's method doc."
Assembly,BBN-Q/pyqgl2,29a39b1368276c16fd654acd1aa1a5cc68da6623,2015-11-11T19:20:54Z,df1a66d81703dff93e18d6719cbb13db4f9e5599/10bb55d2cf6dc8c9fbe9c0ccb060e788da443876/3d7684c52e971ee5e1db1dd858a2a387230acea1/30f7569b113ce66b0c9e5746412fa3a9cd37dc50/6d013fa62f8050da64be893e54a924186de05993/f45dc8c6d9e5b88c00dff2547a96f53a9643943f/,2015-12-04 12:52:24-05:00/2015-11-11 17:16:43-05:00/2015-11-13 16:54:06-05:00/2015-12-11 13:28:40-05:00/2016-02-29 15:58:40-05:00/2015-11-23 15:08:10-05:00/,"search decorators for qgl2main, qgl2func

also add logic for choosing a different function
to use as the main instead of the declared function"
Assembly,BBN-Q/pyqgl2,0c6da23361448b8f9b88727fedfbfd3fe00b748a,2016-04-19T17:47:26Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/8782508880d376c2039a62e7d513657cc8e3bc5b/,2017-04-13 10:01:57-04:00/2016-04-20 14:06:37-04:00/,More missing QGL1 stubs.
Assembly,BBN-Q/pyqgl2,0b2de90291611a6282d22a52cadfb837a874f2d4,2016-06-27T22:40:13Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/f363a7bf1f9f3c912196ed1807905282125a0b57/,2016-06-30 18:21:21-04:00/2017-04-06 10:01:35-04:00/2016-06-27 21:09:50-04:00/,"move AST with-concur, with-infunc, etc to ast_qgl2"
Assembly,BBN-Q/pyqgl2,54f882a9e98ca017fc3b027ff85c003fe97b4a9f,2016-09-12T20:40:47Z,d5259010741db8ab055c5384c6bcba80eebfddd8/a4e9b584ec2385271b2a8b174cd697da236dd543/81e486cb656228addb724032cc1d8edb04d721ce/73d3663612c5127c1e6b036a9f40e86089645906/2039148c0479387a4147c430a84c9d39f53a895d/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2019-06-18 19:55:45-04:00/2016-10-07 12:26:51-04:00/2016-09-15 13:54:38-04:00/2016-09-29 16:36:27-04:00/2016-10-04 16:46:41-04:00/2017-04-07 15:05:12-04:00/,"clean up FlipFlop, get it working. Instead of setting new dragScaling val on the qubit, set it on the pulses"
Assembly,BBN-Q/pyqgl2,636398387db14da08e2c58a533b9fb9d72bdde22,2016-06-03T18:07:12Z,722cebfeda7fadce9a4657971bd7731fc85ca74a/,2017-03-22 16:18:22-04:00/,"If we get something not inside a with concur but it is only a single channel, then tack it on to the proper sequence. We think with Dan's fixes this won't be necessary."
Assembly,BBN-Q/pyqgl2,2b2edf218bfd09f80c60f8ec5056919f8c5c4305,2016-04-28T13:28:15Z,69637b7eae113a830fa13c067714ceef1283f19c/,2019-10-02 13:57:45-04:00/,note latest status
Assembly,BBN-Q/pyqgl2,185d56ad04f32b81f1c3988324339bdc79c39ae3,2016-07-13T16:21:43Z,eb8267fa50dd04aa061ac838f90fc58336626f48/467892d4bf102a5486ba18dc5b848f510ef6ca9a/dabe675ff8918039179cf53f1b22c7d99597ee52/736e28cd113ab3ed78568a82a5f831ab845f6e27/6785cdccb960d6740112ec1b0a46f387e1f98417/bc4722240b0ee0c4509d3a5eba4eb07b04f86bbb/,2016-09-09 09:21:00-04:00/2016-09-15 13:53:59-04:00/2016-07-22 09:48:58-04:00/2016-09-09 13:03:19-04:00/2016-09-27 11:32:11-04:00/2016-07-13 13:48:05-04:00/,fix some log statements; fix tracking Sync/Wait replacements; fix detecting 1 length is NaN; add testCMP() test sequence
Assembly,BBN-Q/pyqgl2,efaf4cc96730d04477115c190e8962326d8e1dfc,2016-07-07T18:27:00Z,baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2019-06-11 14:59:37-04:00/,simple barrier test programs
Assembly,BBN-Q/pyqgl2,2df719e8418b6cd4f090cc02e0075d97278bff13,2016-03-31T19:01:58Z,535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/,2017-03-30 13:31:14-04:00/,"for unit tests, the main here is not a qgl2main. The new model is you take the output of pyqgl2.main() -o and make it into Fooqgl1 and import that here"
Assembly,BBN-Q/pyqgl2,5431f01e6410ba93273db439d5f781b99fde3774,2016-08-22T17:42:17Z,4f4b71beeaba6a1f2e9d945f2a3e50eaddf54876/,2016-09-15 17:46:24-04:00/,"fix type of what a ""qbit"" is"
Assembly,BBN-Q/pyqgl2,067ab5ef521187afa37b170ee860c083b4d5b570,2016-02-11T20:25:24Z,0a2b29593cf05b46c34351c3a25329326534fd22/0b7edf6eef0f2928317789d11f6d318d1a1a07dc/afab6733b31db6aac6fe2ccb150aafa5fe239980/8ebe59f49d5a01bd2bc058e8bea9b1b168b2b7c7/,2016-03-16 17:11:25-04:00/2016-02-12 09:53:55-05:00/2016-06-30 18:21:21-04:00/2016-02-11 16:59:06-05:00/,"basic checking of the grouper is working

given a list of statements, partition so that each
referenced qbit appears in exactly one partition,
(plus one partition for all statements that don't
reference any qbits).

Similar to the previous commit, but now works on
actual statements instead of debugging tests
(but doesn't work on arbitrary statements yet)"
Assembly,BBN-Q/pyqgl2,6eb72ec72bd75379fdc3205f542f21ec3311fb48,2016-05-17T17:33:17Z,9898452226f3d4e6b4b4ceb826474c9e0443dc9a/e07657aac6635047e7571e79f7b6617d28ac6453/e31145b3337acdf8917932119e192f4448733704/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/ad76ab4ac298e83e49d22d3bcfeb3c28ac24eddc/,2017-03-24 11:11:27-04:00/2016-05-23 11:05:13-04:00/2017-04-05 16:56:18-04:00/2017-04-05 17:07:07-04:00/2017-03-23 22:15:42-04:00/,"start to address problems with if-MEAS

it's not right yet, but adds the basic mechanisms.
need to find the qbit number (instead of the label)
and need to make the same sort of modification to
while loops"
Assembly,BBN-Q/pyqgl2,c1e7ad8ac4577fe6426c7a72d601a22c62352106,2016-05-27T14:45:52Z,9a9f0640ccef6ba4e6bc87c71db79c91995615f9/749167b84aef793a81aebf049b20d8e014384207/9ade3a7c693ad77c43f5aa23278accef63ff6971/,2016-06-24 16:30:56-04:00/2016-05-27 10:55:01-04:00/2016-06-24 10:48:34-04:00/,fix printing of float lengths
Assembly,BBN-Q/pyqgl2,82ccfcf926c56d7fad1eb7681790a34d1af966d4,2016-05-23T23:04:30Z,c1ea1b08865aefe9c63ba68d47e10c53e46709bc/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-10-04 17:40:35-04:00/2017-04-06 21:52:58-04:00/,"add QubitPlaceholder; fix rewriter, redirector

QubitPlaceholder is a value that can be used in place
of an actual Qubit, just to carry information forward
about the underlying name of the channel.

the rewriter is extended to rewrite the orig_call info
(so that the qubit origins can be meaningfully tracked
if all we have is the name of the variable and not the
underlying name)

the redirector is updated so that if a value is a
QubitPlaceholder, the value is replaced in the AST
with an ast.Name for the underlying qbit (and not a
redirection to a reference to the QubitPlaceholder,
which is not useful to the compiler).

Eventually it would be nice to use real Qubits/Channels
instead of placeholders"
Assembly,BBN-Q/pyqgl2,b878da2722144a34d7c0e9a78cf4d4c57ff58968,2015-10-21T16:14:33Z,d54eef5f9caf8fb6c8b964661e2bd697917e0b73/673d4af48598e6cf070394c538e19c3facb4f69b/141cf4c1da1851044917184ba1747ed0a03bc07e/ee605da2e7adbd5202696c1e5ba4bb90c088b663/4d360b2fa2ea73387efcfb7132343bff79a6d09c/068d11d6e1a890282073b176d8b63672ccad2802/415ae1f94938180403b91a1d4a07576c25927543/170e720cbfa5069f523c4eaed7d550185e33eb6f/c2fc217df593a3e024b9ff80acb3017a069c6b56/9b7a544414650f8d04e88697397a27578208dcdb/b909fc78a71a33f4461b180585bdbfa61ff8b763/183b0c372c530bd2222fdcbe3bf86cd1f7de6d5a/42855ec601664de8d132fa579a868ebcc2e3dda9/e281e54b46fe09121fa92f0c28e909cf522672f2/,2015-10-22 14:30:29-04:00/2015-12-10 17:38:11-05:00/2015-12-10 22:39:29-05:00/2015-11-11 17:17:49-05:00/2016-03-21 16:15:52-04:00/2015-11-10 18:53:34-05:00/2015-11-05 17:00:31-05:00/2016-04-06 17:19:48-04:00/2015-12-08 16:41:59-05:00/2016-03-18 16:16:29-04:00/2015-12-09 11:29:07-05:00/2015-11-06 13:51:55-05:00/2015-11-10 14:10:56-05:00/2015-12-10 16:09:42-05:00/,"sketch of functions to in-line functions

drafty, but worth committing for future reference

in-lines functions and creates new functions
with the qbits parameters removed and replaced with their
values"
Assembly,BBN-Q/pyqgl2,ce8a436ec9dae4e45cbcb513b8ec4ceb7441e578,2016-06-24T14:43:08Z,b1c4760d64e22ef20536af773c73f7ba64de45fa/9ade3a7c693ad77c43f5aa23278accef63ff6971/15cfd751e27195c5f669dcae125e4cb0190723f7/dabe675ff8918039179cf53f1b22c7d99597ee52/395f3a901018b3208958b1ae0859880e3dce68d1/70f0c0eaf36135fa53a2724dffd1958cfe243672/0aed8a16950da4f7d3e8995ebec4aa0ac5ef2418/4398d8b4744a167af3a2712c7e695f44945484e7/9a9f0640ccef6ba4e6bc87c71db79c91995615f9/44fdaf434bf43bb42fd49f4ceb62fccc232cdb47/185d56ad04f32b81f1c3988324339bdc79c39ae3/6785cdccb960d6740112ec1b0a46f387e1f98417/efedc08ec3dee24a1dcc58842709815e79863a13/999fa4c3a5ac3c379350abc94b06130813521f9a/9dba10fb01fb955bcb462e30314af49d12b5292c/95bc42df89afc143ad25d53b1ac50588b8414eb0/,2016-07-19 11:59:37-04:00/2016-06-24 10:48:34-04:00/2016-07-19 11:08:55-04:00/2016-07-22 09:48:58-04:00/2016-07-07 14:35:17-04:00/2016-07-12 17:01:34-04:00/2016-07-13 11:33:51-04:00/2016-09-09 10:13:15-04:00/2016-06-24 16:30:56-04:00/2016-07-22 09:52:09-04:00/2016-07-13 12:21:43-04:00/2016-09-27 11:32:11-04:00/2016-09-27 13:27:42-04:00/2016-07-11 16:36:40-04:00/2016-07-07 15:42:12-04:00/2016-07-07 13:46:31-04:00/,Make my new evenblocks be the new/current one
Assembly,BBN-Q/pyqgl2,604df34f56aec9719c476e98ac77a99a3544616b,2016-07-28T14:57:23Z,3494b2e054574a2034bbae5830c0bced3e555d50/,2016-08-18 13:17:42-04:00/,"fix qgl2stub decorator to be general

wrap the stub, to make the wrapped function's name accessible

also add a second layer to preserve the decoration."
Assembly,BBN-Q/pyqgl2,b5ad2f88d155f15bf456de242e90f020cd0b0249,2016-08-22T15:29:55Z,9690375f0473337f0aa3593260803bdb26444a62/f791681624d5ec22b1a3a0005a83b1bfa31330a9/3bfe751db8d3c46463119be914a2cac7094da49d/,2016-09-12 16:38:08-04:00/2016-09-07 10:19:20-04:00/2016-09-29 14:53:30-04:00/,clean up comments & tests to reflect current status
Assembly,BBN-Q/pyqgl2,299573fe97c35ab2533f95095492d162e15f0448,2015-11-13T15:11:56Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/,2017-04-13 10:01:57-04:00/,"updating language constants

adding qbit_list and Qbit
getting rid of qgl2import"
Assembly,BBN-Q/pyqgl2,abdc780c7167ad270480570ca10d918f7b629049,2015-12-11T03:35:07Z,8a224933e9a6512a0bc8a5e2e10ab2e6d2d85a3d/,2016-04-01 08:55:04-04:00/,"add diagnostics to never-happen case

if we ever see an unexpected node type, we'll want to know
everything we can about it"
Assembly,BBN-Q/pyqgl2,ffb03129c741bbf455de32cfecd95a234eae1243,2016-06-21T17:44:09Z,ab3b38a7721c6ed4065589340f32575eb94d7f6d/,2016-06-21 18:12:34-04:00/,removed debugging names for barrier funcs
Assembly,BBN-Q/pyqgl2,71b371604c2d63f47c4086975dcb83836cb241eb,2016-09-27T22:52:15Z,30ecc1f528c973a326d224463ff6f94ef4de01f9/4f88f89684171f024eb415bb1b642ab44f444012/,2018-10-10 18:12:56-04:00/2019-08-15 18:46:31-04:00/,"move pulse shapes out of RabiMin

the reference to a function depends on how it is imported
(in some cases) so in order to get the ""same"" reference to
the tanh function in the QGL2 and the QGL1 test code, we
need to move tanh into a different file than the QGL2 code.
If the two references aren't identical, then the unittests
will fail because the shapeParams will look different.

The reason for this is not clear, but this seems to solve
the problem."
Assembly,BBN-Q/pyqgl2,e801c2cc56a229981d9687b67500aa52d9218de9,2016-03-17T22:21:51Z,7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/34586fbf652215762ef3c1c573914174e0e02788/1625d995d8c24a2e68b372cc03a3fe939e00a4de/,2016-04-08 13:19:09-04:00/2016-05-13 14:49:51-04:00/2016-04-04 19:59:13-04:00/,"annotate new blocks with location info

as in the previous commit--there may be other cases
still not handled"
Assembly,BBN-Q/pyqgl2,2546ec4677a6fbeb30d46476d4f9b17c29add300,2016-06-23T15:05:47Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,"some cleanup/commenting

converting some control structures to something
that should be easier to read later"
Assembly,BBN-Q/pyqgl2,ccb54dbe588819f0c6c5acef356b351ad09489ee,2016-02-25T18:54:02Z,ec5d2493b4d497df8407a5be031bc5df6971c364/615352f7b26ba981e27b58c382d9565184fccadd/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/956225b652eb80b56aa726a830a1f4768eff67f0/4cf47b421ad55b4f420741d0e56c7a850d2b728f/cda56a922723f87a7a6d39af3a862553609f2927/,2019-06-17 13:51:22-04:00/2016-03-17 13:40:17-04:00/2016-09-07 16:05:57-04:00/2016-07-25 14:28:24-04:00/2016-02-26 13:43:46-05:00/2019-06-24 13:25:22-04:00/,add missing calls to init()
Assembly,BBN-Q/pyqgl2,a6c2ada49436328d123db30d07e165dfdce470e1,2017-04-10T17:42:44Z,19f090f0b17ed60b9195793f183eae5fd7b73a2b/,2017-04-13 16:03:24-04:00/,"Add some comments.

[ci skip]"
Assembly,BBN-Q/pyqgl2,b0ecccb54e82ff0273ba0e3d14a212f5b9c5485f,2015-12-04T18:04:45Z,9cb318b7571c04e45f01390200822782cafe3311/,2015-12-10 22:36:51-05:00/,"copy methods referenced here but defined elsewhere

this code is halfway through a refactoring and is fairly
gross, but I want to get a working version to push"
Assembly,BBN-Q/pyqgl2,ad66aad5919b9be3fa1666414ef6b33de1936a95,2016-09-15T19:13:28Z,c7497df9f519ff1b808cbc2bafae21752051fe1f/46c795c32302219a312d0e21167f3110dd1b9a9f/ebf88aeda0758a5a0c9a8b1b386573e7fca2f911/,2016-09-15 17:13:03-04:00/2016-09-15 17:27:49-04:00/2019-09-12 16:34:12-04:00/,"rough version of new type checking calls

this version does the checks in the preprocessor
instead of handing them to the python interpreter.
In the long run this should be faster and require
less memory, and cause less clutter in the code,
but right now this is still messy."
Assembly,BBN-Q/pyqgl2,18cc45e1f935c5f4fb282b8bbc45cfde79c1cfe5,2016-03-31T23:13:08Z,3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/,2016-05-13 14:58:56-04:00/,"single import for all the ""control"" stubs

a QGL2 programmer won't ordinarily put a 'Goto'
(for example) in their QGL2 code, but this needs
to be defined or else the preprocessor (which
generates code that uses 'Goto', among other
low-level symbols) needs to have this defined.
Importing * from this module accomplishes this."
Assembly,BBN-Q/pyqgl2,69618dae0d1e8b0b5d31fcf2eed97fa38dd6feea,2015-11-05T21:53:41Z,5b6d59d06703388764770dec0f09cc6a260c0114/9fd00f045a66b4db21318320aeb74e973935a172/53db27637e4b66d965ed74a9dd7d5c46dbf978e2/7e58178bf4985c8739959575378b7bb7d21b6f72/,2015-11-10 18:51:46-05:00/2015-11-10 10:18:48-05:00/2015-11-06 13:50:20-05:00/2015-11-10 14:10:09-05:00/,"add methods for collapsing names, getting fparams

collapsing names: turn the ast for something like 'a.b.c' back
into a string 'a.b.c', which is usually a nicer representation
(I am still on the fence in some contexts)

the _qbit_decl was moved from check_qbit to the importer,
so that it can be used wherever the importer is available.
it does not use any cached state, so it doesn't need to be
part of either class, except for the convenience of the
error messages.  I am not satisfied with this organization;
we need a general set of helpers we can mix in with the
different classes instead of lugging an importer around."
Assembly,BBN-Q/pyqgl2,141cf4c1da1851044917184ba1747ed0a03bc07e,2015-12-11T03:39:29Z,170e720cbfa5069f523c4eaed7d550185e33eb6f/,2016-04-06 17:19:48-04:00/,use new CheckWaveforms interface
Assembly,BBN-Q/pyqgl2,fb4bee82a00e664668fbdfd3e3f69576d8e397c2,2016-03-28T20:37:41Z,561bb35044b9bc3f7026e8201239ac987772389b/3f2ea3d243268ee50c8dd32c1d313616815a625f/dcd2bfd93d1abbb86f385a360790a3fad7cd3519/a65b9479f6dc37d81e38f6f5ad495865b8f93fc4/4526c98058166eabdce7fd7e719b929c1efdf445/,2016-04-05 21:14:19-04:00/2016-05-11 11:11:14-04:00/2016-04-01 09:48:17-04:00/2016-10-10 11:27:29-04:00/2016-04-06 18:35:00-04:00/,more gracefully handle the multi qubit test files
Assembly,BBN-Q/pyqgl2,ddbaf39ee4162f676ebf53b94da3e98c1181d857,2016-05-13T10:43:26Z,cbd421f6cefc2dbd63d696b0ca92698054324459/e6c722dbc35cb906b4b019733a05094b648eb7c6/,2017-03-22 16:14:31-04:00/2016-05-17 19:43:06-04:00/,"remove/comment out many diagnostic prints

these were for development, not for general users"
Assembly,BBN-Q/pyqgl2,1bf90265d83b75301896f1bb20e1991487e05827,2016-09-07T13:37:51Z,ef42a9b1125661d6997032a6199dae71ffaf7362/29f3ee10cc95e01fd170d70ad6685a929349aebb/f791681624d5ec22b1a3a0005a83b1bfa31330a9/,2017-03-22 16:13:42-04:00/2016-09-07 09:48:21-04:00/2016-09-07 10:19:20-04:00/,"Move some test files to top-level test/ directory.

Add a README to explainer container setup."
Assembly,BBN-Q/pyqgl2,7e58178bf4985c8739959575378b7bb7d21b6f72,2015-11-10T19:10:09Z,06de51e238484a3a2bc71408d11f11f869276a55/5b6d59d06703388764770dec0f09cc6a260c0114/9265f051b5c7f4df1edaff3c30029e4f3e3a8c90/abdc780c7167ad270480570ca10d918f7b629049/8ca9d01574f29d7ddbfc80b5730c8859bbe6b126/df1a66d81703dff93e18d6719cbb13db4f9e5599/10bb55d2cf6dc8c9fbe9c0ccb060e788da443876/e57ed44d4a076aaced4afbee3f4f8784e82830ea/fa77aa7397a246c22b4f290c8cb792c3c97e7a21/3d7684c52e971ee5e1db1dd858a2a387230acea1/adfcf31a67c6575eafe034ed8cedc3e7baba37f1/29a39b1368276c16fd654acd1aa1a5cc68da6623/,2015-12-15 21:15:33-05:00/2015-11-10 18:51:46-05:00/2016-01-25 12:58:55-05:00/2015-12-10 22:35:07-05:00/2015-11-13 10:11:24-05:00/2015-12-04 12:52:24-05:00/2015-11-11 17:16:43-05:00/2016-02-09 11:30:55-05:00/2016-01-27 12:46:48-05:00/2015-11-13 16:54:06-05:00/2016-05-13 09:56:00-04:00/2015-11-11 14:20:54-05:00/,"new importer almost complete

once functionality is complete, all the old code
needs to be removed to reduce the general level
of undergrowth"
Assembly,BBN-Q/pyqgl2,60ff672fe63657948385d69b9f33e497f58ef28b,2016-09-24T19:57:51Z,29302b00c0c43ad4b98ca18e095fd51cddd26bf3/,2019-06-19 13:35:55-04:00/,"remove import of create_cal_seqs; fix Id() calls

Id() must use keyword arg for length (for now)

create_cal_seqs contains imports that fail, and the
function doesn't work anyway.  We don't currently
use it in our tests, so let's not import it"
Assembly,BBN-Q/pyqgl2,be92b87f356331e38626a06ed71a3836560ef326,2016-05-12T19:42:45Z,7d91ee99c852dc019fbee029833348e067773324/e6c722dbc35cb906b4b019733a05094b648eb7c6/dc3cf36f7d3749770848fcc440337e487c29cdda/144a79f1b2df8d24599208d3e30c9093521712fe/ddbaf39ee4162f676ebf53b94da3e98c1181d857/,2016-05-12 19:00:18-04:00/2016-05-17 19:43:06-04:00/2016-08-29 18:16:29-04:00/2016-05-13 14:34:55-04:00/2016-05-13 06:43:26-04:00/,rewriting names for all assignments
Assembly,BBN-Q/pyqgl2,a7d763c536918c55d62a28563770cba2b27a6a43,2016-09-21T18:27:26Z,d4f4f6887422e5821c1b299e022f0d79357584a4/,2016-09-21 14:55:41-04:00/,Add another edge from q2 to q1 to support edgeTest4
Assembly,BBN-Q/pyqgl2,d8bd1ce6444dee95ffc9b239d6937cdf4582eb2d,2016-05-30T01:39:11Z,636398387db14da08e2c58a533b9fb9d72bdde22/,2016-06-03 14:07:12-04:00/,"handle statements that aren't ast.Expr instances

handle things that aren't pure stubs"
Assembly,BBN-Q/pyqgl2,e841d3f099ff3b035919fff5a9cc0202010a9286,2015-12-10T22:37:20Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/697f7464e490a6d54e333324832314b58f65285b/b24538119fd6d1243f08b19ab30a159522b8abe9/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2017-04-06 10:01:35-04:00/2016-02-12 10:21:15-05:00/2016-02-26 16:25:29-05:00/2015-12-10 22:38:33-05:00/,"add later checks, post optimization

the post-optimization checks are not effective right now.
I've introduced a bug somewhere"
Assembly,BBN-Q/pyqgl2,f782658e06b511bc2ad181bf2e03456a03cc0625,2016-02-26T21:24:40Z,362b36d9e9f9d57a6e63552b78b5524049c52b13/,2016-08-18 17:25:25-04:00/,"change change_count to change_cnt for consistency

other classes use change_cnt, so let's be consistent"
Assembly,BBN-Q/pyqgl2,6c9e4ef845ad4c297d46b9196fe714f752a8781f,2016-09-22T22:44:29Z,c0c19b3177f13755d7e2cc341a5bd5a901bb051b/,2016-09-23 16:07:38-04:00/,"new impl of init, as a stub"
Assembly,BBN-Q/pyqgl2,5f42bc28867d93359a63a480da3904dfd7d33bb9,2016-09-07T14:31:30Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,"may revert - remove check_symtab from main

checking the symbol table doesn't work for
call-by-reference functions: we can't check them
until we know what the reference points to, which
isn't until runtime.  These almost always fail
(and in a perfect world would *always* fail) in
check_symtab because the bindings don't exist.

check_symtab may be completely redundant at this
point, so this change might be permanent (and
the code can also be removed).  If we want to keep
check_symtab, then we need to fix it so it doesn't
consider these errors."
Assembly,BBN-Q/pyqgl2,8ef163c973be2334f5f7850ca6e25148da2e43ac,2016-09-13T20:14:42Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/09dd93a8aa98726aed7083952cff3ed3c0afa5eb/03c26455781c778d70212f5a02c80c30bc4bbb06/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/05b10c44be155cdae2b4ba8eac4d1e74d9501a24/722cebfeda7fadce9a4657971bd7731fc85ca74a/987e1e67bda13a4b7777ee23c2268f2885d42aec/,2017-04-13 10:01:57-04:00/2016-09-20 19:35:05-04:00/2016-10-04 06:57:35-04:00/2017-04-07 15:05:12-04:00/2016-09-23 10:51:59-04:00/2017-03-22 16:18:22-04:00/2017-03-22 16:25:57-04:00/,Fix a simplified version of tomo test.
Assembly,BBN-Q/pyqgl2,e1676dd3857d49811eddde4e419c36cb867b96f9,2016-09-06T19:26:50Z,c687a1ddf1228fa2f885c6988c9906a00a516adc/2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/0ea2e6e31197db97d0fdfbb5afc4b3dc0fb19e38/,2017-03-23 11:59:02-04:00/2016-09-06 18:44:10-04:00/2016-09-26 15:04:24-04:00/,"inline qgl2 funcs by references/no err checking

we successfully inline functions by reference, but
we don't do any error checking: we don't check that
the actual parameters match the declaration, and we
don't backfill the qgl_scope so that CheckSymtab will
validate the call.

The latter should be unnecessary because the runtime
checking should replace the static checking, but right
now it's something to watch for"
Assembly,BBN-Q/pyqgl2,6b74157b25594835d243b7fa57a37fe892c5afae,2016-07-01T16:21:43Z,722cebfeda7fadce9a4657971bd7731fc85ca74a/ec749b42b532d39855a3a6d9b8bbfd6d9127f703/,2017-03-22 16:18:22-04:00/2016-07-05 12:17:49-04:00/,"changed seq elements to be named by channel

the old generator just assigned each sequence to
a variable named 'seq', but it wasn't always obvious
which channel that sequence was for.  The new
generator creates a variable named 'seq_CHAN' where
CHAN is the name of the channel, so it's easy to see
what's related to what."
Assembly,BBN-Q/pyqgl2,ed4043265dbb168f871f0912624a38de895fe127,2016-08-31T20:42:15Z,ad76ab4ac298e83e49d22d3bcfeb3c28ac24eddc/,2017-03-23 22:15:42-04:00/,"don't assume all calls are directly to functions

calls might be to class or instance methods instead of functions"
Assembly,BBN-Q/pyqgl2,94ecc65f1c35bc0258853e0877423adf56f3a4c7,2016-07-05T20:53:11Z,99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2017-04-06 21:52:58-04:00/,"salvage genChanLabel from substitute.py

the substituter is obsolete, but we still need this function"
Assembly,BBN-Q/pyqgl2,4406bfda6402b7710b1d015c8f0904969991d5c0,2019-06-13T19:18:07Z,ce51c3da3e5924e22bbbe958258a7042f1cf7a51/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/,2019-06-25 15:48:25-04:00/2019-06-19 13:35:55-04:00/,ChannelLibraries rename fixes in comments
Assembly,BBN-Q/pyqgl2,910eced8ea0d5aba83e8cb61715cbe11da1d6f9e,2015-12-08T21:44:49Z,013cb3bf12a78cf63f021e8e89f600829bc97852/b89bf1d120c8da01a56d925816c828803f7dd20e/467892d4bf102a5486ba18dc5b848f510ef6ca9a/94250b99d38edd67798a85a10aa51289b898fa34/cb52749fbdf212d4a6d996d954ac11631c351033/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/2592a6e0d6f662ba969be6d416a7085870a5c113/e938a81b26f7a4d3df15af463a6d076dda57dea2/c6dc418e52f3e0ec594dcc80d20e1c0f1ab2609a/b24538119fd6d1243f08b19ab30a159522b8abe9/a89acfe5108e89bb8efa763dbbdc387000b47d80/0086876dc057a441ec04f91f3fedb4d986c976c2/,2016-10-10 10:52:15-04:00/2017-03-21 10:38:39-04:00/2016-09-15 13:53:59-04:00/2016-04-07 12:27:11-04:00/2016-02-26 17:00:11-05:00/2017-04-06 10:01:35-04:00/2016-05-13 09:57:15-04:00/2015-12-15 15:53:40-05:00/2016-07-05 16:40:19-04:00/2016-02-26 16:25:29-05:00/2016-03-25 16:12:15-04:00/2015-12-14 18:24:12-05:00/,integrate the specializer and print results
Assembly,BBN-Q/pyqgl2,2be4234461b4bd2af1f75c8f8fa483e5a80407c1,2019-08-16T18:21:52Z,e69b2d64c34d7874ebad02ee707d55c7dd929c14/,2019-09-13 16:44:18-04:00/,start at updating Feedback. Cannot work until QConditionals work
Assembly,BBN-Q/pyqgl2,2a5d9eda26de6714a4d38bce019b60933aa91f28,2016-06-30T21:27:07Z,a22ef357d24769a3f6913c0ab97967d80a4fb315/,2016-09-23 15:53:12-04:00/,"differentiate between module and builtin symbols

try to give better warnings about module and builtin symbols

change how the NameFinder is imported to prevent a circular
import

change scope_check to be a predicate, because someday it
might detect errors instead of just emitting warnings"
Assembly,BBN-Q/pyqgl2,34297064cb4871e8504ea3588f4d01a4cfa51508,2016-03-11T15:27:23Z,9dbbe24dd3d13da980348daa251ca943bcfa06b0/,2016-03-16 17:27:11-04:00/,"prototype of sequence-creation functionality

doesn't add all the needed WAIT/SYNC calls yet"
Assembly,BBN-Q/pyqgl2,780b3d7167958f2de31fad69bc8c1a14462a0287,2015-12-02T23:15:37Z,7748910e5e76d718722d7db3b5f906b36e621345/,2016-02-29 19:01:34-05:00/,"add utility for pretty-printing AST trees

based on our own version of meta, which has
fewer bugs than the standard version"
Assembly,BBN-Q/pyqgl2,9ecc634ba618a2d92c12dfe998bab00033a1e30b,2015-10-16T13:30:20Z,a3bc39be4ebb3aff3b2158c80e79a4ebef2674ef/2ac21c47f37e72605037fc66f90c079e05335ee7/c569f7f12e652cbe6c9fe939b134024fd30368a3/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2015-11-11 17:14:33-05:00/2015-10-16 10:21:58-04:00/2015-11-10 18:01:57-05:00/2015-12-10 22:38:33-05:00/,"cleaning up the parameter/local scopes

needs a better approach because even with just
three types it's already clunky"
Assembly,BBN-Q/pyqgl2,ea575afa1f01af217fa203ceb5fca085dbf555ff,2016-06-23T21:12:22Z,dd692464df3a04560fe3a229a9e734dfb77b084c/ce8a436ec9dae4e45cbcb513b8ec4ceb7441e578/,2016-06-24 10:26:18-04:00/2016-06-24 10:43:08-04:00/,"bug fixes, better documentation"
Assembly,BBN-Q/pyqgl2,348ef91c136834c516e89fd54f48bdfcf4591a4e,2016-09-21T14:39:29Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/3bfe751db8d3c46463119be914a2cac7094da49d/,2017-03-23 14:06:24-04:00/2016-09-29 14:53:30-04:00/,Make tests for Swap and RabiAmp_NQubits work
Assembly,BBN-Q/pyqgl2,0ef68904abf9cbec8dab18502224194e82f87f14,2017-03-22T20:36:36Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/,2017-04-07 13:22:20-04:00/,"Fix toplevel_binding test.

Requires re-injecting evaluator setup preamble to pass. The problem seems to be
that the evaluator isn't able extract values from numpy arrays. I'm not sure why
this is the case since the evaluator clearly was able to determine the length of
the array."
Assembly,BBN-Q/pyqgl2,8bf48a852b8acaee9f656d529869c17eb6fc4463,2016-02-01T19:23:28Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,updated the import statement
Assembly,BBN-Q/pyqgl2,41fd039f3c723e999d10bc3f1d5626242bd335d7,2015-12-03T23:12:44Z,9219cc02cd83026c424fd5360a49dce092eaf262/b606cbb8c986d094d2f60470567f9957a7710c62/,2015-12-15 16:36:50-05:00/2016-04-07 14:14:51-04:00/,"squash multiple repetitions of the same warning

if we inline a function more than once (or later,
unroll loops, etc) then we could end up detecting
things that look bogus more than once, and printing
identical warnings/errors (that all reference the
same line in the original source file), and this
is not useful.  So track all the messages generated,
and only emit each once."
Assembly,BBN-Q/pyqgl2,13f077a78ad4daac717f9002226e0b77dbe79682,2016-04-28T17:21:22Z,62bc4470539cf15ac0eef9662feb0652957622d8/,2016-05-06 16:21:50-04:00/,hack to allow simple single qbit programs to still work
Assembly,BBN-Q/pyqgl2,da8b8b3138cca7be5e19596da9c38ec6f977cc87,2015-12-01T21:09:19Z,f97498bbbbd8b136660e6736b322f47c777ff858/a89acfe5108e89bb8efa763dbbdc387000b47d80/,2016-04-07 11:54:09-04:00/2016-03-25 16:12:15-04:00/,fix errors in conversion to argparse
Assembly,BBN-Q/pyqgl2,ad77dfde389ad2d9da2ccb22eae1ca046fbd6d8b,2016-05-10T22:45:41Z,86d01d68a3b80c09e89c89799a1fb650bda67646/e1676dd3857d49811eddde4e419c36cb867b96f9/ddbaf39ee4162f676ebf53b94da3e98c1181d857/2358e1d67873108382c3119d15ccf0d4f804990e/,2016-05-11 11:34:47-04:00/2016-09-06 15:26:50-04:00/2016-05-13 06:43:26-04:00/2016-05-11 22:42:21-04:00/,"first step in ability to ""playback"" previous eval

we want to be able to evaluate assignments and ""remember""
the values that we computed, in case they turn out to be
based on calls to non-pure functions and we need to evaluate
the assignments more than once (because some parts of the
expansion are done by trial and error).  This allows us
to fall back to an earlier state in the evaluation if
a transformation fails and we need to try another, without
evaluating things more than once."
Assembly,BBN-Q/pyqgl2,809241af26d59ed76e81fb5c908ff2e7e262c84e,2016-05-12T23:41:16Z,73d3663612c5127c1e6b036a9f40e86089645906/,2016-09-29 16:36:27-04:00/,add missing import
Assembly,BBN-Q/pyqgl2,efdb682cd96ad71dee0ce3072a2e1b27fec377b6,2016-03-01T00:38:40Z,a1006b4d5356de8b46740145fa7e1a6f6aeeae41/d3b70552de6ef1a650ed4c9054f442ce781ec8c2/,2016-03-02 16:46:45-05:00/2016-03-03 11:58:58-05:00/,"better debug messages

still playing with the interface; still feels clunky."
Assembly,BBN-Q/pyqgl2,b4922b49f21b871128ffa09d7598ba556bc8a097,2016-05-16T20:03:24Z,4c7a814a0aed61c4361ed0dee5b4586c8b424c4a/,2016-08-29 18:28:01-04:00/,"format warning/error messages more cleanly

if the expr was AST, and came from the preprocessor,
then print it with the file/line number info, using the
standard mechanism.  Otherwise, just print something
reasonable about the nature of the error"
Assembly,BBN-Q/pyqgl2,c6d3e47763e666a8bf2869e245fba6fe1fb42378,2017-04-10T18:20:04Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/,2017-04-13 10:01:57-04:00/,Fix scope tests.
Assembly,BBN-Q/pyqgl2,39305cd69ec192acd0d702be7874490c90e702f1,2019-06-17T22:28:39Z,90cee6454d7911872816d8abb64c51311859ef0d/18bf238c4abfc3dc50eec0b858afd860f148661d/e49f367ea90c010d899341fb11ed3095ad3c9faa/91ecf1456789b8d7b2bfcc7894979d78a06d507a/,2019-06-18 18:39:29-04:00/2019-06-21 11:47:12-04:00/2019-09-13 14:41:54-04:00/2019-09-16 11:31:44-04:00/,"cleaned up Decoupling. Now have a single working implementation of each, synced to latest QGL1"
Assembly,BBN-Q/pyqgl2,004cfe4cc309423fca105f556f76ca4c4bf89277,2016-06-01T23:34:35Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/1d046f55c5c629409d9c323799fb4d3668eefea8/,2017-04-06 10:01:35-04:00/2016-06-20 16:40:35-04:00/,"integrating qrepeat transforms

needs testing; appears to handle trivial cases
but hasn't been tested on anything complex"
Assembly,BBN-Q/pyqgl2,c569f7f12e652cbe6c9fe939b134024fd30368a3,2015-11-10T23:01:57Z,24c142ed6f812c7d98b7e107758e0f77f469c889/a3bc39be4ebb3aff3b2158c80e79a4ebef2674ef/9b7a544414650f8d04e88697397a27578208dcdb/c1ca2f051f40ec7f16a6c338ecf33f30a4e18af4/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2015-11-10 19:44:50-05:00/2015-11-11 17:14:33-05:00/2016-03-18 16:16:29-04:00/2016-04-06 16:30:50-04:00/2015-12-10 22:38:33-05:00/,"fix resolution to find Qbit creation

this now works, but it should be folded into the
substituter, which does almost the same thing."
Assembly,BBN-Q/pyqgl2,27ec2ae35a64a78107dfcb30e0c9d5e1009c9684,2016-06-28T15:29:21Z,2967b2d3a212bb88fd554a38cca098b866d25e43/,2016-06-30 17:34:38-04:00/,debug msgs if parameters have unexpected types
Assembly,BBN-Q/pyqgl2,988bc84f6002f49aa56b8fef77c44d3f4cbe476d,2015-12-02T23:24:47Z,9b7a544414650f8d04e88697397a27578208dcdb/57699994fc8284b9f07054bd8a6f4c8e2379b4ac/,2016-03-18 16:16:29-04:00/2017-04-11 15:23:04-04:00/,"added base type for 'concur' and 'seq'

base objects don't have an __exit__ method, for
some reason.  Created a new base class for operands
to ""with"" that has a degenerate __exit__ method."
Assembly,BBN-Q/pyqgl2,e9291c43ef1f7699221b17647d9e1d2d27ce4c88,2016-02-25T16:20:51Z,7775f56f5e3743a9b6b73f33a063cfd3ed1a8871/,2016-03-18 10:12:26-04:00/,"better diagnostic msgs for type errors

when we check whether the parameters of a call match
the signature of the function, print the name of the
function and parameters that don't match"
Assembly,BBN-Q/pyqgl2,62e6d0793036a0e1811e0ced7c898e1380c01c40,2016-09-21T12:49:10Z,232fe6aa404c73b84b9a8efe3daa8be0227869b2/05b10c44be155cdae2b4ba8eac4d1e74d9501a24/18ffdb59d6d0d0fb09ff3994e89a38f7f0aafe76/4ab7da4826dc5ede7c520bf03d6b14242d8dbc99/b44db5a4c9d492a26f3be6714f35d35fa905668b/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-07 17:09:27-04:00/2016-09-23 10:51:59-04:00/2017-03-23 09:45:53-04:00/2016-09-24 15:59:35-04:00/2016-09-21 15:00:48-04:00/2017-03-22 16:13:42-04:00/,unit tests to run test/multi.py
Assembly,BBN-Q/pyqgl2,b26ba3037661c276113a7c3b7a5a52aac00773e1,2016-09-09T14:11:51Z,25980e477b48585bbd28f64ca216507ee8069aaf/,2016-09-09 10:19:34-04:00/,"handle references to from-as qgl2decl functions

I'm not sure how this will handle ""nested"" from-as symbols
(symbols that are imported into the file from which the
referencer imports them, rather than being defined there).

I need to check whether the importer populates the from-as
recursively (as it probably should) or whether I need to
do the recursion here (and detect loops)"
Assembly,BBN-Q/pyqgl2,0a2d00c97f489253bc2966d44e991bccc4d4317a,2016-09-29T20:00:23Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/71a0dbb1d730f495266876b5aa16ba0587f0f8d4/032f0241eb969870a941956a7db8a17a86e76aa9/0ef68904abf9cbec8dab18502224194e82f87f14/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-13 10:01:57-04:00/2016-10-05 12:03:34-04:00/2017-04-11 16:00:27-04:00/2017-03-22 16:36:36-04:00/2017-03-22 16:13:42-04:00/,"Add a test for qbit_list top-level args.

Currently fails."
Assembly,BBN-Q/pyqgl2,76822b6ec2c20317277c6d9dea82eedaa55c8ecb,2016-06-23T15:04:04Z,9eb53d5150223e975335820cdf66bc0d14a438f3/,2017-03-30 14:06:05-04:00/,"put BarrierIdentifier back in inline.py

tried to move it elsewhere, but created a circular
dependency.  The classes need to be reorganized more
logically by file"
Assembly,BBN-Q/pyqgl2,b5d0488efb1c22aabd075608614a6e2ec2ded0bc,2017-03-29T19:19:49Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/5ac645d651444613745ca65e3c3473324a1a4b41/,2017-04-07 15:05:12-04:00/2017-03-31 10:35:54-04:00/,"Error on break/continue inside runtime conditions.

Add a test of the same."
Assembly,BBN-Q/pyqgl2,2ac21c47f37e72605037fc66f90c079e05335ee7,2015-10-16T14:21:58Z,35e1f806ccbf2bf1c53f2fc7ab94eadb226d435f/9c5bde1898650ca5be0c2680a7c055f773e2ea08/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2015-12-04 13:04:17-05:00/2015-11-10 18:50:58-05:00/2015-12-10 22:38:33-05:00/,temporarily comment out noisy diagnostics
Assembly,BBN-Q/pyqgl2,697f7464e490a6d54e333324832314b58f65285b,2016-02-12T15:21:15Z,2019ed77591b824855a46a938f51dbed0f10c46d/5204ecd0473c66ee812039244ace1e5a35cb22b7/94250b99d38edd67798a85a10aa51289b898fa34/ab2543752e96fb9cbdb18f181a03aa5f5e3305b0/21bfcc5d5adf36c0a809ed7c897d83afb3c99d6a/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/b24538119fd6d1243f08b19ab30a159522b8abe9/,2016-03-04 09:51:49-05:00/2016-06-30 18:32:06-04:00/2016-04-07 12:27:11-04:00/2016-02-25 11:22:07-05:00/2016-02-16 16:43:24-05:00/2017-04-06 10:01:35-04:00/2016-02-26 16:25:29-05:00/,"sketch of adding statement grouper

comments out some other functionality, which
needs to be restored before merging"
Assembly,BBN-Q/pyqgl2,1ecea1bbb15f45bd43bb584e80dea65a605633ee,2015-11-23T16:55:54Z,bdc34bc6474839cd491978f1c95e4836861e9fd8/650e09fd6357617c6878a3558f733ed89dcf1cf4/ad66aad5919b9be3fa1666414ef6b33de1936a95/,2016-02-24 10:19:10-05:00/2016-05-05 16:25:44-04:00/2016-09-15 15:13:28-04:00/,"fix up the AST annotations

make error messages more meaningful

I'm not certain whether this catches everything yet."
Assembly,BBN-Q/pyqgl2,395aca7906d60ceae9afeead847df29ecd4a9e5f,2016-05-26T03:19:11Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/f40d398390b0998ec36c58ba1b2fdf70e1df2e07/d6af00f88a8977a72366860560c799c3d61cad10/,2016-06-30 18:21:21-04:00/2016-06-13 19:30:38-04:00/2016-06-28 11:47:45-04:00/,handle Qfor/Qiter (in a simplistic way)
Assembly,BBN-Q/pyqgl2,c5e1724225fede74eb1fbb631c60e6268c04ec04,2016-05-25T22:32:15Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/a9dd7f112a122a61fbef6fd6fa436f008a55b98f/d6af00f88a8977a72366860560c799c3d61cad10/395aca7906d60ceae9afeead847df29ecd4a9e5f/,2016-06-30 18:21:21-04:00/2016-05-27 10:18:52-04:00/2016-06-28 11:47:45-04:00/2016-05-25 23:19:11-04:00/,"starting to work on new grouper

the previous grouper did not generalize to handling more
complicated compound statements, and was confused by
continue/break"
Assembly,BBN-Q/pyqgl2,a29ad125d1662023231fef50e27ee697ded4c333,2016-09-24T18:31:52Z,b3bff13f83081af9987d1d91ce1ba2df96836a9c/e07e07028cf66d29fb7ffd1f437550ed8c89a033/,2016-10-05 10:03:50-04:00/2016-09-28 13:55:57-04:00/,"remove unnecessary create_cal_seqs; fix Id call

create_cal_seqs is not referenced, but importing
it pulls in QGL modules, which causes problems.

Id requires that the length parameter be a kwarg.
(this may be considered an undesirable requirement,
but that's a question for another discussion)"
Assembly,BBN-Q/pyqgl2,e8869d31e5329a6781f8b9f75c44265c045d706a,2016-03-28T20:39:09Z,405d4f545ba6a13bf973f700b4dc952760dea045/ff4d3749290f55f783502b3f8ff6e0b5e36fe2b4/94ecc65f1c35bc0258853e0877423adf56f3a4c7/376981202e56dab3c048c7d6877b21aef9cac7e8/3b31a3ecf49fb20b15d38883465414f14336ce36/0d5953cfae64c729ecac1086ff403495241503d9/d898e0c46e8c73fbcea9448087435b9d751bd404/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-03-31 19:47:54-04:00/2016-04-20 13:32:45-04:00/2016-07-05 16:53:11-04:00/2016-05-05 16:06:12-04:00/2016-05-02 18:42:48-04:00/2016-04-07 14:40:32-04:00/2016-04-28 13:09:58-04:00/2017-04-06 21:52:58-04:00/,use proper Qubit creating function and the proper label. Hack to add in QGL1 imports
Assembly,BBN-Q/pyqgl2,1fd84313e44d1e74d3ea86ee9885263719001685,2016-08-18T16:14:41Z,e937c1ca91d90f2028ad1d12dadac85fea2e1e58/403f8ca7cc9b1ca8be023b680e96790293ca06bb/66ed22c49453a5aa49f7866faffbcb0efa22df35/fa489ce07d9993cc1ea19e1606344b4da6f5acbc/d5f2789d7813c76d64040a7630985264e5b9517c/6577998beb36fc49b99e50a9253d5e32226ef37c/,2016-09-09 12:01:39-04:00/2017-05-25 16:22:05-04:00/2017-05-15 10:21:32-04:00/2016-10-27 11:57:29-04:00/2016-09-09 11:41:33-04:00/2016-09-09 12:09:16-04:00/,"Large refactor of qgl2_compile_to_hardware to use more helper functions. ID which sequence is which qubit using new group_marker barriers. Supply new args to compile_to_hardware to tell QGL1 explicitly which Qubit this is (and so to ignore others), and which Edges to include here (and so which to ignore). Log a warning if in the end there is overlap in generated HD5 files. For picking where to compile each Edge, match with the sequence with the same AWG if any, else compile with the Qubit that is the source of the Edge."
Assembly,BBN-Q/pyqgl2,0527f57fb9d8fb427497f729f752f80e8ea41a6c,2016-05-06T20:18:59Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-05-25 16:22:05-04:00/2017-04-06 10:01:35-04:00/,Sequence creator is not really used. Add comments on steps in the main compile function
Assembly,BBN-Q/pyqgl2,9690375f0473337f0aa3593260803bdb26444a62,2016-09-12T20:38:08Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/68a2c89dafa19dc73b7b221abfcde55245394383/4d4482de68da8dfcd9a3683e4eabae12988943e6/9589e07bf9bf4718438097274d9b66baedd3e222/42f5e63fc9cd40e7678004f4cd4c544cb35761b0/032f0241eb969870a941956a7db8a17a86e76aa9/1a21dd1faaa1a563ad8ce349d3ef5c87ca3d8132/3bfe751db8d3c46463119be914a2cac7094da49d/1319777c1cc8972ba40595e08dfd3a7627cb7837/530ff82ff7e2cbb7ad5a3262477407be7db0b186/cda56a922723f87a7a6d39af3a862553609f2927/,2017-03-23 14:06:24-04:00/2016-09-27 18:58:40-04:00/2016-09-29 15:11:40-04:00/2016-10-07 09:26:40-04:00/2016-09-24 15:54:45-04:00/2017-04-11 16:00:27-04:00/2016-09-21 10:38:58-04:00/2016-09-29 14:53:30-04:00/2016-09-28 14:03:44-04:00/2017-04-11 11:41:47-04:00/2019-06-24 13:25:22-04:00/,"add missing Swap and RabiAmp_NQubits. Comments/cleanup. RabiWidth still fails, and you can't do calibration sequences"
Assembly,BBN-Q/pyqgl2,3391175511edfe746a3f461b105a99798d3e1916,2017-04-07T20:21:14Z,19f090f0b17ed60b9195793f183eae5fd7b73a2b/,2017-04-13 16:03:24-04:00/,Handle expansion of multiple QRegister arguments.
Assembly,BBN-Q/pyqgl2,c16764c2105be1dc3d45200de7498c1618a8c38d,2016-03-31T15:26:10Z,e695735349c259a143aae1fd71754e5fa2dd4012/7f4a29da2b40a21f72485bc2ae158602c93c7fb8/940bd940dd9341d40b72f18f0afb862c7d0e78bc/,2016-04-19 12:01:58-04:00/2016-04-01 16:05:53-04:00/2016-09-06 16:44:46-04:00/,"more helpers to set up channels, make things runnable"
Assembly,BBN-Q/pyqgl2,03077bcf6b8ee1f962d0b8a881384b9b16b65fef,2016-09-12T20:39:30Z,cda56a922723f87a7a6d39af3a862553609f2927/,2019-06-24 13:25:22-04:00/,typo in method name
Assembly,BBN-Q/pyqgl2,7f4a29da2b40a21f72485bc2ae158602c93c7fb8,2016-04-01T20:05:53Z,e695735349c259a143aae1fd71754e5fa2dd4012/db6d3739e75272be796f25530cdfa878edb0b53b/5fedc3f741202f5a0209858aef39fa476f920fe2/940bd940dd9341d40b72f18f0afb862c7d0e78bc/,2016-04-19 12:01:58-04:00/2016-09-20 09:30:02-04:00/2016-10-13 19:38:27-04:00/2016-09-06 16:44:46-04:00/,"Use QubitFactory, etc. Try using an existing Channel Library (if it has a slaveTrig), else use the canned one"
Assembly,BBN-Q/pyqgl2,d1b934f122ae57bcc4b13d919b1e9490bd9b810f,2016-11-14T20:22:03Z,69637b7eae113a830fa13c067714ceef1283f19c/01ce0e0df358e1eff6e6c543fed7003b64aca25f/a7d46fd690f63f96ceecf8e7e9fb0738b2178035/,2019-10-02 13:57:45-04:00/2017-04-06 13:58:32-04:00/2017-04-06 13:59:05-04:00/,"Add top level README

Stealing most content from what was in doc/README.txt."
Assembly,BBN-Q/pyqgl2,0b93b5de5824af6abfbe5d6f44f47ede5dcc917b,2016-09-19T19:25:32Z,cda56a922723f87a7a6d39af3a862553609f2927/,2019-06-24 13:25:22-04:00/,Remove some uses of kwargs in resFunction.
Assembly,BBN-Q/pyqgl2,337228264a2260fb9f9b3d5dcc15e3cd947f72ab,2016-09-19T19:45:21Z,db6d3739e75272be796f25530cdfa878edb0b53b/,2016-09-20 09:30:02-04:00/,absolute import of helpers to support other run modes
Assembly,BBN-Q/pyqgl2,2b099279cb339afbc5e464e40c3fbed00c8f48be,2016-09-14T17:22:33Z,69637b7eae113a830fa13c067714ceef1283f19c/2039148c0479387a4147c430a84c9d39f53a895d/b3bff13f83081af9987d1d91ce1ba2df96836a9c/718fd84e435f86a42c970389e82b7699260aed36/,2019-10-02 13:57:45-04:00/2016-10-04 16:46:41-04:00/2016-10-05 10:03:50-04:00/2019-08-15 15:53:57-04:00/,update lists of issues
Assembly,BBN-Q/pyqgl2,fc5ac19d2d25fd7bfbebe35569e8fba06bc205b6,2016-04-26T19:18:08Z,9690375f0473337f0aa3593260803bdb26444a62/956225b652eb80b56aa726a830a1f4768eff67f0/be00e5ce8a507df5a79d7190607fcccef78cfcfe/cda56a922723f87a7a6d39af3a862553609f2927/,2016-09-12 16:38:08-04:00/2016-07-25 14:28:24-04:00/2016-04-26 15:26:49-04:00/2019-06-24 13:25:22-04:00/,"added example of expression expansion

loop iters expansion of np.linspace"
Assembly,BBN-Q/pyqgl2,bb3fde982a8fd9fca8b70ee3aeb7c60f2e8abea0,2016-01-28T22:00:04Z,535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/,2017-03-30 13:31:14-04:00/,"clean imports, declare a qgl2main"
Assembly,BBN-Q/pyqgl2,968345dae11e8dbf983c06dc26cd22c6cac38aa4,2016-10-12T14:11:57Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/ce4252b38c69a4d52eadbd4454de6c051c90be8d/d8accbb9ab7498018af7026cdfb5fcb6e0f7689c/032f0241eb969870a941956a7db8a17a86e76aa9/17e96f5d2e64398881ad5427d3f1740d8c055a66/a01b8a0a67574d86a037d69d326f16eb6e5bdb60/1ebdb539ee352cb9ff78f38b08205c50ff612299/356749f00b05fc4ae7521f49c9f90680a38a452e/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-13 10:01:57-04:00/2019-06-12 13:42:45-04:00/2017-03-23 12:03:20-04:00/2017-04-11 16:00:27-04:00/2017-03-27 15:53:23-04:00/2017-04-07 15:05:12-04:00/2019-06-11 14:58:17-04:00/2017-04-11 16:53:22-04:00/2017-03-22 16:13:42-04:00/,Update AllXY to take an argument.
Assembly,BBN-Q/pyqgl2,27f82084b3176663baa8375a9d5bc013479f51be,2017-03-29T15:21:06Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/bb728282e2365260f4ebd992c1c79b1c6e550856/19f090f0b17ed60b9195793f183eae5fd7b73a2b/,2017-04-07 15:05:12-04:00/2017-03-30 15:26:04-04:00/2017-04-13 16:03:24-04:00/,"CNOT_CR -> CNOT

Following change to QGL1 allowing config control of CNOT implementation."
Assembly,BBN-Q/pyqgl2,ee605da2e7adbd5202696c1e5ba4bb90c088b663,2015-11-11T22:17:49Z,170e720cbfa5069f523c4eaed7d550185e33eb6f/,2016-04-06 17:19:48-04:00/,"add hook for specifying main func name

don't try to find the main function here; it's
already been located (if it exists) by the importer"
Assembly,BBN-Q/pyqgl2,b8cfa4a08503d7736630005f6bdd02ff6988feb6,2016-05-27T13:13:20Z,9ade3a7c693ad77c43f5aa23278accef63ff6971/15cfd751e27195c5f669dcae125e4cb0190723f7/dabe675ff8918039179cf53f1b22c7d99597ee52/395f3a901018b3208958b1ae0859880e3dce68d1/749167b84aef793a81aebf049b20d8e014384207/c1e7ad8ac4577fe6426c7a72d601a22c62352106/95bc42df89afc143ad25d53b1ac50588b8414eb0/,2016-06-24 10:48:34-04:00/2016-07-19 11:08:55-04:00/2016-07-22 09:48:58-04:00/2016-07-07 14:35:17-04:00/2016-05-27 10:55:01-04:00/2016-05-27 10:45:52-04:00/2016-07-07 13:46:31-04:00/,couple bug fixes handling repeat blocks. Add some test code.
Assembly,BBN-Q/pyqgl2,86c45050dbbb7149fe86c4ec5697249eb15f4871,2016-03-17T19:43:23Z,7775f56f5e3743a9b6b73f33a063cfd3ed1a8871/,2016-03-18 10:12:26-04:00/,do not specialize / inline / rewrite qgl_stubs. So the call looks like X(QBIT_1) and not X__QBIT_1__qgl2_tmp_056(QBIT_1)
Assembly,BBN-Q/pyqgl2,ebbe7b3dd394d01a709cb375e67c1c95353e9ce3,2016-09-27T20:36:30Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-03-22 16:17:55-04:00/2017-03-22 16:13:42-04:00/,"fix call to compileFunction; preserve local state

compileFunction was being called with args out of order;
probably due to an undetectedly botched merge

also add a call to preserve the local state so that
it's not overwritten.  Ignoring the attempt to streamline
the local state by throwing away unreferenced variables,
because when we do that we tend to throw away things
that we're going to need in the future."
Assembly,BBN-Q/pyqgl2,ecb2c66c7033372fcfa0a60672b5b9a7431d9ef3,2016-02-29T02:58:14Z,7748910e5e76d718722d7db3b5f906b36e621345/,2016-02-29 19:01:34-05:00/,"prototype of debug message printer

prints the function name it was called from, as well
as the given message"
Assembly,BBN-Q/pyqgl2,366567b4d725acd0c00d4b51db25449519d70673,2015-10-15T17:39:02Z,24c142ed6f812c7d98b7e107758e0f77f469c889/2a85685e09084ad4434d7bfe94997a23eb486dec/2ac21c47f37e72605037fc66f90c079e05335ee7/,2015-11-10 19:44:50-05:00/2015-10-15 15:53:22-04:00/2015-10-16 10:21:58-04:00/,"checking formal params vs actuals in calls

this is just a mockup, because it checks during
the initial parse, and therefore it punts when
it gets to undefined symbols because it doesn't
know if they're undefined in the final program,
or whether they're a forward reference.  This
check needs to be done after the symbol table
is complete, so it can make a definite statement
about every call."
Assembly,BBN-Q/pyqgl2,22824054d1310481e62467223f9aa36339597259,2016-03-03T23:57:07Z,2046d547729c7d5669507b6cbae46aa69a3746dd/6eb72ec72bd75379fdc3205f542f21ec3311fb48/,2017-03-24 13:15:04-04:00/2016-05-17 13:33:17-04:00/,"optimize ""if"" case when there's no else"
Assembly,BBN-Q/pyqgl2,e937c1ca91d90f2028ad1d12dadac85fea2e1e58,2016-09-09T16:01:39Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/,2017-05-25 16:22:05-04:00/,"Move creation of AWG to sequence map to after we remove empty sequences (if any), to simplify code"
Assembly,BBN-Q/pyqgl2,39188a72c8a2484e3a13f5fb4c3eb65131889f29,2019-06-12T20:34:55Z,d5259010741db8ab055c5384c6bcba80eebfddd8/39305cd69ec192acd0d702be7874490c90e702f1/9217721da958f15856927c4f9695c61f2fdad3f1/e49f367ea90c010d899341fb11ed3095ad3c9faa/ce51c3da3e5924e22bbbe958258a7042f1cf7a51/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/cda56a922723f87a7a6d39af3a862553609f2927/,2019-06-18 19:55:45-04:00/2019-06-17 18:28:39-04:00/2019-06-19 13:11:28-04:00/2019-09-13 14:41:54-04:00/2019-06-25 15:48:25-04:00/2019-06-19 13:35:55-04:00/2019-06-24 13:25:22-04:00/,qbit -> qreg
Assembly,BBN-Q/pyqgl2,ab3b38a7721c6ed4065589340f32575eb94d7f6d,2016-06-21T22:12:34Z,a909069892de1c660acff723571e2043632ec785/96ba32c894075dee8727fb1565dc534a32235f6d/2546ec4677a6fbeb30d46476d4f9b17c29add300/f363a7bf1f9f3c912196ed1807905282125a0b57/339c185078bc4c6974ee501387f6d40a5ae607e4/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2016-06-22 18:17:09-04:00/2016-07-07 18:10:24-04:00/2016-06-23 11:05:47-04:00/2016-06-27 21:09:50-04:00/2016-07-07 13:53:43-04:00/2017-04-06 10:01:35-04:00/,"AddBarriers: fixed how barriers are created/named

each barrier gets a unique ID (not matching start/end)
and the list of qbits/channels is provided as an explicit
list, not as *args.

also a lot of changes in this commit to the sequencer,
but they're broken and the basic algorithm has flaws,
so it's all going to be replaced"
Assembly,BBN-Q/pyqgl2,3f2ea3d243268ee50c8dd32c1d313616815a625f,2016-05-11T15:11:14Z,636398387db14da08e2c58a533b9fb9d72bdde22/722cebfeda7fadce9a4657971bd7731fc85ca74a/f5ccd1ce8f086e4b45de37a3f0bf267889fdfcc1/78a0b3164e05616a366846fe724c3becb816a257/cc6d6bc7882fe4742346762ceabd214a384d8f44/2592a6e0d6f662ba969be6d416a7085870a5c113/6b74157b25594835d243b7fa57a37fe892c5afae/d8bd1ce6444dee95ffc9b239d6937cdf4582eb2d/bfb4909d003907498efdc50306aa0872c0d4bc4b/a65b9479f6dc37d81e38f6f5ad495865b8f93fc4/22e4ab7eafadedc1f02b9419ff20608aa5fa27cf/f7d4cf77312b6c2efe33a5f108bcc901f3f6b792/94ecc65f1c35bc0258853e0877423adf56f3a4c7/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-06-03 14:07:12-04:00/2017-03-22 16:18:22-04:00/2016-06-06 10:50:13-04:00/2016-07-05 12:16:42-04:00/2016-09-19 15:21:57-04:00/2016-05-13 09:57:15-04:00/2016-07-01 12:21:43-04:00/2016-05-29 21:39:11-04:00/2017-04-07 13:22:20-04:00/2016-10-10 11:27:29-04:00/2016-06-23 18:04:16-04:00/2016-07-22 12:21:12-04:00/2016-07-05 16:53:11-04:00/2017-04-06 21:52:58-04:00/,Add cleaned up multi qbit function creator and use it instead of single.py
Assembly,BBN-Q/pyqgl2,183b0c372c530bd2222fdcbe3bf86cd1f7de6d5a,2015-11-06T18:51:55Z,e9291c43ef1f7699221b17647d9e1d2d27ce4c88/,2016-02-25 11:20:51-05:00/,"add importer to CheckSymtab; fix error msg

there was an error message with an incorrect list
of parameters, which was previously undetected because
the error message hadn't been tested properly"
Assembly,BBN-Q/pyqgl2,80b278013265c4476c18f186802fdbd4d89e70a7,2015-12-02T00:15:24Z,0d536afaa91937b0e715a35e018ecdd2a98877f3/3158bc6348a3a381b74a26dbe1209c7c34525445/d2d371f122fb02f53f98192f118f508091a2192b/baf5f8b2e3dd171f03c5a05a12d0106dee3491ce/cf0bada178af4dea3dbba067b34440de6e6809f9/,2016-02-08 15:16:53-05:00/2016-03-17 13:39:35-04:00/2016-01-20 14:36:56-05:00/2016-06-22 13:23:23-04:00/2016-10-06 17:22:01-04:00/,"adding module from meta, with bugfixes

NOTE: this code is BSD licensed.  Contains BBN project edits
but we are not the original copyright holders

the 'meta' package code for pretty-printing ASTs
doesn't understand Python3 'with' statements;
this version fixes that problem.

There are allegedly other shortcomings in this
module, which we'll either need to fix, or find
new replacement for."
Assembly,BBN-Q/pyqgl2,ef101589a68a6cf182e82a75489ff49d93580d7c,2019-08-16T18:24:21Z,bc3b21ab6c5b4b247cd632cc581cf9e0301a1b14/,2019-09-13 14:38:54-04:00/,"add, test more - working on RB functions"
Assembly,BBN-Q/pyqgl2,353925864e04c01b8bfe65e537a1a2537a89668e,2016-06-16T21:21:24Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/f363a7bf1f9f3c912196ed1807905282125a0b57/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2017-04-06 10:01:35-04:00/2016-06-27 21:09:50-04:00/2016-09-15 13:53:59-04:00/,finish grouping of main function
Assembly,BBN-Q/pyqgl2,956225b652eb80b56aa726a830a1f4768eff67f0,2016-07-25T18:28:24Z,d5259010741db8ab055c5384c6bcba80eebfddd8/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/30ecc1f528c973a326d224463ff6f94ef4de01f9/be22af1c91b4634ee4f2e868f8e14b159d8792a2/a29ad125d1662023231fef50e27ee697ded4c333/b8ff0910fe61d135b330e97df31656e4b5e2d477/39305cd69ec192acd0d702be7874490c90e702f1/60ff672fe63657948385d69b9f33e497f58ef28b/39e3932cd90e5ef914db10f83a30b0dd04f434d2/93e91f3cb853321899340850a241a5c237f40b31/9690375f0473337f0aa3593260803bdb26444a62/718fd84e435f86a42c970389e82b7699260aed36/5c12dd53a964fb5e4ea4bc1ef5110358b8bb404c/b5ad2f88d155f15bf456de242e90f020cd0b0249/968345dae11e8dbf983c06dc26cd22c6cac38aa4/f2828e3bfe933a2d4b9111a7125f5207cec6a038/39188a72c8a2484e3a13f5fb4c3eb65131889f29/5c756b507688cff353ca027bc7711bbcb738ebce/73d3663612c5127c1e6b036a9f40e86089645906/ff865dfc645334e85b215d0cfa98a0abb3787c54/940bd940dd9341d40b72f18f0afb862c7d0e78bc/54f882a9e98ca017fc3b027ff85c003fe97b4a9f/9217721da958f15856927c4f9695c61f2fdad3f1/2b099279cb339afbc5e464e40c3fbed00c8f48be/b3bff13f83081af9987d1d91ce1ba2df96836a9c/,2019-06-18 19:55:45-04:00/2016-10-07 09:39:34-04:00/2018-10-10 18:12:56-04:00/2016-08-22 14:52:25-04:00/2016-09-24 14:31:52-04:00/2016-08-22 14:54:21-04:00/2019-06-17 18:28:39-04:00/2016-09-24 15:57:51-04:00/2016-10-12 10:18:52-04:00/2017-02-16 14:56:23-05:00/2016-09-12 16:38:08-04:00/2019-08-15 15:53:57-04:00/2016-10-07 09:58:51-04:00/2016-08-22 11:29:55-04:00/2016-10-12 10:11:57-04:00/2016-09-12 16:42:04-04:00/2019-06-12 16:34:55-04:00/2016-09-15 14:24:01-04:00/2016-09-29 16:36:27-04:00/2016-08-22 14:53:33-04:00/2016-09-06 16:44:46-04:00/2016-09-12 16:40:47-04:00/2019-06-19 13:11:28-04:00/2016-09-14 13:22:33-04:00/2016-10-05 10:03:50-04:00/,"clean up basic sequences, comment on current state of affairs"
Assembly,BBN-Q/pyqgl2,e637bcf305da160c4e144b1482d4bcbe0970d130,2016-01-29T17:19:26Z,aad9ff28bb3c75b8e286222accc1bcc390e9e839/535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/2df719e8418b6cd4f090cc02e0075d97278bff13/,2016-02-17 10:42:18-05:00/2017-03-30 13:31:14-04:00/2016-03-31 15:01:58-04:00/,move the imports outside the main() and make them explicitly list the methods we're importing to be clearer. Add redefining of a few more methods.
Assembly,BBN-Q/pyqgl2,5db9a0bd92135038df4120e79f0a8fd1d8e01546,2016-03-17T17:43:19Z,1b3b25ee248459f65bc560442fd4dff796c04d20/26e5f34431e1cb9719436e9bd96101df6c7eaa00/,2016-04-01 13:15:08-04:00/2016-05-13 14:55:26-04:00/,strip unused plumbing stuff
Assembly,BBN-Q/pyqgl2,5c9fcdfb78b71fb2283dd954bc0542f315aa454b,2016-04-08T19:20:02Z,376981202e56dab3c048c7d6877b21aef9cac7e8/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/e9b9bdd2868994f62fe0d3e5eaad4551d12556e3/e3989d7514231679f7be5c8c52c28901f8e44584/,2016-05-05 16:06:12-04:00/2019-09-26 12:06:38-04:00/2016-04-15 17:04:58-04:00/2016-04-19 12:10:33-04:00/,Rename notebooks for clarity
Assembly,BBN-Q/pyqgl2,93f28bcd1a72f82ff7287dfd3a3245b86d27b14a,2016-02-19T19:41:08Z,853d88257383734c38522454933a77f3bf15510c/,2016-03-01 12:59:34-05:00/,add missing import of concur
Assembly,BBN-Q/pyqgl2,0aed8a16950da4f7d3e8995ebec4aa0ac5ef2418,2016-07-13T15:33:51Z,15cfd751e27195c5f669dcae125e4cb0190723f7/736e28cd113ab3ed78568a82a5f831ab845f6e27/4398d8b4744a167af3a2712c7e695f44945484e7/d0b7e03ba8ce86e581d677e743d62ef36f8c30ef/185d56ad04f32b81f1c3988324339bdc79c39ae3/bc4722240b0ee0c4509d3a5eba4eb07b04f86bbb/6785cdccb960d6740112ec1b0a46f387e1f98417/,2016-07-19 11:08:55-04:00/2016-09-09 13:03:19-04:00/2016-09-09 10:13:15-04:00/2016-07-13 11:48:06-04:00/2016-07-13 12:21:43-04:00/2016-07-13 13:48:05-04:00/2016-09-27 11:32:11-04:00/,clean log messages
Assembly,BBN-Q/pyqgl2,722cebfeda7fadce9a4657971bd7731fc85ca74a,2017-03-22T20:18:22Z,bfb4909d003907498efdc50306aa0872c0d4bc4b/987e1e67bda13a4b7777ee23c2268f2885d42aec/,2017-04-07 13:22:20-04:00/2017-03-22 16:25:57-04:00/,Produce a single QGL1 sequence stream.
Assembly,BBN-Q/pyqgl2,cffae29a6419082dada5e6ab378782958b5390c8,2016-05-19T18:02:35Z,d3378ba814f5634ebabe9724cf0c5fd380f31e7c/012e2047959d9361522b90985f1b363a697b4897/9ade3a7c693ad77c43f5aa23278accef63ff6971/15cfd751e27195c5f669dcae125e4cb0190723f7/b8cfa4a08503d7736630005f6bdd02ff6988feb6/d5473a57ff46e031f05aeb87eebff36e89f6b0c8/c1e7ad8ac4577fe6426c7a72d601a22c62352106/9a9f0640ccef6ba4e6bc87c71db79c91995615f9/531561bbac6870cd85c2c2a8121e0f2752401929/,2016-05-26 16:06:58-04:00/2016-05-19 14:28:56-04:00/2016-06-24 10:48:34-04:00/2016-07-19 11:08:55-04:00/2016-05-27 09:13:20-04:00/2016-05-20 10:47:50-04:00/2016-05-27 10:45:52-04:00/2016-06-24 16:30:56-04:00/2016-05-19 15:20:50-04:00/,"First cut code to look at generated QGL sequences and replace Waits with Ids where possible, before calling compile_to_hardware"
Assembly,BBN-Q/pyqgl2,2e56196f4ba58a0ec597f2d4d3e35bf98fc4211d,2016-04-08T13:45:23Z,f72bf864ed14524c37805b74c50f87a7282c5450/,2016-04-08 13:15:44-04:00/,"flag orphan statements as errors

if we get an orphan statement, it means that the
compilation has failed."
Assembly,BBN-Q/pyqgl2,2939142124e4dbc448cd2ceeb02484602e5c2e7d,2016-06-14T10:55:43Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,add param to force recursion when detecting qbits
Assembly,BBN-Q/pyqgl2,3e317a747a48325612aa748bd4c7d38080951ed0,2016-06-22T22:13:47Z,dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/5529eed5daa11b86263c7d1393349ebfaede5aa4/0b2de90291611a6282d22a52cadfb837a874f2d4/5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8/,2017-04-05 17:07:07-04:00/2016-06-23 16:43:48-04:00/2016-06-27 18:40:13-04:00/2016-06-23 18:00:39-04:00/,"move convenience function is_with_label() to global

this can be used in several places; it shouldn't be
an instance method."
Assembly,BBN-Q/pyqgl2,0086876dc057a441ec04f91f3fedb4d986c976c2,2015-12-14T23:24:12Z,cb52749fbdf212d4a6d996d954ac11631c351033/2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/b24538119fd6d1243f08b19ab30a159522b8abe9/,2016-02-26 17:00:11-05:00/2017-03-22 16:17:55-04:00/2017-04-06 10:01:35-04:00/2016-02-26 16:25:29-05:00/,"use new NodeError.halt_on_error() method

if a previous phase failed, don't try the next one"
Assembly,BBN-Q/pyqgl2,88add230f0b5aab97676855a8556987f29f96464,2019-06-11T17:49:21Z,322c306829bd1123c4df21340342d534ac2a0762/,2019-06-24 13:23:10-04:00/,Tweak QRegister() constructor to error check q1 style names and improve error messages
Assembly,BBN-Q/pyqgl2,f1248f13fdc974e8867ee361ab1bb200d4b99b10,2016-04-08T14:19:09Z,0024e44a9ebbf347bbad90151d759fc2060656da/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/48f241e225aefb0576662297ea290f68b0c9fb00/940bd940dd9341d40b72f18f0afb862c7d0e78bc/cda56a922723f87a7a6d39af3a862553609f2927/d3b983ea87b19a1a5ad45089e78773e8573603aa/42f5e63fc9cd40e7678004f4cd4c544cb35761b0/376981202e56dab3c048c7d6877b21aef9cac7e8/0a3dd3eefe1d6d139cfa6d86c04061961f13b606/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/9690375f0473337f0aa3593260803bdb26444a62/479ff3b17446485d0c5e518a9c0bbbb3593848c3/102ba7d564b5b98134c4f3aad5a4920139e7b14a/,2016-04-20 12:45:43-04:00/2019-09-26 12:06:38-04:00/2016-04-20 13:35:26-04:00/2016-09-06 16:44:46-04:00/2019-06-24 13:25:22-04:00/2016-07-25 10:26:08-04:00/2016-09-24 15:54:45-04:00/2016-05-05 16:06:12-04:00/2016-07-25 10:25:21-04:00/2016-09-07 16:05:57-04:00/2016-09-12 16:38:08-04:00/2016-04-11 11:18:58-04:00/2016-04-08 15:17:02-04:00/,start at a RabiWidth for QGL2
Assembly,BBN-Q/pyqgl2,15ac4c990fd3027ad364bb7e7292799ed57ea936,2016-05-30T01:11:52Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/f40d398390b0998ec36c58ba1b2fdf70e1df2e07/,2016-06-30 18:21:21-04:00/2016-06-13 19:30:38-04:00/,"handle sequential/singleton stmnts at top level

if the programmer doesn't wrap the program inside a
with-concur, treat everything as strictly sequential.
Rewrite the program as if the programmer had asked
for barriers between each statement pair.

I'm not sure this is what we want, but at least it's
easy to document/explain what's going on."
Assembly,BBN-Q/pyqgl2,4dea0b5e8cb550ffbe09d9e960cdfcaa5b96160f,2015-11-10T03:23:52Z,3c99f4af70fffe2f5f8413c249c2de9a8d9cef43/1db148f56dd9c107b0c4e6c670fc4ca07a15f477/b6e5b37ed95a2b3fc693b6efeccd6522c938ff6d/,2016-07-01 11:11:51-04:00/2015-11-10 10:12:32-05:00/2015-11-24 13:04:27-05:00/,"move away from the custom visitors

Now that we're annotating every node with the name
of the source file it came from, there's no need for
the visitor mix-ins for pretty-printing error messages.

For the short term I'm leaving the mix-ins in place
(but reimplementing them in terms of module methods)
but eventually they should be removed.

TODO: move the state out of a module variable so that
it doesn't have to appear ""global"".  It can be a
class variable instead."
Assembly,BBN-Q/pyqgl2,4358a144499eaad62afe2e7aea18873442c95534,2016-04-01T20:06:43Z,48f241e225aefb0576662297ea290f68b0c9fb00/0a3dd3eefe1d6d139cfa6d86c04061961f13b606/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/482eac587e274550fd02d8310b03b3e6556d1fed/479ff3b17446485d0c5e518a9c0bbbb3593848c3/cda56a922723f87a7a6d39af3a862553609f2927/,2016-04-20 13:35:26-04:00/2016-07-25 10:25:21-04:00/2016-09-07 16:05:57-04:00/2016-04-05 21:16:22-04:00/2016-04-11 11:18:58-04:00/2019-06-24 13:25:22-04:00/,define doRabiAmp that takes no args
Assembly,BBN-Q/pyqgl2,3e95679944b3e26a5a82e4169f0ec9dadfd03b33,2016-03-17T22:22:33Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/7535de8805c2506a1bc19259065423bbf7e7a135/3337c7e54bca2f5217d95353cf6c3b6a128c9dea/94250b99d38edd67798a85a10aa51289b898fa34/,2017-04-06 10:01:35-04:00/2016-04-04 19:52:03-04:00/2016-09-19 15:43:52-04:00/2016-04-07 12:27:11-04:00/,add the wait/sync commands as the last step
Assembly,BBN-Q/pyqgl2,4d4482de68da8dfcd9a3683e4eabae12988943e6,2016-09-29T19:11:40Z,232aa6630dee440efd89b8cd05d67e0a35fbe264/032f0241eb969870a941956a7db8a17a86e76aa9/c3e8a4a8e1abef53e1fb09e4aa9e260e8a54a5be/93e91f3cb853321899340850a241a5c237f40b31/530ff82ff7e2cbb7ad5a3262477407be7db0b186/,2017-03-23 14:06:24-04:00/2017-04-11 16:00:27-04:00/2017-03-23 12:02:29-04:00/2017-02-16 14:56:23-05:00/2017-04-11 11:41:47-04:00/,Remove measChans from create_cal_seqs.
Assembly,BBN-Q/pyqgl2,d785eac5b6ee96f679414a910afaac817e3cc490,2016-01-26T18:33:50Z,535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/bc0e4a142f6bebe3670eaacde69adeeb224b77d1/,2017-03-30 13:31:14-04:00/2016-01-26 14:21:01-05:00/,comment on other setup steps needed
Assembly,BBN-Q/pyqgl2,656d3d21ec32980c7e3cad0e6f0fcfd8866d955f,2016-01-29T21:48:57Z,30b22f27f5b740f388e8ed7a01f2efacc086f507/baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2016-03-21 16:46:01-04:00/2019-06-11 14:59:37-04:00/,"Add ""demo"" test."
Assembly,BBN-Q/pyqgl2,817843074bbf8b617efa588a21520586498deebf,2016-02-22T18:02:01Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/ce4252b38c69a4d52eadbd4454de6c051c90be8d/39305cd69ec192acd0d702be7874490c90e702f1/853d88257383734c38522454933a77f3bf15510c/ec5d2493b4d497df8407a5be031bc5df6971c364/615352f7b26ba981e27b58c382d9565184fccadd/93e91f3cb853321899340850a241a5c237f40b31/faed54ad9b90e3ad6ef9a772754cfc4335cc12bb/,2017-04-13 10:01:57-04:00/2019-06-12 13:42:45-04:00/2019-06-17 18:28:39-04:00/2016-03-01 12:59:34-05:00/2019-06-17 13:51:22-04:00/2016-03-17 13:40:17-04:00/2017-02-16 14:56:23-05:00/2016-02-29 09:10:30-05:00/,clean up test mains to match QGL2 compiler status. New AllXY variant matching current compiler abilities. Remove measChans from the aspirational Reset.
Assembly,BBN-Q/pyqgl2,258626ae0b8cc4848cf347b13ef5132e5f737dd8,2016-09-12T20:35:42Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/2039148c0479387a4147c430a84c9d39f53a895d/7f140d94808dfcfe9aa3d166e655ed117e48c3ea/,2017-04-07 15:05:12-04:00/2016-10-04 16:46:41-04:00/2016-10-07 09:39:34-04:00/,"comments/cleanup. Add list() around zip(). Add a missing import. With these changes, doRamsey and doInversionRecovery work (without calibration sequences)"
Assembly,BBN-Q/pyqgl2,27fcf7a781036856178a705f31c4d6397cea04b6,2016-06-13T18:26:17Z,2939142124e4dbc448cd2ceeb02484602e5c2e7d/467892d4bf102a5486ba18dc5b848f510ef6ca9a/4611edd714d596507beed2a26db2471c20df2d03/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/353925864e04c01b8bfe65e537a1a2537a89668e/ad545e053dab391e567b59e2ba672b39b8a337c6/0b2de90291611a6282d22a52cadfb837a874f2d4/f363a7bf1f9f3c912196ed1807905282125a0b57/f8cc371f9533693ca41474ec9ff47f6889874e13/31bc08fe845e19eb6d2141d5835dd6a15a69e5b2/,2016-06-14 06:55:43-04:00/2016-09-15 13:53:59-04:00/2016-10-04 18:09:39-04:00/2017-04-06 10:01:35-04:00/2016-06-16 17:21:24-04:00/2016-10-03 11:35:34-04:00/2016-06-27 18:40:13-04:00/2016-06-27 21:09:50-04:00/2016-06-13 15:48:06-04:00/2016-06-13 19:14:43-04:00/,new grouper code to augment/replace concur_unroll
Assembly,BBN-Q/pyqgl2,de966a014ccfcdb33674cf00b694beb01d73c40b,2015-11-06T22:47:53Z,5b6d59d06703388764770dec0f09cc6a260c0114/,2015-11-10 18:51:46-05:00/,"beginning of 'import-from'

half-baked; we need another level of indirection
because we can't just link the referenced methods
with the current context, because when we're
processing the referenced method they need to be
processed in the context they were originally defined
in...

So if you have

	from x import y

then when you expand y, you don't expand it in the
local namespace, you expand it in the context defined
by x.

The current code expands y in the current context,
which isn't what we want."
Assembly,BBN-Q/pyqgl2,356749f00b05fc4ae7521f49c9f90680a38a452e,2017-04-11T20:53:22Z,19f090f0b17ed60b9195793f183eae5fd7b73a2b/,2017-04-13 16:03:24-04:00/,Pass channel thru init() to Wait().
Assembly,BBN-Q/pyqgl2,ee239911931d312a9c7e4d47729ac2efc852b085,2016-03-03T23:23:29Z,6eb72ec72bd75379fdc3205f542f21ec3311fb48/deb76c4db75874c954110632919551dbd419a57d/9a15e9deb3b45bb80de99428b564937ae864f0ff/072803ac808aed256055e8f2de2e39e42806dd0c/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/a8f18d395029abc763d10eb1deaaedb2b56d9984/9c5a62b338523833d8bd2036ea2f829f1e726743/,2016-05-17 13:33:17-04:00/2016-03-08 19:31:02-05:00/2016-03-04 09:36:47-05:00/2016-03-04 08:22:01-05:00/2017-04-05 17:07:07-04:00/2016-03-08 17:37:26-05:00/2016-03-16 22:21:37-04:00/,"prototype of flattening code for control stmnts

only handles while/break/continue right now, and doesn't
completely integrate the results (but prints out what's
happening, for debugging purposes)"
Assembly,BBN-Q/pyqgl2,8782508880d376c2039a62e7d513657cc8e3bc5b,2016-04-20T18:06:37Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/,2017-04-13 10:01:57-04:00/,refix adding missing kwarg to ztheta
Assembly,BBN-Q/pyqgl2,1e82c887088d9486d959b82cf601552b4c0c005b,2019-06-24T16:46:02Z,4f88f89684171f024eb415bb1b642ab44f444012/,2019-08-15 18:46:31-04:00/,comments - no longer needed? Plus add int() call QGL version added
Assembly,BBN-Q/pyqgl2,ce51c3da3e5924e22bbbe958258a7042f1cf7a51,2019-06-25T19:48:25Z,0a6a77c169d7af5c4dd2dac7e23919a5123581c1/91ecf1456789b8d7b2bfcc7894979d78a06d507a/19638552c3a8e2399a050c83cc4e0a24ae79d652/3a016d8ee3404a53b9da8d4b35cdba34d6edc68b/,2019-08-16 14:22:52-04:00/2019-09-16 11:31:44-04:00/2019-09-12 16:33:05-04:00/2019-09-13 14:41:08-04:00/,"first pass impl of RB sequences. Uses an uncommited CliffordsBare in QGL that is all of Cliffords without clifford_seq, entangling_seq, generator_pulse. Need to figure out right solution"
Assembly,BBN-Q/pyqgl2,1162ba5035f3c69db1e8f9eba577d647409f8450,2016-04-11T15:01:20Z,0024e44a9ebbf347bbad90151d759fc2060656da/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/,2016-04-20 12:45:43-04:00/2019-09-26 12:06:38-04:00/,clean up notebook renaming on rebase
Assembly,BBN-Q/pyqgl2,30b22f27f5b740f388e8ed7a01f2efacc086f507,2016-03-21T20:46:01Z,aeb80edee57487014837931862d9aa617e949fac/baf708c6e624f8c1271336391ee2cda6bdc19fb5/26e5f34431e1cb9719436e9bd96101df6c7eaa00/73d3663612c5127c1e6b036a9f40e86089645906/987e1e67bda13a4b7777ee23c2268f2885d42aec/,2016-04-20 14:04:13-04:00/2019-06-11 14:59:37-04:00/2016-05-13 14:55:26-04:00/2016-09-29 16:36:27-04:00/2017-03-22 16:25:57-04:00/,Use Qubit() stub not old Qbit(). Comments on things that are intentionally or still errors. Some cleanup for recent language changes.
Assembly,BBN-Q/pyqgl2,6f4a0dc83d0e0da165b4871f0637089449a7bb2a,2016-03-28T20:38:17Z,1625d995d8c24a2e68b372cc03a3fe939e00a4de/,2016-04-04 19:59:13-04:00/,use Sync not SYNC to match QGL1
Assembly,BBN-Q/pyqgl2,9dbbe24dd3d13da980348daa251ca943bcfa06b0,2016-03-16T21:27:11Z,5204ecd0473c66ee812039244ace1e5a35cb22b7/,2016-06-30 18:32:06-04:00/,"fix/cleanup imports from concur_unroll

fix error in reference to QbitGrouper.find_qbits (now
find_all_channels), and clean up other imports"
Assembly,BBN-Q/pyqgl2,5a54e19c1cf208c0cafedeb8b03037ea9bfa47c8,2016-06-23T22:00:39Z,0b2de90291611a6282d22a52cadfb837a874f2d4/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2016-06-27 18:40:13-04:00/2017-04-05 17:07:07-04:00/,"remove dead code; use convenience funcs; error checking

make sure that the with-grouped nodes are where they ought to
be (instead of assuming that they're there) before converting
them to seq nodes.

Use is_with_call instead of special-purpose tests for different
kinds of with nodes

remove code for cases that are now illegal -- better to crash
if we end up in those situations that execute code that shouldn't
exist"
Assembly,BBN-Q/pyqgl2,097152c1727891087469a1405a895e142c4ab6c8,2016-01-27T13:44:58Z,dc38648e7543d7e7a8772ee327cedd83445708c8/39188a72c8a2484e3a13f5fb4c3eb65131889f29/,2016-02-26 13:44:02-05:00/2019-06-12 16:34:55-04:00/,2 minor tweaks based on feedback from Blake
Assembly,BBN-Q/pyqgl2,3337c7e54bca2f5217d95353cf6c3b6a128c9dea,2016-09-19T19:43:52Z,2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/,2017-03-22 16:17:55-04:00/,"replace another deepcopy with quickcopy, where it showed up as expensive timing test/tomo.py"
Assembly,BBN-Q/pyqgl2,c71c4573938072e9fd43c073be9f87bfc3a16650,2016-05-06T20:20:27Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/d3378ba814f5634ebabe9724cf0c5fd380f31e7c/f40d398390b0998ec36c58ba1b2fdf70e1df2e07/7049b38da4c002dd828f8666fceec215dbfe3361/,2016-06-30 18:21:21-04:00/2016-05-26 16:06:58-04:00/2016-06-13 19:30:38-04:00/2016-05-23 19:41:02-04:00/,with seqs now have a qgl_chan_list that is a list of channel names - expected really to be a list of 1 qbit name. This includes blocks with no qbit. This allows us at final compile time to ID which qbit gets each with seq block and append them together.
Assembly,BBN-Q/pyqgl2,a13cdc090b12b5a7f80f53dc9ca7bec6abf2032c,2016-04-18T14:30:07Z,8782508880d376c2039a62e7d513657cc8e3bc5b/0c6da23361448b8f9b88727fedfbfd3fe00b748a/,2016-04-20 14:06:37-04:00/2016-04-19 13:47:26-04:00/,Add some missing QGL1 stubs.
Assembly,BBN-Q/pyqgl2,26be132f45e36f65cd78634cbff17a8eb188bde7,2016-02-19T21:30:29Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/5271a92b91f026b55ea241b4dda434a6e9f309d7/e039c6e8a0bb7e0d55d010185a800bb7c3f514bb/853d88257383734c38522454933a77f3bf15510c/93e91f3cb853321899340850a241a5c237f40b31/817843074bbf8b617efa588a21520586498deebf/b8e2e96934317ff22b1f06088dc02a8e826312e7/,2017-04-13 10:01:57-04:00/2016-02-22 15:05:12-05:00/2016-02-22 14:45:24-05:00/2016-03-01 12:59:34-05:00/2017-02-16 14:56:23-05:00/2016-02-22 13:02:01-05:00/2019-06-17 14:44:15-04:00/,"add Blake's version of Reset, with FIXMEs and stub definition of init"
Assembly,BBN-Q/pyqgl2,720f9c5451e35ff1fddab56b97c998e179469dac,2016-10-03T20:24:18Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/c07ad45f0d29d88ac0b32f92cdc5b94b35cfd80e/,2017-04-06 10:01:35-04:00/2016-10-07 16:51:24-04:00/,"force qbit marking recursively in the final pass

The sequencing operations may add qbit dependencies
that won't be recognized unless the qbit marking is
done in forced-recursive mode (ignoring the results
of any previous passes and starting from scratch).
This is because in sequential contexts barriers can
add references to qbits that aren't referenced anywhere
else in the context, and these references must be detected
in order for the grouper to work correctly"
Assembly,BBN-Q/pyqgl2,aad9ff28bb3c75b8e286222accc1bcc390e9e839,2016-02-17T15:42:18Z,5271a92b91f026b55ea241b4dda434a6e9f309d7/4d4482de68da8dfcd9a3683e4eabae12988943e6/17b73b294d515538d7936547f2e8b250bd60131f/535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/93e91f3cb853321899340850a241a5c237f40b31/1cfbe6a5f9fe6597899e0654141da646ff601b2e/,2016-02-22 15:05:12-05:00/2016-09-29 15:11:40-04:00/2016-02-17 14:27:34-05:00/2017-03-30 13:31:14-04:00/2017-02-16 14:56:23-05:00/2016-02-18 16:00:04-05:00/,Initial implementation of Reset() for QGL1 without the multiple nested list comprehensions
Assembly,BBN-Q/pyqgl2,ed5b27345dd774e95430c3ed4aa55996718c345a,2017-04-07T21:33:24Z,77b56c4f5915d00483d92b608e7161e6867f5d59/007809886ea2b0ba82be8bc17002f9761dbfde36/10ec37bc54b130fcc47c8f92e2d35bebd453b8fb/,2017-04-07 21:12:55-04:00/2017-04-10 09:24:33-04:00/2017-04-07 20:35:59-04:00/,"Progress toward accepting QRegister slices in constructor.

i.e. this should be valid:

qr = QRegister(3)
qs = QRegister(qr[0], qr[2])"
Assembly,BBN-Q/pyqgl2,caffb91cf4e5a7529961afc48633b39d9dfd40a4,2016-04-01T19:01:29Z,ddcac9f4b6462353e220d31122be6894d5977b8d/,2016-04-04 20:01:53-04:00/,correctly import Wait/Sync from qgl2.qgl1
Assembly,BBN-Q/pyqgl2,93e91f3cb853321899340850a241a5c237f40b31,2017-02-16T19:56:23Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/2be4234461b4bd2af1f75c8f8fa483e5a80407c1/,2017-04-13 10:01:57-04:00/2019-08-16 14:21:52-04:00/,"Simplify feedback examples.

Code still doesn't run, but now looks closer to what we *want* it to look like."
Assembly,BBN-Q/pyqgl2,a01b8a0a67574d86a037d69d326f16eb6e5bdb60,2017-04-07T19:05:12Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/ce4252b38c69a4d52eadbd4454de6c051c90be8d/d5259010741db8ab055c5384c6bcba80eebfddd8/57699994fc8284b9f07054bd8a6f4c8e2379b4ac/39305cd69ec192acd0d702be7874490c90e702f1/232fe6aa404c73b84b9a8efe3daa8be0227869b2/30ecc1f528c973a326d224463ff6f94ef4de01f9/cda56a922723f87a7a6d39af3a862553609f2927/19f090f0b17ed60b9195793f183eae5fd7b73a2b/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/bca8536feff2be7b199139d76cc61a3668f864eb/530ff82ff7e2cbb7ad5a3262477407be7db0b186/9217721da958f15856927c4f9695c61f2fdad3f1/,2017-04-13 10:01:57-04:00/2019-06-12 13:42:45-04:00/2019-06-18 19:55:45-04:00/2017-04-11 15:23:04-04:00/2019-06-17 18:28:39-04:00/2017-04-07 17:09:27-04:00/2018-10-10 18:12:56-04:00/2019-06-24 13:25:22-04:00/2017-04-13 16:03:24-04:00/2019-06-19 13:35:55-04:00/2019-06-17 13:51:37-04:00/2017-04-11 11:41:47-04:00/2019-06-19 13:11:28-04:00/,"First pass at updating tests.

Most multi-qubit things still fail (as expected). Most single-qubit things are
working."
Assembly,BBN-Q/pyqgl2,a5654152dd88df7882c8e1564bc4b405316cc281,2016-09-29T18:20:19Z,a4defbf6fcb4282276e4dc6c9283ac5e4e19c751/356749f00b05fc4ae7521f49c9f90680a38a452e/c3e8a4a8e1abef53e1fb09e4aa9e260e8a54a5be/17e96f5d2e64398881ad5427d3f1740d8c055a66/,2017-03-24 14:28:10-04:00/2017-04-11 16:53:22-04:00/2017-03-23 12:02:29-04:00/2017-03-27 15:53:23-04:00/,Add 2 helpers for generating calibration sequences when there are 1 and 2 qubits
Assembly,BBN-Q/pyqgl2,15cfd751e27195c5f669dcae125e4cb0190723f7,2016-07-19T15:08:55Z,b1c4760d64e22ef20536af773c73f7ba64de45fa/,2016-07-19 11:59:37-04:00/,"redo pulseLengths; with new QGL somehow Pulse objects appear to be a list, since they extend namedtuple? Also, Qubits don't have a .equals, so set comparison is failing when looking for the previous barrier with the proper subset of channels. Perhaps the problem is really something in the way pulses are created from QGL2? For now, compare the string representation of Qubits to find the barrier with the superset of channels"
Assembly,BBN-Q/pyqgl2,16766622902ba4d9c88add3bb205992671b3d223,2017-03-29T20:35:37Z,57699994fc8284b9f07054bd8a6f4c8e2379b4ac/a76459f972ef3d91648f774e2d5982c4ed1dafcf/c6d3e47763e666a8bf2869e245fba6fe1fb42378/,2017-04-11 15:23:04-04:00/2017-04-13 10:01:57-04:00/2017-04-10 14:20:04-04:00/,Add a couple tests of scoping rules in the inliner.
Assembly,BBN-Q/pyqgl2,26e5f34431e1cb9719436e9bd96101df6c7eaa00,2016-05-13T18:55:26Z,a661828fd4fec56a8c62418c841267239f584bd3/5faa6ac5e6e2ba9e516886ba00c9e4679a84ba61/8cdf50e3f3c97e91dabf592fb4bb44e5ed4cef5e/a9a2dd937596e816e711ebab7a82b50033d5d691/,2016-05-19 14:09:38-04:00/2016-06-10 09:24:19-04:00/2016-07-15 11:42:29-04:00/2016-05-31 17:04:19-04:00/,Move init() from qgl2_plumbing to qgl2.qgl2
Assembly,BBN-Q/pyqgl2,5f2a10548f68dbf3408f82b9b0e40447482a5b45,2017-03-29T15:47:33Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/,2017-04-07 15:05:12-04:00/,"Add test of break/continue in EvalTransformer.

Starting with compile-time (""classical"") conditions."
Assembly,BBN-Q/pyqgl2,c2fc217df593a3e024b9ff80acb3017a069c6b56,2015-12-08T21:41:59Z,673d4af48598e6cf070394c538e19c3facb4f69b/170e720cbfa5069f523c4eaed7d550185e33eb6f/e281e54b46fe09121fa92f0c28e909cf522672f2/,2015-12-10 17:38:11-05:00/2016-04-06 17:19:48-04:00/2015-12-10 16:09:42-05:00/,"adding specialized functions back to namespace

still a lot of debugging cruft to remove"
Assembly,BBN-Q/pyqgl2,e61a8731b1c6a6fecb2e5a73a79dc7a96337535d,2016-07-28T14:49:08Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,fix the import for the real QGL1 Barrier function
Assembly,BBN-Q/pyqgl2,141c57349541664f3e52444c803cb107923d8d23,2016-01-26T20:28:25Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/8bb27d5f14b9bfb195eb004ed6e6ab9dfe7f2a21/b23cc2a0f8812536b6ffbfcaf0d8bc4014a01e47/626669397b8d6ad7bb524c1f3d7d9a6bbb0b11e8/d76040ae3c0c26e56a9f49cebfc6556034b8c5dd/9229e97de194c663a44b3870e30d65f052bc1027/d6aacdf26184476f6aee4969a831f8983d32d90d/,2016-06-30 18:21:21-04:00/2016-04-08 13:19:09-04:00/2016-01-29 14:39:21-05:00/2016-01-29 14:54:34-05:00/2016-02-15 16:03:45-05:00/2016-02-18 11:29:13-05:00/2016-01-29 17:14:04-05:00/2016-02-01 16:11:10-05:00/,"very early sketch of concurrent loop unrolling

Incomplete: mostly committing this because my VM keeps crashing
and I don't want to type this all in again."
Assembly,BBN-Q/pyqgl2,5da3bf36f1f05553fb713a14cc55fa46424b2cd8,2016-04-05T13:15:51Z,29302b00c0c43ad4b98ca18e095fd51cddd26bf3/fd72bc0dd9fab5e7190054525e9a70310315fe50/,2019-06-19 13:35:55-04:00/2016-04-06 09:08:23-04:00/,fix params for doRamsey
Assembly,BBN-Q/pyqgl2,c91f259ee0759e5bdac3eb2d96327667006f284d,2019-07-16T16:44:12Z,e606db6fa368ffea7720e17ede71bcf19b1c27d9/,2019-08-16 14:23:27-04:00/,Add word to warn message to distinguish 2 cases
Assembly,BBN-Q/pyqgl2,9fd00f045a66b4db21318320aeb74e973935a172,2015-11-10T15:18:48Z,5b6d59d06703388764770dec0f09cc6a260c0114/,2015-11-10 18:51:46-05:00/,removed some lint nits
Assembly,BBN-Q/pyqgl2,bf7ee0fe3a688c3b16eba56fb937494f800c87a2,2016-04-14T19:05:02Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/2ff5de43d404191b542cdb3a1e9a768bfd0d34bd/f66da62a9fc81d12625243e1380045e01b3c8ea3/,2016-06-30 18:21:21-04:00/2016-04-14 19:22:24-04:00/2016-05-03 19:30:13-04:00/,"work on evaluating ""pure"" iters"
Assembly,BBN-Q/pyqgl2,9001a985cdefea174528403884e7a11513765c21,2015-11-23T23:09:42Z,0410ea63691c7f77873ad86a16168d4c48479abd/39891a454c1e80f642b9f860eaf2a2ebed014977/065efcd80a6c65a9b814c178446eb65adfe0510c/e281e54b46fe09121fa92f0c28e909cf522672f2/3dec7b1af18c7a1e2361a1b79df1e9f56a9f24f6/c61a8629542da409076c68d2b27bd2d6783a7d0f/30eb3a2e55d4b9aa451b2da20aa3a5592a480bc3/,2015-11-24 14:18:19-05:00/2015-12-07 19:23:24-05:00/2016-06-30 17:29:47-04:00/2015-12-10 16:09:42-05:00/2015-11-24 13:26:13-05:00/2015-12-07 17:16:28-05:00/2015-11-24 14:56:27-05:00/,"some clean up of tests, diagnostic msgs"
Assembly,BBN-Q/pyqgl2,5c756b507688cff353ca027bc7711bbcb738ebce,2016-09-15T18:24:01Z,73d3663612c5127c1e6b036a9f40e86089645906/,2016-09-29 16:36:27-04:00/,typo in param name
Assembly,BBN-Q/pyqgl2,102ba7d564b5b98134c4f3aad5a4920139e7b14a,2016-04-08T19:17:02Z,5c9fcdfb78b71fb2283dd954bc0542f315aa454b/0024e44a9ebbf347bbad90151d759fc2060656da/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/e3989d7514231679f7be5c8c52c28901f8e44584/,2016-04-08 15:20:02-04:00/2016-04-20 12:45:43-04:00/2019-09-26 12:06:38-04:00/2016-04-19 12:10:33-04:00/,"comments, spacing"
Assembly,BBN-Q/pyqgl2,4cf47b421ad55b4f420741d0e56c7a850d2b728f,2016-02-26T18:43:46Z,8fef60223a508b19c549dd1d2938e5a7486b3878/26e5f34431e1cb9719436e9bd96101df6c7eaa00/8ad1e8b1a0c5bee00bcb887b748bfe15f224ef68/853d88257383734c38522454933a77f3bf15510c/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/714e04f946598a495c356c6904353b1e1bd48cb1/5db9a0bd92135038df4120e79f0a8fd1d8e01546/,2016-03-17 13:44:27-04:00/2016-05-13 14:55:26-04:00/2016-02-29 08:43:21-05:00/2016-03-01 12:59:34-05:00/2016-05-13 14:58:56-04:00/2019-06-19 13:35:55-04:00/2016-09-07 16:05:57-04:00/2016-02-26 13:57:01-05:00/2016-03-17 13:43:19-04:00/,"move init to a new helper file, fix some imports"
Assembly,BBN-Q/pyqgl2,5cd0a1d3659b834a9b4c89e73710168ccd882e5f,2016-01-28T19:10:17Z,f355f020707b416513f9120d4875848236ba0deb/d5259010741db8ab055c5384c6bcba80eebfddd8/dd9394c625a7c6c5138f3534431a34add267f79b/39305cd69ec192acd0d702be7874490c90e702f1/2b1458eb04bb1aba1e1ffad24355ab5fa71888bc/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/30ecc1f528c973a326d224463ff6f94ef4de01f9/ec5d2493b4d497df8407a5be031bc5df6971c364/cda56a922723f87a7a6d39af3a862553609f2927/ce51c3da3e5924e22bbbe958258a7042f1cf7a51/bdd8683903b9fe4f6803259b76e5ee72ad7ffeed/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/8f1c86075cd1d0646742c33010f523380b020bf2/fc671a7e59d780c580dac208bf43dee11440b942/93e91f3cb853321899340850a241a5c237f40b31/bc7fd1089b8dfc8828c10db3ea0d003060c6915e/2dda94cc53f72247ed39ad3cf7637162f81f2f64/9217721da958f15856927c4f9695c61f2fdad3f1/,2016-03-17 13:41:18-04:00/2019-06-18 19:55:45-04:00/2019-06-21 11:30:29-04:00/2019-06-17 18:28:39-04:00/2019-06-12 16:31:27-04:00/2016-05-13 14:58:56-04:00/2018-10-10 18:12:56-04:00/2019-06-17 13:51:22-04:00/2019-06-24 13:25:22-04:00/2019-06-25 15:48:25-04:00/2016-09-12 10:58:41-04:00/2019-06-19 13:35:55-04:00/2016-02-19 14:55:37-05:00/2016-03-10 08:35:20-05:00/2017-02-16 14:56:23-05:00/2016-09-24 14:36:37-04:00/2016-09-27 16:48:01-04:00/2019-06-19 13:11:28-04:00/,add in correct imports. Add in commented out old implementation for reference
Assembly,BBN-Q/pyqgl2,1b3b25ee248459f65bc560442fd4dff796c04d20,2016-04-01T17:15:08Z,caffb91cf4e5a7529961afc48633b39d9dfd40a4/26e5f34431e1cb9719436e9bd96101df6c7eaa00/,2016-04-01 15:01:29-04:00/2016-05-13 14:55:26-04:00/,"have init(q) do a sync and then wait

added some comments, but there are a lot of comments at the
head of the file that need to be reviewed for potential
sources of confusion."
Assembly,BBN-Q/pyqgl2,13f98aaf9bc5cae4002ef0616c72683c52f4f3be,2016-03-25T20:31:09Z,e8869d31e5329a6781f8b9f75c44265c045d706a/1ca96adee995154e8d97684e1d05fcb93b3ba516/c83f2f16110457d4512a757486ea2ba0ed87e77a/405d4f545ba6a13bf973f700b4dc952760dea045/7ed7827c4de9422d3b1ff995760badf0199a7758/4526c98058166eabdce7fd7e719b929c1efdf445/,2016-03-28 16:39:09-04:00/2016-03-25 18:10:03-04:00/2016-03-28 14:02:37-04:00/2016-03-31 19:47:54-04:00/2016-05-12 00:23:53-04:00/2016-04-06 18:35:00-04:00/,with a helper function to compile the output
Assembly,BBN-Q/pyqgl2,d3b70552de6ef1a650ed4c9054f442ce781ec8c2,2016-03-03T16:58:58Z,0603a2df7054001c969a55526f7e76fe1b7e4833/,2016-04-06 16:30:00-04:00/,"changed defaults and interface

after using the module for a while, it was obvious that
the defaults were nonintuitive and difficult to use,
so changed the interface to something hopefully easier
to read/understand."
Assembly,BBN-Q/pyqgl2,4a0def98ddf0534aaf9dd4a7fc333e418450b54f,2016-09-07T13:58:41Z,c3de65667d0c27921cc7c7329a2561267656ecd4/db6d3739e75272be796f25530cdfa878edb0b53b/51074226af6a68525168ff88c5e230eea7ce0918/,2016-09-07 14:44:15-04:00/2016-09-20 09:30:02-04:00/2016-09-19 15:44:59-04:00/,Add missing test_setup.py.
Assembly,BBN-Q/pyqgl2,7d065a3a611ac34789fdae147c7d0bc58a76bc24,2016-02-24T18:16:47Z,7c9bf9cf77fad4ebb09b5b5ba2ff654a13e58be5/,2016-09-14 10:46:43-04:00/,"warn about conditional/deferred import statements

The preprocessor can't deal with imports that don't
happen during initialization, and doesn't try.  So
we tell the user if we see any that they'll be ignored.

We don't bother with __import__() or import_module()
at all."
Assembly,BBN-Q/pyqgl2,8f250af9e4dc09538c344185ccb2a8daeee778e2,2016-04-22T21:03:33Z,baf708c6e624f8c1271336391ee2cda6bdc19fb5/,2019-06-11 14:59:37-04:00/,Added 3rd embedded loop
Assembly,BBN-Q/pyqgl2,eff0faa7b0cf86800679aeb80aa7a400b69e47c2,2016-05-05T20:34:41Z,9864616317c02db858472e4f861f282e054683ad/2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/,2016-05-16 16:35:35-04:00/2016-09-06 18:44:10-04:00/,"minor reformatting

some lines were too long; rewrapped"
Assembly,BBN-Q/pyqgl2,a4b19dc9ec7008b01891e777d88e2cec9abefe67,2015-11-05T21:58:18Z,6707061c1c5e4ea31bee04903baa1bfc6d7b5309/24c142ed6f812c7d98b7e107758e0f77f469c889/,2015-11-10 14:09:40-05:00/2015-11-10 19:44:50-05:00/,"deal with imported symbols

don't assume that funcs have a literal 'id' field;
if they're not nake names, compute it using collapse_name.

also permit return annotations other than 'qbit' and 'classical'
(so that we permit 'Pulse').  Everything non-qbit is assume to
be classical; we don't distinguish more precisely.  this might
change

added importer to the instance fields"
Assembly,BBN-Q/pyqgl2,94250b99d38edd67798a85a10aa51289b898fa34,2016-04-07T16:27:11Z,2e6ce391646c6a0ee41c0b9591c21d330fcfb5e9/36f8ad5bfeadb0f22c9b87998692d0de0b0c04ce/467892d4bf102a5486ba18dc5b848f510ef6ca9a/86952e64513c684d47f817784a8dfc0ae1b0cd40/e695735349c259a143aae1fd71754e5fa2dd4012/2be86b9f2efc07aaee0906d0f4045ebb1b34dca6/8c26dc6db09a579c467d38169013f358e6a78927/2592a6e0d6f662ba969be6d416a7085870a5c113/e29c4ebb9b01cb9e29c766c2990862919f88324a/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2016-08-31 16:43:09-04:00/2016-09-12 11:02:42-04:00/2016-09-15 13:53:59-04:00/2016-04-07 14:46:06-04:00/2016-04-19 12:01:58-04:00/2017-03-22 16:17:55-04:00/2016-04-13 18:10:24-04:00/2016-05-13 09:57:15-04:00/2016-05-13 00:03:55-04:00/2017-04-06 10:01:35-04:00/,"save most of the intermediate output to file

if the user wants to save the intermediate output,
save it to a specified file rather than dumping
it to stdout (whether or not the user wants to see it)

this is not entirely complete (still some things in
called functions that print to stdout) but main()
is generally wrapped up"
Assembly,BBN-Q/pyqgl2,0f8ea31365689e39b82f6d1ea2c3f51ec0e18c9b,2015-10-09T14:29:54Z,2a85685e09084ad4434d7bfe94997a23eb486dec/dbc6d8089474ba45b53c33dc517863b7ffb2786f/2ac21c47f37e72605037fc66f90c079e05335ee7/4d702cbc44df1d3ef0020abb41e68a28567f76ce/9c5bde1898650ca5be0c2680a7c055f773e2ea08/321f895002fb9f3aad5cefde57f3b6ed1d91938e/,2015-10-15 15:53:22-04:00/2015-10-12 12:32:43-04:00/2015-10-16 10:21:58-04:00/2015-10-12 13:29:14-04:00/2015-11-10 18:50:58-05:00/2015-10-15 19:24:21-04:00/,start of waveform checks
Assembly,BBN-Q/pyqgl2,8cdf50e3f3c97e91dabf592fb4bb44e5ed4cef5e,2016-07-15T15:42:29Z,ce4252b38c69a4d52eadbd4454de6c051c90be8d/39305cd69ec192acd0d702be7874490c90e702f1/cda56a922723f87a7a6d39af3a862553609f2927/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/93e91f3cb853321899340850a241a5c237f40b31/9217721da958f15856927c4f9695c61f2fdad3f1/,2019-06-12 13:42:45-04:00/2019-06-17 18:28:39-04:00/2019-06-24 13:25:22-04:00/2019-06-19 13:35:55-04:00/2017-02-16 14:56:23-05:00/2019-06-19 13:11:28-04:00/,init moved to util
Assembly,BBN-Q/pyqgl2,bdc34bc6474839cd491978f1c95e4836861e9fd8,2016-02-24T15:19:10Z,ad66aad5919b9be3fa1666414ef6b33de1936a95/,2016-09-15 15:13:28-04:00/,"use new ast_util.copy_all_loc function

replace ast.copy_location"
Assembly,BBN-Q/pyqgl2,ada4818fa41409cfdb4f4ad246d1f122e852209d,2016-08-11T14:59:12Z,2c7267243798adbacc4f07368be0e438b009bb94/362b36d9e9f9d57a6e63552b78b5524049c52b13/,2016-08-11 17:00:44-04:00/2016-08-18 17:25:25-04:00/,basic checking for annotated fps
Assembly,BBN-Q/pyqgl2,e606db6fa368ffea7720e17ede71bcf19b1c27d9,2019-08-16T18:23:27Z,ebf88aeda0758a5a0c9a8b1b386573e7fca2f911/,2019-09-12 16:34:12-04:00/,comments & more info when cannot represent as AST
Assembly,BBN-Q/pyqgl2,131b779ea18d9aadd30bbf3316c9b8715c1063aa,2016-04-20T03:28:48Z,8f250af9e4dc09538c344185ccb2a8daeee778e2/fdae54f0395f781df8993bf119bf37a62dec5c39/baf708c6e624f8c1271336391ee2cda6bdc19fb5/c2ebb06c2682c0b7de6d9f17b98466dc9679a6f7/,2016-04-22 17:03:33-04:00/2016-04-25 15:40:18-04:00/2019-06-11 14:59:37-04:00/2016-04-29 10:50:45-04:00/,Added file to test for loop with nested for loops and one qubit channel
Assembly,BBN-Q/pyqgl2,72cacc79eaf15d058bcd932607d06d6b3d8d175d,2016-09-12T20:36:37Z,f45d6e98217225d4b81f47d7f554f581e9851781/ad66aad5919b9be3fa1666414ef6b33de1936a95/89ce070f145292b0276f72ccf8cf9fbe7cb59ba5/,2016-09-12 17:09:40-04:00/2016-09-15 15:13:28-04:00/2016-10-11 12:16:13-04:00/,"fix position vs keyword args

the checker converted everything from positional
to keyword arguments for the sake of simplicity, but
some QGL1 functions only work properly when they get
positional args"
Assembly,BBN-Q/pyqgl2,aef4175cc70ab3498c8828fe7c662120b0f3f486,2016-02-16T16:29:00Z,817843074bbf8b617efa588a21520586498deebf/,2016-02-22 13:02:01-05:00/,"comments, cleanup. rename things so as checked in, it tries to be a compilable QGL2 program"
Assembly,BBN-Q/pyqgl2,745140265882c402267fbce13d157de034e1d99b,2016-10-04T23:34:42Z,013cb3bf12a78cf63f021e8e89f600829bc97852/,2016-10-10 10:52:15-04:00/,"make sure filename is relative

the __main__ makes sure that the input filename is
specified as a relative path, but other programs
that call compileFunction directly bypass this.
We already check whether the filename can be
converted to a relative path (when we check that
the filename is actually a filename) so all we
need to do is keep the result and use it (if it
is a filename)"
Assembly,BBN-Q/pyqgl2,930523c1c525de0ee25bb06fe0f8b079be64d795,2016-09-23T20:05:22Z,f1893f65d6fafa345ea5c1a79f1a817d1c1a9e0e/,2019-06-17 13:43:07-04:00/,"Catch wider variety of argument errors.

Responding to review comments from @dellard."
Assembly,BBN-Q/pyqgl2,2842a813ea5925ac14f6d987425f928bc7e00f70,2016-05-26T15:08:51Z,d3378ba814f5634ebabe9724cf0c5fd380f31e7c/,2016-05-26 16:06:58-04:00/,skip just the 1st WAIT and complain if there's more than 1
Assembly,BBN-Q/pyqgl2,0c7d9002550459a9867fee893b314063a028211d,2015-10-19T19:56:49Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/299573fe97c35ab2533f95095492d162e15f0448/,2017-04-13 10:01:57-04:00/2015-11-13 10:11:56-05:00/,"parameterize the names of the QGL2 syntactic sugar

if we want to change qmain to qgl2main or whatever,
this and qgl2/qgl2.py are the files to change"
Assembly,BBN-Q/pyqgl2,0a6a77c169d7af5c4dd2dac7e23919a5123581c1,2019-08-16T18:22:52Z,19638552c3a8e2399a050c83cc4e0a24ae79d652/91ecf1456789b8d7b2bfcc7894979d78a06d507a/,2019-09-12 16:33:05-04:00/2019-09-16 11:31:44-04:00/,comments & cleanup; still need to redo Cliffords in QGL2
Assembly,BBN-Q/pyqgl2,80492201f1eaa3661441f5cce01ab3985afb8dda,2016-02-23T19:17:19Z,853d88257383734c38522454933a77f3bf15510c/3027bc0a9c4ae5cdcad7c0d53e0908e06a2454af/39188a72c8a2484e3a13f5fb4c3eb65131889f29/956225b652eb80b56aa726a830a1f4768eff67f0/b8e2e96934317ff22b1f06088dc02a8e826312e7/a89acfe5108e89bb8efa763dbbdc387000b47d80/9217721da958f15856927c4f9695c61f2fdad3f1/,2016-03-01 12:59:34-05:00/2016-05-13 14:58:56-04:00/2019-06-12 16:34:55-04:00/2016-07-25 14:28:24-04:00/2019-06-17 14:44:15-04:00/2016-03-25 16:12:15-04:00/2019-06-19 13:11:28-04:00/,initial qgl2 version of SPAM
Assembly,BBN-Q/pyqgl2,e91e4b867239d0fe00c3362e4aaebf9512ed274f,2015-12-16T03:08:18Z,501738a62853ebeaf4ed86099077da14e71952ff/,2016-04-07 11:56:07-04:00/,"adding script directory to the search path

if the script we're running is not in the current
directory, then add whatever directory it is in
to the search path (mimicing ordinary Python)"
Assembly,BBN-Q/pyqgl2,3b9f6ae7cf67708f5a36fbc4ca46f540c858744e,2016-01-28T19:12:45Z,535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/e637bcf305da160c4e144b1482d4bcbe0970d130/,2017-03-30 13:31:14-04:00/2016-01-29 12:19:26-05:00/,"add try/except clauses around null invocations that were meant to test that the preprocessor already ran, such that we are robust to typical errors if that is true. Tested by using the original code."
Assembly,BBN-Q/pyqgl2,fc86e40edd9744dd60fecc9a130ef15bffe9196e,2019-09-13T20:28:50Z,4072dc707c2c2f832e4aaa94ff061cd79cc3e979/,2019-09-13 16:41:19-04:00/,"Allow specifing the axis_descriptor, and make sure the suffix goes in the right argument"
Assembly,BBN-Q/pyqgl2,b2b4f76cbe5e49dbe79de70342cd29d8cce7fe67,2016-01-27T18:05:04Z,6bad37b24e9bbe64b5d4273273fb2a801e124e84/,2016-01-28 12:40:05-05:00/,"fix typo in alt_namespace for ""import *"""
Assembly,BBN-Q/pyqgl2,a99fbc838c186178e25d78686802f93eba1c1df8,2016-04-25T19:52:17Z,2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/,2019-09-26 12:06:38-04:00/,"use new Compiler (in a PR on QGL) for verbose debug logging, not a special local one"
Assembly,BBN-Q/pyqgl2,ea89890111bff988e92b0c9260d15d244469291f,2015-10-19T19:58:13Z,5b6d59d06703388764770dec0f09cc6a260c0114/11d7381d9ff00f5f005352d0902d27570c6ad14e/e664ae1facfd6addf11f3b859328841d9534ae6b/7e58178bf4985c8739959575378b7bb7d21b6f72/3338c4dafcb8986964bc3c24fedb6f1b603a4492/ffad3beeffa8fc7585a067b8e2e2171b3018c2a0/de966a014ccfcdb33674cf00b694beb01d73c40b/3489e14eee54663fe3b2745e79d0747118910338/,2015-11-10 18:51:46-05:00/2015-11-10 19:45:36-05:00/2015-11-05 14:37:02-05:00/2015-11-10 14:10:09-05:00/2015-10-20 14:08:38-04:00/2015-10-20 12:54:08-04:00/2015-11-06 17:47:53-05:00/2015-10-20 11:52:51-04:00/,"routines to walk through imports and build
a queue of AST structures to process

this is uglier than it should be, so I'll probably
think of a better way and reimplement.  It's good
enough for prototyping, however."
Assembly,BBN-Q/pyqgl2,a4e9b584ec2385271b2a8b174cd697da236dd543,2016-10-07T16:26:51Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/d5259010741db8ab055c5384c6bcba80eebfddd8/032f0241eb969870a941956a7db8a17a86e76aa9/,2017-04-13 10:01:57-04:00/2019-06-18 19:55:45-04:00/2017-04-11 16:00:27-04:00/,Add arguments to FlipFlopMin functions.
Assembly,BBN-Q/pyqgl2,5d90941cb879212d5043e1f5222d59022e24488b,2016-03-21T20:09:56Z,ff4d3749290f55f783502b3f8ff6e0b5e36fe2b4/,2016-04-20 13:32:45-04:00/,fix comments to reference Qubit() not Qbit()
Assembly,BBN-Q/pyqgl2,a97e80c677ef84918a2ecfafd74c5a6c1ee9fb15,2016-04-28T16:13:03Z,6deaaa0373cc4830a1a5dc236271b48589d2fb4d/b5ad2f88d155f15bf456de242e90f020cd0b0249/9690375f0473337f0aa3593260803bdb26444a62/940bd940dd9341d40b72f18f0afb862c7d0e78bc/f791681624d5ec22b1a3a0005a83b1bfa31330a9/,2016-08-22 14:52:52-04:00/2016-08-22 11:29:55-04:00/2016-09-12 16:38:08-04:00/2016-09-06 16:44:46-04:00/2016-09-07 10:19:20-04:00/,"test program for the new evaluator

gets parameters from variables instead of constants"
Assembly,BBN-Q/pyqgl2,91289c513cd602de0c54cc86750fdd80b98de779,2016-03-21T20:41:06Z,57699994fc8284b9f07054bd8a6f4c8e2379b4ac/,2017-04-11 15:23:04-04:00/,clean up imports
Assembly,BBN-Q/pyqgl2,26d504237207c53c42d1e22fce61d4a5c81db159,2016-04-08T19:56:56Z,b42a5c1100ba54c0b516c92c70bcb6a5d4acf6c5/69c2c4942dfb11f130ec8e278f79ce5639806a52/a99fbc838c186178e25d78686802f93eba1c1df8/94c08a3447fb65afe7540230a2ca6580cda38785/,2016-04-22 08:46:52-04:00/2016-04-19 11:07:38-04:00/2016-04-25 15:52:17-04:00/2016-04-14 10:27:21-04:00/,Add copy of QGL Compiler for debugging and refactoring. Currently not working quite right - get no plotted sequences
Assembly,BBN-Q/pyqgl2,9f497d1901e476d0567ff461aeeb3e5b243f6b61,2017-02-16T19:55:57Z,d652682248d68ed17e06249858a0d071bef60461/,2019-06-11 14:57:47-04:00/,Follow QGL1 channel parameter renaming.
Assembly,BBN-Q/pyqgl2,deb76c4db75874c954110632919551dbd419a57d,2016-03-09T00:31:02Z,7424e5d489e10e4e48ec5aab8fe7e965d8f388a7/dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/6eb72ec72bd75379fdc3205f542f21ec3311fb48/,2016-04-08 13:19:09-04:00/2017-04-05 17:07:07-04:00/2016-05-17 13:33:17-04:00/,"use QGL functions for labels, goto

also adds an optimization: if the condition of a while loop
is always True, then don't bother testing it each time through
the loop."
Assembly,BBN-Q/pyqgl2,dabe675ff8918039179cf53f1b22c7d99597ee52,2016-07-22T13:48:58Z,dced4de17ced5dda99cc709bf797364fd6c2d27e/e8df332390c43ef03a49416b41381afd03cef82b/66ed22c49453a5aa49f7866faffbcb0efa22df35/,2017-04-11 16:42:52-04:00/2017-03-29 11:15:58-04:00/2017-05-15 10:21:32-04:00/,"Move implementation of Barrier and WaitSome into QGL2. Barrier should only be used within QGL2, and WaitSome doesn't exist in QGL1 yet."
Assembly,BBN-Q/pyqgl2,e57ed44d4a076aaced4afbee3f4f8784e82830ea,2016-02-09T16:30:55Z,4c1529f1121da6a9fed0ab50409df323d194545e/,2016-04-12 19:52:15-04:00/,"relax handling of import 'errors'

some imports are in the system libraries; we don't
process these libraries

some imports are implemented by binary files (.zip or .so,
and possibly other formats) and we don't process these because
we can parse them

So if we can't find the source code for a module, it doesn't
mean that it's a fatal error.  We make note of it and move on."
Assembly,BBN-Q/pyqgl2,447a1cb1247747e32ef9a4d07b342767108d2f93,2016-02-25T20:22:22Z,8fef60223a508b19c549dd1d2938e5a7486b3878/,2016-03-17 13:44:27-04:00/,allow specifying file suffix (default empty string)
Assembly,BBN-Q/pyqgl2,a398c0db878cfc8111a007e57b72b03f601550e6,2016-06-01T19:26:34Z,017b82de79e3d02d2aeaf715494e7f973d7398d6/,2016-06-01 17:55:16-04:00/,"take the leftmost match, not the longest

if there's a longer match to the right, we'll find it
in a subsequent pass.  In the meanwhile, we don't want
to skip over any combinations we can make on the left."
Assembly,BBN-Q/pyqgl2,3d7684c52e971ee5e1db1dd858a2a387230acea1,2015-11-13T21:54:06Z,b2b4f76cbe5e49dbe79de70342cd29d8cce7fe67/fa77aa7397a246c22b4f290c8cb792c3c97e7a21/f45dc8c6d9e5b88c00dff2547a96f53a9643943f/,2016-01-27 13:05:04-05:00/2016-01-27 12:46:48-05:00/2015-11-23 15:08:10-05:00/,deal with 'from *' imports
Assembly,BBN-Q/pyqgl2,522a13254d886951e9f504c6a1fd258974f105b2,2016-08-01T20:09:41Z,3677c10a9f69f01971dbdb8eb67a0aa0f8d5161e/,2016-09-19 10:12:55-04:00/,"don't let qgl2main take parameters

qgl2main shouldn't take any explicit parameters
(it gets implicit qubit parameters)"
Assembly,BBN-Q/pyqgl2,4d702cbc44df1d3ef0020abb41e68a28567f76ce,2015-10-12T17:29:14Z,366567b4d725acd0c00d4b51db25449519d70673/2ac21c47f37e72605037fc66f90c079e05335ee7/2896ce970bc79a8ed742cf4bfc07c10c1bbc920d/baf708c6e624f8c1271336391ee2cda6bdc19fb5/d5204011ed02416bf5406b93ed3c5746ff450d4c/24c142ed6f812c7d98b7e107758e0f77f469c889/,2015-10-15 13:39:02-04:00/2015-10-16 10:21:58-04:00/2015-11-06 13:46:23-05:00/2019-06-11 14:59:37-04:00/2015-10-21 12:11:58-04:00/2015-11-10 19:44:50-05:00/,"use python3 parameter annotations

change from using decorators to ""declare"" qbit values
to using python3 type annotations"
Assembly,BBN-Q/pyqgl2,e430d3d21e6d57b56d2089aadc697c5c6e3df131,2016-06-03T18:06:34Z,dabe675ff8918039179cf53f1b22c7d99597ee52/dced4de17ced5dda99cc709bf797364fd6c2d27e/e8df332390c43ef03a49416b41381afd03cef82b/482e36e12eb50cd029a17af3d2518972859dd058/,2016-07-22 09:48:58-04:00/2017-04-11 16:42:52-04:00/2017-03-29 11:15:58-04:00/2016-06-10 09:18:56-04:00/,"Barrier now takes a counter and channel list, and there's a WaitSome (unsupported really). And sync.py uses the new barrier appropriately."
Assembly,BBN-Q/pyqgl2,b5683f14edb5b1221634eea1b59ec2c893e9a5ee,2015-10-20T18:25:41Z,4dea0b5e8cb550ffbe09d9e960cdfcaa5b96160f/b6e5b37ed95a2b3fc693b6efeccd6522c938ff6d/,2015-11-09 22:23:52-05:00/2015-11-24 13:04:27-05:00/,"get the fname from the node, not the parser

since the importer annotates each node with
the file it was parsed from, we don't need to
depend on later parsers knowing where their
input came from."
Assembly,BBN-Q/pyqgl2,c6282bb9fc588fb2e5f7121a21440be5208914af,2016-05-03T20:31:50Z,ad76ab4ac298e83e49d22d3bcfeb3c28ac24eddc/0aca44a93f0b0a3e99de37886ed0b3786db085ce/9864616317c02db858472e4f861f282e054683ad/86d01d68a3b80c09e89c89799a1fb650bda67646/a9d4236458a27cdb1f42b22e7d266ce0161d526d/57d9203f7bd9c8767f302e7e79864895889c1279/e6c722dbc35cb906b4b019733a05094b648eb7c6/2699c9aa7e3fbfa8287e3ac1b6c6db8b62ef7449/eff0faa7b0cf86800679aeb80aa7a400b69e47c2/2358e1d67873108382c3119d15ccf0d4f804990e/0f4b6c56ec50070a8b713d6b028eddf89b0a368a/144a79f1b2df8d24599208d3e30c9093521712fe/ad77dfde389ad2d9da2ccb22eae1ca046fbd6d8b/99aa4a127b3cf94737f8e806e30e0873d3d093ad/81266a663f1a63f06470ee23530ed76aaff0b4fe/ddbaf39ee4162f676ebf53b94da3e98c1181d857/,2017-03-23 22:15:42-04:00/2016-08-19 18:11:55-04:00/2016-05-16 16:35:35-04:00/2016-05-11 11:34:47-04:00/2016-05-12 08:40:00-04:00/2016-05-11 18:24:52-04:00/2016-05-17 19:43:06-04:00/2016-09-06 18:44:10-04:00/2016-05-05 16:34:41-04:00/2016-05-11 22:42:21-04:00/2016-05-12 00:22:34-04:00/2016-05-13 14:34:55-04:00/2016-05-10 18:45:41-04:00/2016-05-03 19:29:24-04:00/2016-05-04 10:31:18-04:00/2016-05-13 06:43:26-04:00/,"basic functionality works, but still clunky

I think this approach has too many limits, and
we'll need to go back to a hybrid of computing
constants ahead of time and computing opaque
objects at runtime."
Assembly,BBN-Q/pyqgl2,cefc4f899781371bb829c5cb37cc8406169fd2c6,2016-05-13T03:32:04Z,ab6499e15b8af7ef04ff900bcd6293c94d9bcf5c/467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2016-10-05 17:07:07-04:00/2016-09-15 13:53:59-04:00/,"handle ""with"" statements

make a copy, expand the ""with"" items, recursively process
the body, and then add the edited statement to the new body"
Assembly,BBN-Q/pyqgl2,812b0053e882196346e61e4c68e48a68cbdbee89,2016-05-13T03:15:01Z,467892d4bf102a5486ba18dc5b848f510ef6ca9a/,2016-09-15 13:53:59-04:00/,"rewrite var names in iter before evaluating

if we don't transform these names into their current
names, then evaluation is likely to fail or give the
wrong answer because the values to use are bound to
newer names"
Assembly,BBN-Q/pyqgl2,945ca6dfa3c86170146275b8b8374421eed44996,2016-04-11T14:33:06Z,2b099279cb339afbc5e464e40c3fbed00c8f48be/f89379eb8ad7825966c4949e5e004500953a9352/0b70edcd5fd36af91c14c555fb4e1566168988fe/2b2edf218bfd09f80c60f8ec5056919f8c5c4305/da9e19319ca556ea95f93b50a95956410a2d6db8/69637b7eae113a830fa13c067714ceef1283f19c/d1b934f122ae57bcc4b13d919b1e9490bd9b810f/,2016-09-14 13:22:33-04:00/2016-07-29 10:29:25-04:00/2016-04-14 09:24:17-04:00/2016-04-28 09:28:15-04:00/2016-05-13 10:04:07-04:00/2019-10-02 13:57:45-04:00/2016-11-14 15:22:03-05:00/,Document state of QGL2 and limitations
Assembly,BBN-Q/pyqgl2,81266a663f1a63f06470ee23530ed76aaff0b4fe,2016-05-04T14:31:18Z,2358e1d67873108382c3119d15ccf0d4f804990e/,2016-05-11 22:42:21-04:00/,"more error checking for for-loop expansion

don't blindly assume that every expansion gives a valid
result, and don't recursively expand the same expression
until it converges -- if the expansion succeeds, and you
didn't get a list the first time, then it's never going
to work and we need to give up"
Assembly,BBN-Q/pyqgl2,9864616317c02db858472e4f861f282e054683ad,2016-05-16T20:35:35Z,ad76ab4ac298e83e49d22d3bcfeb3c28ac24eddc/fc49e4a49c848db370cfa211e235bb34b1330a74/b0dbde7afd20b58f045222929a9cd703af17c35b/2c05aa20f9e62c8d0109e39da2b1db2915861a3d/,2017-03-23 22:15:42-04:00/2016-05-17 12:26:04-04:00/2016-05-20 12:11:52-04:00/2016-08-30 17:30:12-04:00/,"restructuring to deal with quantum conditionals

quantum conditionals don't work yet, but at least we
have a place to slot them in.  We will need to flatten
them specially later."
Assembly,BBN-Q/pyqgl2,71f94a2cfa6119e8227b7a06fc59faad26741a79,2016-03-18T14:09:40Z,479ff3b17446485d0c5e518a9c0bbbb3593848c3/,2016-04-11 11:18:58-04:00/,"per Dan, wrap the whole thing in with concur. And cut an old version of the function"
Assembly,BBN-Q/pyqgl2,be86b0afcd96d12ba190ba091158877f3f817ca3,2015-11-13T15:12:58Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/57699994fc8284b9f07054bd8a6f4c8e2379b4ac/2e89a9d65c25c114e3461b4d561f416a32ca558d/91289c513cd602de0c54cc86750fdd80b98de779/9b7a544414650f8d04e88697397a27578208dcdb/,2017-04-13 10:01:57-04:00/2017-04-11 15:23:04-04:00/2019-06-11 13:51:27-04:00/2016-03-21 16:41:06-04:00/2016-03-18 16:16:29-04:00/,updating the dummy language stubs
Assembly,BBN-Q/pyqgl2,6ae62cf281d89aadaebba28ed24fe7cd176e809b,2016-06-14T10:52:49Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/2939142124e4dbc448cd2ceeb02484602e5c2e7d/,2017-04-06 10:01:35-04:00/2016-06-14 06:55:43-04:00/,don't recurse past processed nodes
Assembly,BBN-Q/pyqgl2,a9dd7f112a122a61fbef6fd6fa436f008a55b98f,2016-05-27T14:18:52Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/,2016-06-30 18:21:21-04:00/,"skip over empty statemnts

if a statement has been reduced to nothing, then
omit it instead of adding a 'None' to the list of
statements to execute"
Assembly,BBN-Q/pyqgl2,31bc08fe845e19eb6d2141d5835dd6a15a69e5b2,2016-06-13T23:14:43Z,467892d4bf102a5486ba18dc5b848f510ef6ca9a/353925864e04c01b8bfe65e537a1a2537a89668e/ad545e053dab391e567b59e2ba672b39b8a337c6/c099cce83ea753676736fcfeae657a06fc8cea6b/0a311595509dcfb579f59b7672ca1f2dc68198bd/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2016-09-15 13:53:59-04:00/2016-06-16 17:21:24-04:00/2016-10-03 11:35:34-04:00/2016-08-18 12:10:58-04:00/2016-06-23 15:54:19-04:00/2017-04-06 10:01:35-04:00/,"changing to use with-group/with-grouped

instead of trying to overload with-concur and with-seq,
creating new with blocks specifically for doing the grouping
processing.  This means we don't have to figure out which
concur blocks are ""real"" and which ones were added by the
grouper."
Assembly,BBN-Q/pyqgl2,d54eef5f9caf8fb6c8b964661e2bd697917e0b73,2015-10-22T18:30:29Z,673d4af48598e6cf070394c538e19c3facb4f69b/9451b372d0152e5a3be442ca10b87dcac8ecefca/415ae1f94938180403b91a1d4a07576c25927543/170e720cbfa5069f523c4eaed7d550185e33eb6f/c2fc217df593a3e024b9ff80acb3017a069c6b56/9b7a544414650f8d04e88697397a27578208dcdb/f0529a30383e9d6aa74b8bb5bf34e78c89135108/42855ec601664de8d132fa579a868ebcc2e3dda9/e281e54b46fe09121fa92f0c28e909cf522672f2/,2015-12-10 17:38:11-05:00/2015-11-02 18:37:30-05:00/2015-11-05 17:00:31-05:00/2016-04-06 17:19:48-04:00/2015-12-08 16:41:59-05:00/2016-03-18 16:16:29-04:00/2016-03-01 17:31:56-05:00/2015-11-10 14:10:56-05:00/2015-12-10 16:09:42-05:00/,"basic substitution working for qbits

doesn't do any other form of partial evaluation,
and handling of built-ins is just a mockup.
Doesn't handle multiple namespaces and doesn't
extend the mappings based on observed declarations
(the initial mappings are completely hardwired)"
Assembly,BBN-Q/pyqgl2,ddac889c64f980519b1938899c0f149b26a20494,2015-12-03T17:23:25Z,d2097d286109e4e81b1706aef116ca7d8406d37a/2b109095e098683dbeb6c22d0c8d65428f2eb31a/1211bbefce3f770fe77fe78fd7a72297a9d123a9/,2015-12-03 17:28:30-05:00/2015-12-03 14:07:55-05:00/2015-12-08 12:45:37-05:00/,"recursively inline nested statements

needs testing on more cases, but the basics work"
Assembly,BBN-Q/pyqgl2,01ce0e0df358e1eff6e6c543fed7003b64aca25f,2017-04-06T17:58:32Z,69637b7eae113a830fa13c067714ceef1283f19c/,2019-10-02 13:57:45-04:00/,"Update README

Add funding acknowledgement."
Assembly,BBN-Q/pyqgl2,c260910c0c46b7cb9d6b9d799bf34fc7f892e14a,2016-04-08T13:44:00Z,d898e0c46e8c73fbcea9448087435b9d751bd404/,2016-04-28 13:09:58-04:00/,"permit expressions to be singleton sequences

don't fail if the top-level statements aren't with-concur blocks"
Assembly,BBN-Q/pyqgl2,c8fd7832f12319688e7b628fe2568200dbe4eb31,2016-03-28T23:28:17Z,006af8155a47e7e9de5da5ef124a3e82479c07e7/3e0f8b30e048f342aba527de2f05d90430e40a1d/,2016-04-01 13:21:39-04:00/2016-09-29 10:18:22-04:00/,"keep a ref to calls that get inlined

keep a reference to calls that get inlined, so that
we can figure out later which variables were used
by the call but have been optimized away since then.
qbit variables need to be tracked, even if they don't
appear to be referenced, due to inconsistencies in
the mapping between QGL functions and hardware instructions"
Assembly,BBN-Q/pyqgl2,0a311595509dcfb579f59b7672ca1f2dc68198bd,2016-06-23T19:54:19Z,0151c5d99395750d260bef24bf188e51195c3183/1076516228cea52a79eae11ec5a1473127b9298a/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/07de565eb23a4063117818f44b0c1993800f5c30/,2016-10-07 17:08:32-04:00/2016-06-27 21:22:46-04:00/2017-04-06 10:01:35-04:00/2016-09-22 18:41:39-04:00/,"sort groups lexically by qbit ID; add qbit label

make it a little easier for a human to read the output
of the grouper.

also add with-concur barriers so we don't need a
separate step for this"
Assembly,BBN-Q/pyqgl2,c577ee5e3961137491303cf2f65a1d91af0689c8,2015-11-06T18:47:40Z,a0b8a5cdfafcb13a123c7a810e2c857095b945d2/72ef3b9b49e57df642940c280a5a0a5e22373943/,2015-12-11 13:30:49-05:00/2015-11-10 14:06:19-05:00/,"partial changes to handle full symbol resolution

incomplete changes to resolve symbols in the quasi-python
manner rather than using tables of special names

checkpointing prior to refactoring to handle 'from' imports"
Assembly,BBN-Q/pyqgl2,82df4b7c87b138637bc316e247548dead8866b61,2016-04-28T13:30:07Z,62409cd6269ea8644472010e2a7636ff556b76d7/376981202e56dab3c048c7d6877b21aef9cac7e8/ce51c3da3e5924e22bbbe958258a7042f1cf7a51/,2016-09-27 19:02:19-04:00/2016-05-05 16:06:12-04:00/2019-06-25 15:48:25-04:00/,pass the qgl2=True arg to compile_to_hardware
Assembly,BBN-Q/pyqgl2,395f3a901018b3208958b1ae0859880e3dce68d1,2016-07-07T18:35:17Z,1d7caae5a1909e00e7d63c4125133d2a028faa8f/70f0c0eaf36135fa53a2724dffd1958cfe243672/0aed8a16950da4f7d3e8995ebec4aa0ac5ef2418/6785cdccb960d6740112ec1b0a46f387e1f98417/999fa4c3a5ac3c379350abc94b06130813521f9a/9dba10fb01fb955bcb462e30314af49d12b5292c/,2016-07-12 10:50:39-04:00/2016-07-12 17:01:34-04:00/2016-07-13 11:33:51-04:00/2016-09-27 11:32:11-04:00/2016-07-11 16:36:40-04:00/2016-07-07 15:42:12-04:00/,"Bug fix: When updating barrier objects after replacing them with Id pulses, don't replace the lengthSince with the Id length, but ADD. That way if the Id pulse is length 0 but there is real length since last pulse, you don't lose that length. See testCall unit test."
Assembly,BBN-Q/pyqgl2,736e89a232db36b5772f6fb70831afce77361794,2017-04-07T19:56:23Z,9b79c87699b33f1b9acd81a2baf499769fb899d2/,2019-06-24 13:26:05-04:00/,"Refactor basic mins test.

To allow easier testing of subsections."
Assembly,BBN-Q/pyqgl2,321f895002fb9f3aad5cefde57f3b6ed1d91938e,2015-10-15T23:24:21Z,9ecc634ba618a2d92c12dfe998bab00033a1e30b/2ac21c47f37e72605037fc66f90c079e05335ee7/1d070afb4c5fa5cf7eb3ad1bf50c6208cd486b7a/6707061c1c5e4ea31bee04903baa1bfc6d7b5309/a7895d9422cf21b9beb83be6c650e1809fba5e48/,2015-10-16 09:30:20-04:00/2015-10-16 10:21:58-04:00/2015-10-20 14:46:56-04:00/2015-11-10 14:09:40-05:00/2015-12-10 22:38:33-05:00/,"starting to address scoping issues

broken version - fix in progress

there's conflation between the local scope and
the formal parameters, which is causing problems
when checking whether a function is called with
the correct types: the type checker is considering
the local variables as well as the parameter list
to be part of the function signature, which is
wrong."
Assembly,BBN-Q/pyqgl2,07de565eb23a4063117818f44b0c1993800f5c30,2016-09-22T22:41:39Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,"don't emit single-qbit barriers

there tend to be a lot of them, and they don't do anything
(at least not right now)"
Assembly,BBN-Q/pyqgl2,842f83cd43d4dcf57c49eadd6882dc2e27a2940f,2016-03-22T13:27:36Z,83efd98e03ac4ba373c5785b04aa401b71065d2b/945ca6dfa3c86170146275b8b8374421eed44996/0b70edcd5fd36af91c14c555fb4e1566168988fe/,2016-04-15 08:42:09-04:00/2016-04-11 10:33:06-04:00/2016-04-14 09:24:17-04:00/,add a file to note/document known gotchas / restrictions / limitations / todos
Assembly,BBN-Q/pyqgl2,eedd04eea773ef0dd11d7db7c0d6d7e9af0bbb94,2016-02-05T21:15:14Z,8f1c86075cd1d0646742c33010f523380b020bf2/535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/e999c68326aee0ef4d94c1f1cea9bc22f6fa3fd2/ec5d2493b4d497df8407a5be031bc5df6971c364/,2016-02-19 14:55:37-05:00/2017-03-30 13:31:14-04:00/2017-04-12 11:00:41-04:00/2019-06-17 13:51:22-04:00/,"Clean up my helpers. First implementations of functions in CR.py. Note these don't use with concur yet, nor use functions instead of pulses"
Assembly,BBN-Q/pyqgl2,cda56a922723f87a7a6d39af3a862553609f2927,2019-06-24T17:25:22Z,718fd84e435f86a42c970389e82b7699260aed36/afc3b7c5dd51f4926535a0dc82f4c8226408112a/91ecf1456789b8d7b2bfcc7894979d78a06d507a/,2019-08-15 15:53:57-04:00/2019-07-16 12:45:14-04:00/2019-09-16 11:31:44-04:00/,Single clean Rabi implementation. Note compiling RabiWidth to HW gives an index out of bounds error
Assembly,BBN-Q/pyqgl2,14c1e7d1a1122961a1e2a91e6ac4dcbd0048287b,2016-05-23T23:40:01Z,f4e18097d15a7152836080bc2e1043548c61bc0c/10ec37bc54b130fcc47c8f92e2d35bebd453b8fb/8ecf32fcfabce60513bc2810137d518d89084f0b/bfb4909d003907498efdc50306aa0872c0d4bc4b/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-05-26 19:08:30-04:00/2017-04-07 20:35:59-04:00/2016-10-04 18:16:34-04:00/2017-04-07 13:22:20-04:00/2017-04-06 21:52:58-04:00/,"prototype of fixing qubit allocation

incomplete; specialize still fails on these
(because the name rewriting is too late)"
Assembly,BBN-Q/pyqgl2,e86b8d2bc34d900e8697630275ec19c18cdbae38,2016-05-26T22:09:53Z,dcec0cd0e2780ee6db1ec0037a3dcc3b7fb120e3/,2017-04-05 17:07:07-04:00/,"functionality for break, continue

ready for complete testing

also includes an optimization that if a label will
not be emitted if is provably not referenced (i.e.
the label needed for a continue statement within
a Qiter block will never be used if there is no
""continue"" reachable within that block)"
Assembly,BBN-Q/pyqgl2,956212e98268257196d918fd4c6841aecca8f654,2016-09-21T18:27:45Z,05b10c44be155cdae2b4ba8eac4d1e74d9501a24/232a7e379b0311f1d19d505b525193629a2598e3/17e96f5d2e64398881ad5427d3f1740d8c055a66/4ab7da4826dc5ede7c520bf03d6b14242d8dbc99/356749f00b05fc4ae7521f49c9f90680a38a452e/b44db5a4c9d492a26f3be6714f35d35fa905668b/ef42a9b1125661d6997032a6199dae71ffaf7362/,2016-09-23 10:51:59-04:00/2017-03-22 17:09:00-04:00/2017-03-27 15:53:23-04:00/2016-09-24 15:59:35-04:00/2017-04-11 16:53:22-04:00/2016-09-21 15:00:48-04:00/2017-03-22 16:13:42-04:00/,Add tests for test/edge.py
Assembly,BBN-Q/pyqgl2,62409cd6269ea8644472010e2a7636ff556b76d7,2016-09-27T23:02:19Z,4239941daf5946739b3ecb33b3c4eddb92860a01/9ce555da4a391c77392a7c81bdd1d76c3ed254e9/,2017-05-25 16:21:34-04:00/2019-06-17 18:27:37-04:00/,"move compileAndPlot to plot, to fix tests

we can't mix QGL and QGL2 code right now"
Assembly,BBN-Q/pyqgl2,718fd84e435f86a42c970389e82b7699260aed36,2019-08-15T19:53:57Z,69637b7eae113a830fa13c067714ceef1283f19c/56502c354463901ccb10cdb6318b356341611954/,2019-10-02 13:57:45-04:00/2019-09-13 14:42:41-04:00/,clean up comments and README to reflect current state of basic sequences better
Assembly,BBN-Q/pyqgl2,bc0e4a142f6bebe3670eaacde69adeeb224b77d1,2016-01-26T19:21:01Z,535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/e637bcf305da160c4e144b1482d4bcbe0970d130/,2017-03-30 13:31:14-04:00/2016-01-29 12:19:26-05:00/,"show more on import errors, update comment"
Assembly,BBN-Q/pyqgl2,8f1c86075cd1d0646742c33010f523380b020bf2,2016-02-19T19:55:37Z,ce4252b38c69a4d52eadbd4454de6c051c90be8d/5271a92b91f026b55ea241b4dda434a6e9f309d7/e039c6e8a0bb7e0d55d010185a800bb7c3f514bb/39305cd69ec192acd0d702be7874490c90e702f1/853d88257383734c38522454933a77f3bf15510c/30ecc1f528c973a326d224463ff6f94ef4de01f9/ec5d2493b4d497df8407a5be031bc5df6971c364/39188a72c8a2484e3a13f5fb4c3eb65131889f29/615352f7b26ba981e27b58c382d9565184fccadd/817843074bbf8b617efa588a21520586498deebf/93e91f3cb853321899340850a241a5c237f40b31/ccb54dbe588819f0c6c5acef356b351ad09489ee/a89acfe5108e89bb8efa763dbbdc387000b47d80/9b7a544414650f8d04e88697397a27578208dcdb/,2019-06-12 13:42:45-04:00/2016-02-22 15:05:12-05:00/2016-02-22 14:45:24-05:00/2019-06-17 18:28:39-04:00/2016-03-01 12:59:34-05:00/2018-10-10 18:12:56-04:00/2019-06-17 13:51:22-04:00/2019-06-12 16:34:55-04:00/2016-03-17 13:40:17-04:00/2016-02-22 13:02:01-05:00/2017-02-16 14:56:23-05:00/2016-02-25 13:54:02-05:00/2016-03-25 16:12:15-04:00/2016-03-18 16:16:29-04:00/,Add a main() to each so we can test more directly
Assembly,BBN-Q/pyqgl2,65fa5a9942c61ca2b32d92d9e6f48f4e70cd8ff6,2016-08-18T22:47:48Z,b2006dcfb60688d49d2f83c1bdc702c23b1601ef/48a6251c9b96234ed08c2bc9d16a085f5d815586/72cacc79eaf15d058bcd932607d06d6b3d8d175d/,2016-09-06 18:46:01-04:00/2016-09-19 18:46:16-04:00/2016-09-12 16:36:37-04:00/,"cleaned up how the runtime checks are added

deleted some prototype code + diagnostic statements"
Assembly,BBN-Q/pyqgl2,9893d27abe63fd75f77b1e374bee0a64f9530c83,2016-08-26T13:56:03Z,4a308bccce870ba857a5ef9b134b9597cbb1a468/e308dd01ef23bb10ad5873c871acd6675670dad1/9edea011b124607c51e3a4c78ebbc7590129b854/5a183e7ff4b06cdcd96b3af39a62b77d4329146c/dca7b6b4edc1742d814495d456128e10beffa88f/,2016-10-14 12:09:12-04:00/2016-08-30 18:29:29-04:00/2016-08-31 16:39:11-04:00/2017-03-23 14:08:52-04:00/2016-09-15 17:34:55-04:00/,"sketch of syndrome computation

doesn't compile successfully yet: bug in the assignment worker"
Assembly,BBN-Q/pyqgl2,ad545e053dab391e567b59e2ba672b39b8a337c6,2016-10-03T15:35:34Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/4611edd714d596507beed2a26db2471c20df2d03/,2017-04-06 10:01:35-04:00/2017-04-06 21:52:58-04:00/2016-10-04 18:09:39-04:00/,"starting change to real qubits

this doesn't work very well, because the type checking
is based on lexical checks (i.e. the name of the variable)
instead of value checks"
Assembly,BBN-Q/pyqgl2,9229e97de194c663a44b3870e30d65f052bc1027,2016-01-29T22:14:04Z,d76040ae3c0c26e56a9f49cebfc6556034b8c5dd/,2016-02-18 11:29:13-05:00/,"handle tuples; do simple sanity checks

check that the basic form of the values matches the
loop target, and fail if not"
Assembly,BBN-Q/pyqgl2,5424cd50d267bd4628904a79bb4bad84fa5b6846,2016-05-20T21:14:46Z,060ad79c1eaf5f4e2bbacb5f8af7316eb1ad7df4/3bf4dba28f1b624e9342e98e4821788001ed5aa6/,2017-03-23 17:05:09-04:00/2016-05-26 17:59:19-04:00/,"address quantum vs classical conditions

needs more testing -- some complicated cases to consider"
Assembly,BBN-Q/pyqgl2,1b0488f40fb5ea8adf25db9c7ca12ddebebf3ee1,2016-06-13T23:31:56Z,15828dab7365f60555dbdaa0632ca4140f87f1d1/40ae09d6154f1bb93e06bde16472b61c7c3cc270/e3df2cefc4c56f2d5810c89dfea0ba0f90079d24/ebf88aeda0758a5a0c9a8b1b386573e7fca2f911/,2016-06-23 07:33:41-04:00/2016-07-05 11:06:13-04:00/2017-03-22 16:16:10-04:00/2019-09-12 16:34:12-04:00/,prototype of new format for function inlining
Assembly,BBN-Q/pyqgl2,202d3e05c3af1c4c5c9e4072ae020d2e3b48c348,2016-02-16T16:31:01Z,e591628c28a1072e9f4ad6875d07d72dcb6a06a1/2dda94cc53f72247ed39ad3cf7637162f81f2f64/bdd8683903b9fe4f6803259b76e5ee72ad7ffeed/c3e8a4a8e1abef53e1fb09e4aa9e260e8a54a5be/,2016-09-07 16:05:57-04:00/2016-09-27 16:48:01-04:00/2016-09-12 10:58:41-04:00/2017-03-23 12:02:29-04:00/,rewrote create_cal_seqs so it is good QGL2 (with a simplified QGL1 variant in comments)
Assembly,BBN-Q/pyqgl2,837972554d9869e97702a0d91b32af83f4c4b888,2016-05-17T22:08:25Z,99383104088c9c381d8b4404bf264da24d94fa00/,2017-03-24 16:40:33-04:00/,"represent simple things directly

if a value turns out to be a member of type that
we can represent directly (i.e. an int, float, or string)
then encode the value literally instead of encoding a
reference to the value in the table of values"
Assembly,BBN-Q/pyqgl2,6284ef1095ecc8180b7f6ee11011e79bd83faef2,2016-02-24T02:28:02Z,df5c4375105e76e542ea234a4c3d8dba6af9a649/afab6733b31db6aac6fe2ccb150aafa5fe239980/f66da62a9fc81d12625243e1380045e01b3c8ea3/f0529a30383e9d6aa74b8bb5bf34e78c89135108/b782c2ee3ede6dd1a410ad7e6feffe520a7db586/,2016-05-03 19:43:17-04:00/2016-06-30 18:21:21-04:00/2016-05-03 19:30:13-04:00/2016-03-01 17:31:56-05:00/2016-02-24 10:20:49-05:00/,"handle simple range() calls in unrolling for loops

the parameters to range() must be numeric constants
(which will cover more cases once constant propogation
is complete--but even then will leave holes in coverage)

note that we're still very limited in what we can handle
as the iters member of an ast.For object (no general
iterators, etc)"
Assembly,BBN-Q/pyqgl2,b776ab7aa7c234f16985b06929ea609830a1ddb5,2015-10-22T18:29:47Z,9b7a544414650f8d04e88697397a27578208dcdb/,2016-03-18 16:16:29-04:00/,added 'Qbit' function mockup
Assembly,BBN-Q/pyqgl2,46c795c32302219a312d0e21167f3110dd1b9a9f,2016-09-15T21:27:49Z,9a9208211be9de5c36e37e2f12d3c9e194909919/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-10-03 11:34:29-04:00/2017-04-06 21:52:58-04:00/,"move QGL2check into pyqgl2

it is no longer a ""fake"" external procedure inserted into the
code by the preprocessor, but instead is now an internal procedure
invoked directly by the preprocessor"
Assembly,BBN-Q/pyqgl2,eb31178265da44b649a8f07f861debdeadc788ac,2016-04-20T17:53:55Z,39e3932cd90e5ef914db10f83a30b0dd04f434d2/,2016-10-12 10:18:52-04:00/,add missing change to QubitFactory
Assembly,BBN-Q/pyqgl2,cd7cd07036892418f0406c5a0f6cb312fe835a19,2015-10-14T17:34:53Z,d82c5036752cfbc8bb49decc8717685833cc90e1/9ecc634ba618a2d92c12dfe998bab00033a1e30b/2a85685e09084ad4434d7bfe94997a23eb486dec/2ac21c47f37e72605037fc66f90c079e05335ee7/0522bce54a848d15881dcf6848e9c3fdfbbbf9ac/a4b19dc9ec7008b01891e777d88e2cec9abefe67/6707061c1c5e4ea31bee04903baa1bfc6d7b5309/321f895002fb9f3aad5cefde57f3b6ed1d91938e/07c61e2c9f4588a395f95fc9e433267c24c9c60f/,2015-10-19 15:57:49-04:00/2015-10-16 09:30:20-04:00/2015-10-15 15:53:22-04:00/2015-10-16 10:21:58-04:00/2015-10-14 18:10:45-04:00/2015-11-05 16:58:18-05:00/2015-11-10 14:09:40-05:00/2015-10-15 19:24:21-04:00/2015-11-11 14:22:19-05:00/,"constructing the call graph

for each qgl function, note which functions it calls

Right now we assume that each function name is unique
across a flat, contextless namespace, which only works
for a functional subset of python with function defs
in an effectively global scope.  We have to make assumptions
about the context of each call in order to do our analysis
instead of the usual ""we'll figure this out from context at
runtime"" way that Python resolves symbols."
Assembly,BBN-Q/pyqgl2,1076516228cea52a79eae11ec5a1473127b9298a,2016-06-28T01:22:46Z,96ba32c894075dee8727fb1565dc534a32235f6d/07de565eb23a4063117818f44b0c1993800f5c30/f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/c099cce83ea753676736fcfeae657a06fc8cea6b/,2016-07-07 18:10:24-04:00/2016-09-22 18:41:39-04:00/2017-04-06 10:01:35-04:00/2016-08-18 12:10:58-04:00/,"name barriers in a more readable manner

all the barriers from the same ""seq"" block have
the same barrier_id, but also a counter for which
statement they are for

concur barriers now have the same barrier_id, but
different prefixes (concur_e and concur_b)"
Assembly,BBN-Q/pyqgl2,5cdb43a5023f0831d69fe58459bf81d5e81c23de,2016-09-23T16:00:52Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/c0c19b3177f13755d7e2cc341a5bd5a901bb051b/6c9e4ef845ad4c297d46b9196fe714f752a8781f/,2017-04-13 10:01:57-04:00/2016-09-23 16:07:38-04:00/2016-09-22 18:44:29-04:00/,"Make init a qgl1stub, so QGL2 doesn't get confused by this function that uses no qbits"
Assembly,BBN-Q/pyqgl2,0ea2e6e31197db97d0fdfbb5afc4b3dc0fb19e38,2016-09-26T19:04:24Z,c687a1ddf1228fa2f885c6988c9906a00a516adc/,2017-03-23 11:59:02-04:00/,"fix how call-by-ref builds its with-infunc

the parameters to the with-infunc for functions
passed by reference was built using the new
parameters for the expanded function, rather than
original parameters for the called-by-reference
function, which mean that later checks to make sure
that every variable was properly defined would
raise a warning.

For example, if we had something like:

    # Let X be the name of an actual function
    def X(a: int, b: int, c: int):
	something

    # Make foo be a reference to X
    foo = X

    foo(1, 2, 3)

The call to foo would be expanded to add the type checks.  (for
illustrative purposes, I'm expanding everything fully, which is
not always necessary, and certainly is not necessary in this
case.  In the future we'll try to reduce the unnecessary expansions.)

    a_tmp = 1
    b_tmp = 2
    c_tmp = 3
    a_ass = a_tmp
    b_ass = b_tmp
    c_ass = c_tmp
    QGLcheck()
    foo(a_ass, b_ass, c_ass)

and then foo itself would be expanded:

    a_tmp = 1
    b_tmp = 2
    c_tmp = 3
    a_ass = a_tmp
    b_ass = b_tmp
    c_ass = c_tmp
    QGLcheck()
    with infunc(foo, a_ass, b_ass, c_ass):
	something

and then the checks would be moved to be inside the with-infunc:

    a_tmp = 1
    b_tmp = 2
    c_tmp = 3
    with infunc(foo, a_ass, b_ass, c_ass):
	a_ass = a_tmp
	b_ass = b_tmp
	c_ass = c_tmp
	QGLcheck()
	something

And this would cause a problem because when we do a scope check on the
with-infunc, we'll see that it depends on a_ass, b_ass, and c_ass,
but none of those have been defined yet: they're defined within the
with block.  So the for the checks to work without complaining, we need
to rewrite the infunc to have the ""original"" parameters:

    ...
    with infunc(foo, a_tmp, b_tmp, c_tmp):
	..."
Assembly,BBN-Q/pyqgl2,6bad37b24e9bbe64b5d4273273fb2a801e124e84,2016-01-28T17:40:05Z,e57ed44d4a076aaced4afbee3f4f8784e82830ea/8a224933e9a6512a0bc8a5e2e10ab2e6d2d85a3d/,2016-02-09 11:30:55-05:00/2016-04-01 08:55:04-04:00/,"don't try to import ""system"" modules

the way we detect system modules is a bit of a hack,
but it should suffice as long as we stick with this
version of Python"
Assembly,BBN-Q/pyqgl2,60227f5d493445cb5f1476a4ffdbcca17fb327e3,2017-03-23T21:06:57Z,a76459f972ef3d91648f774e2d5982c4ed1dafcf/,2017-04-13 10:01:57-04:00/,"Introduce a qgl2meas decorator

Like a qgl2stub, but that returns a run-time value.

Doesn’t do anything with this new type of stub, yet, except treat it
like a normal qgl2stub."
Assembly,BBN-Q/pyqgl2,dd692464df3a04560fe3a229a9e734dfb77b084c,2016-06-24T14:26:18Z,ce8a436ec9dae4e45cbcb513b8ec4ceb7441e578/,2016-06-24 10:43:08-04:00/,"several bug fixes, more debug logging"
Assembly,BBN-Q/pyqgl2,53db27637e4b66d965ed74a9dd7d5c46dbf978e2,2015-11-06T18:50:20Z,5b6d59d06703388764770dec0f09cc6a260c0114/9fd00f045a66b4db21318320aeb74e973935a172/,2015-11-10 18:51:46-05:00/2015-11-10 10:18:48-05:00/,"handle local symbols properly (w/o from)

if a symbol name doesn't start with a module prefix
then try to resolve it locally

This will be revamped when 'from' imports are
implemented"
Assembly,BBN-Q/pyqgl2,be22af1c91b4634ee4f2e868f8e14b159d8792a2,2016-08-22T18:52:25Z,39e3932cd90e5ef914db10f83a30b0dd04f434d2/e07e07028cf66d29fb7ffd1f437550ed8c89a033/39305cd69ec192acd0d702be7874490c90e702f1/,2016-10-12 10:18:52-04:00/2016-09-28 13:55:57-04:00/2019-06-17 18:28:39-04:00/,using np.linspace now works. But using pi or calling len() seems to still cause problems
Assembly,BBN-Q/pyqgl2,cf7820b16fd2d366ac7e784076b2b9a0dc93682f,2016-10-04T12:28:08Z,ee8c1d0b16cae0fcac2f2a0214b9097666325280/,2016-10-06 17:06:14-04:00/,"handle generators as iters; lazily create values

instead of trying to create the entire list of iters
before performing the iteration, create them one by one."
Assembly,BBN-Q/pyqgl2,10ec37bc54b130fcc47c8f92e2d35bebd453b8fb,2017-04-08T00:35:59Z,88add230f0b5aab97676855a8556987f29f96464/,2019-06-11 13:49:21-04:00/,"Fix QRegister(args...) where args are QRegisters.

I was searching for the argument values in allocated_qbits, but args will
be in terms ""sym_names"" rather than ""use_names""."
Assembly,BBN-Q/pyqgl2,f2828e3bfe933a2d4b9111a7125f5207cec6a038,2016-09-12T20:42:04Z,a29ad125d1662023231fef50e27ee697ded4c333/39e3932cd90e5ef914db10f83a30b0dd04f434d2/,2016-09-24 14:31:52-04:00/2016-10-12 10:18:52-04:00/,clean comments on what works & doesn't work.
Assembly,BBN-Q/pyqgl2,232a7e379b0311f1d19d505b525193629a2598e3,2017-03-22T21:09:00Z,91b34ced66e3c7df3030aadb2e0ef9e07b8a6049/356749f00b05fc4ae7521f49c9f90680a38a452e/27f82084b3176663baa8375a9d5bc013479f51be/9c0ce6f0fff79d660166c55a299465390c4cde31/,2017-03-29 11:41:52-04:00/2017-04-11 16:53:22-04:00/2017-03-29 11:21:06-04:00/2017-03-22 17:22:30-04:00/,Fix edge test.
Assembly,BBN-Q/pyqgl2,0a2b29593cf05b46c34351c3a25329326534fd22,2016-03-16T21:11:25Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/5204ecd0473c66ee812039244ace1e5a35cb22b7/7049b38da4c002dd828f8666fceec215dbfe3361/99174590189c3bb4480b5fb6f6e9c01f3b5e47bc/,2016-06-30 18:21:21-04:00/2016-06-30 18:32:06-04:00/2016-05-23 19:41:02-04:00/2017-04-06 21:52:58-04:00/,"move find_all_channels to concur_unroll

replace duplicated method with call to find_all_channels"
Assembly,BBN-Q/pyqgl2,f45dc8c6d9e5b88c00dff2547a96f53a9643943f,2015-11-23T20:08:10Z,28a519b4f9985b4dfd7d332029d81bb7f3248eb3/800348874f8ff7df95d9cac7aab21fc8e794ad9e/395e39cbef7ae90119157b3b0065cb4d2095ebbc/,2016-09-14 18:22:26-04:00/2016-04-13 18:08:26-04:00/2016-02-24 11:17:45-05:00/,"cleanup diagnostics messages

cull unnecessary diagnostics; fix format of others

don't bother trying to import modules from the ""system""
library and don't consider it an error if we can't find
some of them.  (this is a tough problem to handle because
some imports *should* fail, but in general if we see an
import we can't resolve it's usually an error...)"
Assembly,BBN-Q/pyqgl2,c6dbd2b3879e4d99dc115d4c03a845f2d6ffd78f,2016-09-06T22:26:08Z,4f4b71beeaba6a1f2e9d945f2a3e50eaddf54876/c7497df9f519ff1b808cbc2bafae21752051fe1f/ad66aad5919b9be3fa1666414ef6b33de1936a95/,2016-09-15 17:46:24-04:00/2016-09-15 17:13:03-04:00/2016-09-15 15:13:28-04:00/,"add function name: make QGL2check more informative

also, do not directly call sys.exit.  Just mark the computation
as failed and see if there's more that can be done."
Assembly,BBN-Q/pyqgl2,847c6d602db69e680c482b6de83d806bd09ce0ee,2016-10-10T17:44:09Z,a01b8a0a67574d86a037d69d326f16eb6e5bdb60/9c0ce6f0fff79d660166c55a299465390c4cde31/7cb634dd515ac6ad148ba5e261e563d8c833f0be/ef42a9b1125661d6997032a6199dae71ffaf7362/,2017-04-07 15:05:12-04:00/2017-03-22 17:22:30-04:00/2016-10-10 14:05:42-04:00/2017-03-22 16:13:42-04:00/,tests for some side-effect operations
Assembly,BBN-Q/pyqgl2,fbfa3804c8964c4400d5690624477e6e8bd001b3,2016-09-15T18:23:21Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/efedc08ec3dee24a1dcc58842709815e79863a13/,2017-04-06 10:01:35-04:00/2016-09-27 13:27:42-04:00/,fix import of quickcopy
Assembly,BBN-Q/pyqgl2,4239941daf5946739b3ecb33b3c4eddb92860a01,2017-05-25T20:21:34Z,9ce555da4a391c77392a7c81bdd1d76c3ed254e9/,2019-06-17 18:27:37-04:00/,"Update compileAndPlot().

I'm on the fence as to whether we should keep this helper at all."
Assembly,BBN-Q/pyqgl2,e45e88637feb3c1b3fe7dcba676b6ad8ad976c22,2016-09-27T23:04:11Z,232a7e379b0311f1d19d505b525193629a2598e3/,2017-03-22 17:09:00-04:00/,fix location of test code for edges
Assembly,BBN-Q/pyqgl2,3dec7b1af18c7a1e2361a1b79df1e9f56a9f24f6,2015-11-24T18:26:13Z,bb3608b6d7638f22ade047baf404c589784d3d76/0410ea63691c7f77873ad86a16168d4c48479abd/30eb3a2e55d4b9aa451b2da20aa3a5592a480bc3/,2015-12-08 13:03:21-05:00/2015-11-24 14:18:19-05:00/2015-11-24 14:56:27-05:00/,"make the error message closer to Python's

when we encounter something that would be an error in Python3,
try to mimic the error message or exception text.  Not always
identical, but close enough to be clear what's happening"
Assembly,BBN-Q/pyqgl2,b24538119fd6d1243f08b19ab30a159522b8abe9,2016-02-26T21:25:29Z,cb975217c053138d4e6f20abc0f3cfc91dc8a1cc/94250b99d38edd67798a85a10aa51289b898fa34/cb52749fbdf212d4a6d996d954ac11631c351033/8bc9a561f38f6c1e4bde77a2fec360e8638892ea/e29c4ebb9b01cb9e29c766c2990862919f88324a/c63f9abd605a701d527d107ebc418f3c8f801a96/,2016-06-16 17:21:54-04:00/2016-04-07 12:27:11-04:00/2016-02-26 17:00:11-05:00/2016-04-14 15:06:03-04:00/2016-05-13 00:03:55-04:00/2016-05-11 22:43:59-04:00/,"iterate expansion steps until convergence

Keep trying to do the inlining/unrolling steps until
either the process converges (no more changes occur)
or we have some reason to believe that the process
is divergent for this code (for example, if the code
is recursive, which we don't handle yet)"
Assembly,BBN-Q/pyqgl2,c0c19b3177f13755d7e2cc341a5bd5a901bb051b,2016-09-23T20:07:38Z,19f090f0b17ed60b9195793f183eae5fd7b73a2b/17e96f5d2e64398881ad5427d3f1740d8c055a66/,2017-04-13 16:03:24-04:00/2017-03-27 15:53:23-04:00/,split qgl1_util into stubs and implementations
Assembly,BBN-Q/pyqgl2,f0529a30383e9d6aa74b8bb5bf34e78c89135108,2016-03-01T22:31:56Z,df5c4375105e76e542ea234a4c3d8dba6af9a649/9b7a544414650f8d04e88697397a27578208dcdb/7049b38da4c002dd828f8666fceec215dbfe3361/,2016-05-03 19:43:17-04:00/2016-03-18 16:16:29-04:00/2016-05-23 19:41:02-04:00/,"fixed other calls to func.id; use collapse_name

there are still a few places where this could come
back to cause problem, but they need a deeper fix"
Assembly,BBN-Q/pyqgl2,37fb478da28a2f403e5d83d85f08549035532ad7,2015-10-12T15:20:25Z,8bf48a852b8acaee9f656d529869c17eb6fc4463/30b22f27f5b740f388e8ed7a01f2efacc086f507/4d702cbc44df1d3ef0020abb41e68a28567f76ce/,2016-02-01 14:23:28-05:00/2016-03-21 16:46:01-04:00/2015-10-12 13:29:14-04:00/,add simple example files
Assembly,BBN-Q/pyqgl2,d6af00f88a8977a72366860560c799c3d61cad10,2016-06-28T15:47:45Z,afab6733b31db6aac6fe2ccb150aafa5fe239980/,2016-06-30 18:21:21-04:00/,use new is_with_ functions
Assembly,BBN-Q/pyqgl2,b48dc66f25b9f7b3dd7fa92a8ddc085b0711a834,2017-06-08T15:50:35Z,fc86e40edd9744dd60fecc9a130ef15bffe9196e/,2019-09-13 16:28:50-04:00/,QGL1 compiler expects a list of lists.
Assembly,BBN-Q/pyqgl2,d04e0574a9799a61bc673c534a4f0f3d8dface48,2016-01-26T15:28:10Z,4e14e678595bfa7cca38e2f49d4d773a48f2bdd0/d5259010741db8ab055c5384c6bcba80eebfddd8/dc38648e7543d7e7a8772ee327cedd83445708c8/aad9ff28bb3c75b8e286222accc1bcc390e9e839/00c13d2072512aad3b07ab405fc933a25134cd0b/200d480eda5e4279e6192d1dae034fc7f5af99ff/39305cd69ec192acd0d702be7874490c90e702f1/2b1458eb04bb1aba1e1ffad24355ab5fa71888bc/ec5d2493b4d497df8407a5be031bc5df6971c364/06e71427909def2dd8c70d48a69c852899a863d8/ce51c3da3e5924e22bbbe958258a7042f1cf7a51/29302b00c0c43ad4b98ca18e095fd51cddd26bf3/d06e9a42f9596c48ace82ae82c1df4d249715de9/535ddb21a7f0c73c4b9d34afd84322d2e5a6135f/bcaafd1e4e5917cee2475f366c7b3d99e587b571/bc0e4a142f6bebe3670eaacde69adeeb224b77d1/2dda94cc53f72247ed39ad3cf7637162f81f2f64/11ba6a179809a327c5b096d5e35c05853fa19b96/cda56a922723f87a7a6d39af3a862553609f2927/39188a72c8a2484e3a13f5fb4c3eb65131889f29/615352f7b26ba981e27b58c382d9565184fccadd/afc3b7c5dd51f4926535a0dc82f4c8226408112a/e07aa94fd1889401e09156364033d7f3156e7461/9217721da958f15856927c4f9695c61f2fdad3f1/80492201f1eaa3661441f5cce01ab3985afb8dda/dd9394c625a7c6c5138f3534431a34add267f79b/0a6a77c169d7af5c4dd2dac7e23919a5123581c1/e637bcf305da160c4e144b1482d4bcbe0970d130/3b9f6ae7cf67708f5a36fbc4ca46f540c858744e/eedd04eea773ef0dd11d7db7c0d6d7e9af0bbb94/bcf6928ae5052ee76a07e47399c7c083f8e530b1/e591628c28a1072e9f4ad6875d07d72dcb6a06a1/530ff82ff7e2cbb7ad5a3262477407be7db0b186/5e72603a27a7ef02791a8c9c442fb6eea80f4bf0/bb3fde982a8fd9fca8b70ee3aeb7c60f2e8abea0/1cfbe6a5f9fe6597899e0654141da646ff601b2e/,2016-01-26 15:20:28-05:00/2019-06-18 19:55:45-04:00/2016-02-26 13:44:02-05:00/2016-02-17 10:42:18-05:00/2016-02-16 13:16:34-05:00/2016-02-11 16:21:26-05:00/2019-06-17 18:28:39-04:00/2019-06-12 16:31:27-04:00/2019-06-17 13:51:22-04:00/2016-02-22 16:53:40-05:00/2019-06-25 15:48:25-04:00/2019-06-19 13:35:55-04:00/2019-06-27 15:45:34-04:00/2017-03-30 13:31:14-04:00/2016-02-23 16:47:48-05:00/2016-01-26 14:21:01-05:00/2016-09-27 16:48:01-04:00/2016-05-13 14:56:02-04:00/2019-06-24 13:25:22-04:00/2019-06-12 16:34:55-04:00/2016-03-17 13:40:17-04:00/2019-07-16 12:45:14-04:00/2016-02-24 14:44:13-05:00/2019-06-19 13:11:28-04:00/2016-02-23 14:17:19-05:00/2019-06-21 11:30:29-04:00/2019-08-16 14:22:52-04:00/2016-01-29 12:19:26-05:00/2016-01-28 14:12:45-05:00/2016-02-05 16:15:14-05:00/2016-01-26 14:22:39-05:00/2016-09-07 16:05:57-04:00/2017-04-11 11:41:47-04:00/2016-01-26 14:31:55-05:00/2016-01-28 17:00:04-05:00/2016-02-18 16:00:04-05:00/,"Initial version of test_Sequences for QGL2 and python3, along with initial python3/qgl2 stubs for the basic_sequences. Also add a .gitignore"
Assembly,BBN-Q/pyqgl2,6c66c74c4ac75a1a79638485ef3c33e83bd0f610,2016-03-28T19:24:21Z,1625d995d8c24a2e68b372cc03a3fe939e00a4de/,2016-04-04 19:59:13-04:00/,"Don't use WAIT(QBIT), but instead Wait() which matches the QGL1 function"
Assembly,BBN-Q/pyqgl2,589e28d94e99a2d4f9b04cbdfb9615d5635f050d,2016-08-19T14:25:17Z,c6dbd2b3879e4d99dc115d4c03a845f2d6ffd78f/,2016-09-06 18:26:08-04:00/,"add original name to check; remove diagnostics

add the original name of the symbol (usually a formal parameter)
to the call to QGL2check, to make the error messages more
meaningful"
Assembly,BBN-Q/pyqgl2,5d32a8c08665f93e0d298671105ec4417f59ecca,2015-11-23T20:27:05Z,9265f051b5c7f4df1edaff3c30029e4f3e3a8c90/,2016-01-25 12:58:55-05:00/,cleanup 'path not found' msg
Assembly,BBN-Q/pyqgl2,3ae151330dd1bc9b33bcde284f09204f10f600c4,2015-10-06T22:15:36Z,57699994fc8284b9f07054bd8a6f4c8e2379b4ac/be7caa4cde15e70454c4293c30592b7591427b77/68247976460954f47703e527a9244408e4184694/60227f5d493445cb5f1476a4ffdbcca17fb327e3/988bc84f6002f49aa56b8fef77c44d3f4cbe476d/,2017-04-11 15:23:04-04:00/2016-04-13 18:11:45-04:00/2015-10-19 15:56:07-04:00/2017-03-23 17:06:57-04:00/2015-12-02 18:24:47-05:00/,basic boilerplate for QGL2 programs
Assembly,BBN-Q/pyqgl2,35e1f806ccbf2bf1c53f2fc7ab94eadb226d435f,2015-12-04T18:04:17Z,996228b23a7311edeb3d0e528f1454a302d30806/,2015-12-11 13:30:05-05:00/,"track changes to names of functions, constants"
Assembly,BBN-Q/pyqgl2,999fa4c3a5ac3c379350abc94b06130813521f9a,2016-07-11T20:36:40Z,1d7caae5a1909e00e7d63c4125133d2a028faa8f/dabe675ff8918039179cf53f1b22c7d99597ee52/70f0c0eaf36135fa53a2724dffd1958cfe243672/0aed8a16950da4f7d3e8995ebec4aa0ac5ef2418/185d56ad04f32b81f1c3988324339bdc79c39ae3/,2016-07-12 10:50:39-04:00/2016-07-22 09:48:58-04:00/2016-07-12 17:01:34-04:00/2016-07-13 11:33:51-04:00/2016-07-13 12:21:43-04:00/,"* Fix some log messages to be more clear
* Do not bail early on calculating proper lengthSince for Wait/WaitSome barriers. Instead, in replaceBarrier() that actually does the replacing, only actually replace the Pulse if it isn't a Wait/WaitSome.
* Fix logic in getPreviousUndoneBarrierCtr to consider lengthCalculated and prevCtr
* Add a new testWaitSome() test that includes explicit WaitSomes that cause problems"
Assembly,BBN-Q/pyqgl2,c6adcb737e0b8c15c8b1427d038ad764e0484b41,2016-02-25T18:54:27Z,93e91f3cb853321899340850a241a5c237f40b31/,2017-02-16 14:56:23-05:00/,add missing call to init()
Assembly,BBN-Q/pyqgl2,8f1f712a724996a92d3f7fd5cbb4b39b29afb8bb,2016-04-06T19:01:28Z,0024e44a9ebbf347bbad90151d759fc2060656da/2fafcfaab3c4c54b9c599f3b8494b15e9dd53095/078bb270283b4aef27dd21da0ace8cbedbb56cbe/376981202e56dab3c048c7d6877b21aef9cac7e8/1162ba5035f3c69db1e8f9eba577d647409f8450/,2016-04-20 12:45:43-04:00/2019-09-26 12:06:38-04:00/2016-04-06 15:04:22-04:00/2016-05-05 16:06:12-04:00/2016-04-11 11:01:20-04:00/,add a notebook for running Ramsey
Assembly,BBN-Q/pyqgl2,4a4ff9153ae5dddae5c33777a0fb5b92888e0f59,2015-12-14T21:40:01Z,f6164de8ec7318a1b1117fc9cf2059b3b2c75d6c/,2017-04-06 10:01:35-04:00/,small additions to test FindTypes
Assembly,BBN-Q/pyqgl2,8f26f6e138c3b4483c3719a37cd5bdff2335cda0,2019-01-17T20:52:52Z,d652682248d68ed17e06249858a0d071bef60461/,2019-06-11 14:57:47-04:00/,"initialize the ChannelLibrary as ""blank""

otherwise, there are complaints that part of the channel
are undefined.

also, fix the calls to qwait, which were broken because the
order of the kwargs changed and we were pretending they were
positional parameters"
Assembly,BBN-Q/pyqgl2,5dbad6f0e840cf2dcde52a16c4d44cb067cc96e5,2016-07-15T15:40:59Z,403f8ca7cc9b1ca8be023b680e96790293ca06bb/1fd84313e44d1e74d3ea86ee9885263719001685/,2017-05-25 16:22:05-04:00/2016-08-18 12:14:41-04:00/,qgl2_c2h must return a list not a set
Assembly,BBN-Q/pyqgl2,0d536afaa91937b0e715a35e018ecdd2a98877f3,2016-02-08T20:16:53Z,479541cded5e160bc146161d14fbf56ac6f14d08/,2016-02-08 17:14:34-05:00/,correctly print dots for relative from imports
Assembly,BBN-Q/pyqgl2,0094db642e169ec3415149e4b37222ee4767b893,2016-07-05T22:34:15Z,97fd6c72c341dc6233339e59cc528f71bddb52aa/,2016-07-06 17:21:37-04:00/,"some cleanup of inlining parameter type checks

still seems overly complicated, and not entirely compatible
with how things are checked in the importer: the importer only
recognizes specific types (almost entirely QGL2-specific) while
the inliner type checker attempts to be more general.  Need to
figure out which makes sense here; more generalized has many
advantages, as long as it doesn't break something else"
Assembly,BBN-Q/pyqgl2,3b93923a27736d085f5c325c7dcbc669e24e42ae,2016-04-11T14:38:32Z,ae0b9abfa7834d0c81df89dead52582af0db29b0/d1b934f122ae57bcc4b13d919b1e9490bd9b810f/,2016-04-13 10:21:16-04:00/2016-11-14 15:22:03-05:00/,Note we need a pull request on QGL for this to fully work
Assembly,artiste-qb-net/qubiter,d36f63bfcf91bb9ded9ce0eab3ae4f5a8026b428,2016-10-07T23:06:01Z,70df0a76bfec9b5735684b173d16ea1760cd6c84/b6540b04224feb0ab68cbeb6d153a41d0a94efb5/86721215ea820925ee9e040a8bdb952424980dc1/72b344dca4e67c179194d19b526f0ae65035da60/,2016-10-17 00:44:31-04:00/2016-10-08 00:31:10-04:00/2016-10-16 11:48:50-04:00/2016-10-08 01:07:11-04:00/,"Roundoff puzzle in phase_est_iterative notebook solved

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,746481beb350a8193407d9697e886d86fadf919b,2019-06-30T02:37:53Z,e592002498517c7e6778bb4d53620ded4507482f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/ec8bb736cffb85bc8fb1ce0e757ac0c38861f884/8c4db439f5fd5fd120abb25568df47c46ffa9cd6/4c0d02e60e0ebc10943c44bd2ebf6472238fbcce/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/705dca87dae19555ca3920b936d9f9d8b81674df/45f419f4ad593b52624c613745b761079cd18d14/,2020-02-12 04:20:12-05:00/2020-02-08 02:07:48-05:00/2019-07-04 10:57:45-04:00/2019-07-01 01:18:41-04:00/2019-06-29 23:38:19-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2020-02-16 00:33:43-05:00/2019-07-01 03:01:31-04:00/,Added new notebook widget_adjustable_parametric_circuit.ipynb
Assembly,artiste-qb-net/qubiter,705dca87dae19555ca3920b936d9f9d8b81674df,2020-02-16T05:33:43Z,bc8e72eec6c67f4c5a1338ffcb19021262b1ec7b/c211ab9a91b13f3377df32ff047258bee3516fac/,2020-02-16 09:47:21-05:00/2020-03-25 22:50:15-04:00/,Added static image to notebook with widgets
Assembly,artiste-qb-net/qubiter,e3f55398d7dc145641ff232b4ac78b8a5024f284,2017-01-15T20:54:33Z,302b4bc475e418632d7506a35ebe3067f4bf572b/33048fd17e72008231c9d6d49e02dcd3ff8d670f/e592002498517c7e6778bb4d53620ded4507482f/1186fb02c3fe425419356be82e153b28aa9183c2/b19eca7aef458795774ac7ea23a60329fa6ab0d1/41ada4bbae07b23d61a91bd3d48369204744aa75/9b1ef48ae099078db90f9d89e8308d7ff9f24131/35cfb2e08059618c74451b34391c8a0a2d7ea9e5/69fcc45cc71f6c7af9eb52f6f106b705bb81f8be/a6097e48939df0edae7ee330c93139a59561aa72/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/6f6a55568f5c63e6d70b6b40ee35c31365932a4d/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/3de15b1681ff7ebc41038a9c852d676884cb149a/7f6045003d313158bcc50f03df9586f0b4356b5b/ca7bd48d43cf0085555a750e47144af341e5dc0c/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/8f806abdfe360feaef7ed0c011742b6ddf3d69aa/,2017-12-28 10:54:08-05:00/2018-01-27 13:13:48-05:00/2020-02-12 04:20:12-05:00/2019-01-16 12:15:09-05:00/2017-10-05 15:45:17-04:00/2018-01-01 15:57:20-05:00/2017-02-17 14:43:00-05:00/2017-01-22 00:45:02-05:00/2018-01-25 19:28:57-05:00/2019-01-10 23:45:04-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2020-03-26 03:39:10-04:00/2017-12-22 13:55:48-05:00/2019-01-10 22:50:59-05:00/2017-09-27 23:03:03-04:00/2020-03-26 04:31:18-04:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2019-02-13 11:23:31-05:00/,"Transferred quantum compiler to main repository. Added link to new CS Decompo repository

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,a6144f2ec16999ffc49628d18143c520f475d70a,2019-01-19T05:24:34Z,f72a7ee826838c95df430a91c0937d59721f658d/7857d8c003a11e4313f8a92333c78b16dd6e83e3/1f26b23e9733598351e795594346966e14508351/43df6d68fe473a6d99215fe2022d16dee4a20258/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/37ff0a56cf94741546fd9073454795cd9e41bfa8/6904697a0cef061e6e8eef0d72a1d96472717ce7/,2019-02-20 23:25:41-05:00/2020-02-08 02:07:48-05:00/2020-02-10 15:57:18-05:00/2019-01-20 19:38:02-05:00/2019-02-06 12:15:22-05:00/2019-02-04 15:05:09-05:00/2019-01-20 19:46:36-05:00/,improved Hello notebook
Assembly,artiste-qb-net/qubiter,dcb3a2e027a98a178ac0172c3de5d87ad912273b,2019-01-19T01:37:09Z,e592002498517c7e6778bb4d53620ded4507482f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/c211ab9a91b13f3377df32ff047258bee3516fac/8425018c56d3ae7eee62793557599ca0026a9f9a/462dd426f8b9cc538a45a394147059b4f260adfc/,2020-02-12 04:20:12-05:00/2020-02-08 02:07:48-05:00/2020-03-25 22:50:15-04:00/2019-02-23 20:39:58-05:00/2019-03-07 23:14:36-05:00/,added Z**t and CZ**t to qbtr to cirq translator
Assembly,artiste-qb-net/qubiter,7b2bb124ce2d6c159bdb789fe5e9b1697f6fa744,2019-05-13T21:39:01Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-06-14 00:22:03-04:00/,Jupyter notebook illustrating mean hamiltonian minimization (VQE) using TensorFlow and qubiter's TF simulator SEO_simulator_tf
Assembly,artiste-qb-net/qubiter,9f9065d88f07b2c7a333ac847df336262a56a006,2019-05-11T00:22:40Z,3947c630165a4bcd9c0e452b3bb170573fadef7d/,2019-05-10 20:38:29-04:00/,fixing SEO_simulator_tf (TensorFlow simulator) so it tapes correctly
Assembly,artiste-qb-net/qubiter,6b3497f9604daee4a59d3663e4d5838c31a8706c,2019-05-13T06:47:49Z,8e156512fcf09090c899f979d88de4b89c588c7e/,2019-05-13 09:34:16-04:00/,dtype problem
Assembly,artiste-qb-net/qubiter,8f806abdfe360feaef7ed0c011742b6ddf3d69aa,2019-02-13T16:23:31Z,d906751c3d058c84900b918440ac8fdfdd4a9552/15e8974d0113fd4d0b474c8bda477313de623332/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-05-13 16:38:20-04:00/2019-02-13 11:31:53-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/,Started new folder adv_applications
Assembly,artiste-qb-net/qubiter,d8e3600cf161b7c9d75582e2da9f12540116b52a,2019-01-18T23:15:04Z,a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/3cc7ae7d83bc93f676b79aa0700dc68895f78566/,2019-03-17 03:02:11-04:00/2019-06-15 13:34:05-04:00/,added print_log_file()
Assembly,artiste-qb-net/qubiter,609a64822f7a89778c85c1708a6028ec0033cb91,2019-06-23T18:03:03Z,425639369bf97854c6b737ee2e7548a720a935f5/,2019-06-25 04:53:07-04:00/,added missing comma in conf.py
Assembly,artiste-qb-net/qubiter,3278b874283927de2de08727e4b11caec895dfe8,2019-04-13T15:10:15Z,1f26b23e9733598351e795594346966e14508351/,2020-02-10 15:57:18-05:00/,minor changes
Assembly,artiste-qb-net/qubiter,ec8bb736cffb85bc8fb1ce0e757ac0c38861f884,2019-07-04T14:57:45Z,7857d8c003a11e4313f8a92333c78b16dd6e83e3/c211ab9a91b13f3377df32ff047258bee3516fac/391ae8ef3f1f89d057a7c0fe7da622da8cef270f/1f26b23e9733598351e795594346966e14508351/705dca87dae19555ca3920b936d9f9d8b81674df/,2020-02-08 02:07:48-05:00/2020-03-25 22:50:15-04:00/2019-07-04 11:40:17-04:00/2020-02-10 15:57:18-05:00/2020-02-16 00:33:43-05:00/,renamed utilities_widgets.py to utilities_nb.py
Assembly,artiste-qb-net/qubiter,5c1f868fc428e1fb92d7c438da08d8f7c596f410,2016-05-25T15:13:51Z,8f40078256f8dffd0fdcb1d9d17513e67dc16690/763abe38215e62c20884cb0545ca1826bada7bed/63ec066797bdfab6b7bc5a23def2c0084ea89446/7ca57e7b8e6e6cff71e79184697026aa755594c5/7f501ea7afc282b52d5d6550c446c2d3751fe40c/c5f000caa56a1cd7d04a0b729f7e51e89b9f00ac/5d301edea6446be4d92798c873473cdc652a6053/54b94af08edc4da15d2d6bd3499fb74365296502/,2016-05-26 19:08:57-04:00/2016-05-26 19:09:29-04:00/2016-07-02 02:32:41-04:00/2016-05-26 19:06:57-04:00/2016-05-26 19:09:45-04:00/2016-05-26 19:09:14-04:00/2016-05-26 19:05:02-04:00/2016-05-26 19:07:22-04:00/,"Interlaced 2,3,4 qubit subcircuits

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,33048fd17e72008231c9d6d49e02dcd3ff8d670f,2018-01-27T18:13:48Z,58046c144f1664ae3f6f16c7a367acb08e7926de/f6e5181e22a4c93f94393974c72fae8e2fc6af87/1186fb02c3fe425419356be82e153b28aa9183c2/d7ba96c958caa1708ae3ef09d3c84206ccb77316/680aab8c05dceeabc2f324a8070098c74faedee2/dcf87233179b58206b26c8906a752c26ced2c0ec/17b2b17976a4c68940cedb8ae3ac88e037f1fd29/1f26b23e9733598351e795594346966e14508351/82ba7982ea591a17bde043a5fd96e02b8dc06d72/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/3de15b1681ff7ebc41038a9c852d676884cb149a/,2019-03-04 03:55:32-05:00/2019-03-21 11:26:43-04:00/2019-01-16 12:15:09-05:00/2019-06-14 00:22:03-04:00/2019-03-19 14:34:34-04:00/2019-06-16 01:43:35-04:00/2018-11-03 22:28:07-04:00/2020-02-10 15:57:18-05:00/2018-07-18 13:13:07-04:00/2018-07-25 12:31:04-04:00/2019-01-10 22:50:59-05:00/,Put all tests at end of files inside main() function. This substantially cuts down on global variables and shadowing that is potentially dangerous
Assembly,artiste-qb-net/qubiter,12c4b1d6ff9801a43329c2da356b92cccead92fc,2017-02-12T20:20:21Z,a35ed49ac6fa1d00e9c03726f265539469cbd4e6/82ba7982ea591a17bde043a5fd96e02b8dc06d72/,2017-12-22 13:55:48-05:00/2018-07-18 13:13:07-04:00/,typo
Assembly,artiste-qb-net/qubiter,8b2a7d81b3be99e488d4da7382cffa309d6b968f,2016-03-21T22:43:19Z,37a33e1553f4a0cfe7ae27a2ca32a277bd9da199/7f6045003d313158bcc50f03df9586f0b4356b5b/a3b27689640e5fce74a6ad3f7a993901219061bb/63ec066797bdfab6b7bc5a23def2c0084ea89446/c73470e305a50486e171dfe7d48a4bd08fee24a0/d7ba96c958caa1708ae3ef09d3c84206ccb77316/c211ab9a91b13f3377df32ff047258bee3516fac/75388f67d5666dd74791f47ebf9201121685869a/c3f937972c610644c00b7934f5b0f26116bce310/653988f4dce11447c4bdb7c0a7b71a9fe284d445/767365c3b030979059c5d21d3aac0e592a8a6041/7261a1932646eae31cbc0d0a04083b57a0e18af8/81954c327e0e49c7994e44b324ced5d06198cb3f/,2016-03-29 11:36:49-04:00/2017-09-27 23:03:03-04:00/2016-03-29 11:36:49-04:00/2016-07-02 02:32:41-04:00/2016-06-24 15:39:21-04:00/2019-06-14 00:22:03-04:00/2020-03-25 22:50:15-04:00/2017-09-30 20:00:34-04:00/2016-06-17 14:48:02-04:00/2018-07-23 11:51:04-04:00/2017-01-02 20:26:44-05:00/2016-06-17 19:21:40-04:00/2016-12-01 12:13:48-05:00/,"Small improvements

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,80dd3e96565af6ada7abbff3655fc5adb79360dd,2016-12-08T19:14:55Z,7f6045003d313158bcc50f03df9586f0b4356b5b/c6d71f422710934f67aa2ce3e990e757ad721606/e592002498517c7e6778bb4d53620ded4507482f/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/18cb5d389405a767cbbf0796d28ad6f8ad7faf02/7857d8c003a11e4313f8a92333c78b16dd6e83e3/1f26b23e9733598351e795594346966e14508351/767365c3b030979059c5d21d3aac0e592a8a6041/3de15b1681ff7ebc41038a9c852d676884cb149a/,2017-09-27 23:03:03-04:00/2017-01-12 20:54:26-05:00/2020-02-12 04:20:12-05:00/2017-02-04 04:35:12-05:00/2017-03-01 18:17:52-05:00/2017-01-09 12:12:26-05:00/2020-02-08 02:07:48-05:00/2020-02-10 15:57:18-05:00/2017-01-02 20:26:44-05:00/2019-01-10 22:50:59-05:00/,"Added pdf explaining CGateSEO_writer algebra. Fixed bug where had left out conditioned delta z rotations

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b,2018-07-25T16:31:04Z,dcb3a2e027a98a178ac0172c3de5d87ad912273b/1186fb02c3fe425419356be82e153b28aa9183c2/a6097e48939df0edae7ee330c93139a59561aa72/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/c211ab9a91b13f3377df32ff047258bee3516fac/ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/72d39c120127cf3194a6e678a4e7b7998180605d/1823d776e502437b816f9ac317f3569bb0bdb23e/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/d4848bad35a6052d3748bb3771748ad8cc862eef/3de15b1681ff7ebc41038a9c852d676884cb149a/462dd426f8b9cc538a45a394147059b4f260adfc/,2019-01-18 20:37:09-05:00/2019-01-16 12:15:09-05:00/2019-01-10 23:45:04-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-03-25 22:50:15-04:00/2019-02-24 03:59:37-05:00/2019-01-18 12:08:15-05:00/2018-07-25 14:44:47-04:00/2019-06-16 19:11:59-04:00/2019-02-02 13:17:35-05:00/2018-07-28 11:27:14-04:00/2019-01-10 22:50:59-05:00/2019-03-07 23:14:36-05:00/,"Made use_ methods in SEO_reader truly abstract. Before, they were just empty methods. But that was dangerous because might lead to reading a line and not doing anything about it."
Assembly,artiste-qb-net/qubiter,767365c3b030979059c5d21d3aac0e592a8a6041,2017-01-03T01:26:44Z,935098785ac910fa9afc483bc42b884bb7d069d2/33048fd17e72008231c9d6d49e02dcd3ff8d670f/9154931e312f18cbef660c0de0ebd1988fb878a7/e592002498517c7e6778bb4d53620ded4507482f/1186fb02c3fe425419356be82e153b28aa9183c2/680aab8c05dceeabc2f324a8070098c74faedee2/75388f67d5666dd74791f47ebf9201121685869a/2768d5bd775d4206b66e7fd564a8aa0571104c52/7857d8c003a11e4313f8a92333c78b16dd6e83e3/bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7/8303678d60c539aae8aa7480bdb6235898feecd4/aed0c52c5892bd988611cd02d7a970313ede11d0/35cfb2e08059618c74451b34391c8a0a2d7ea9e5/a6097e48939df0edae7ee330c93139a59561aa72/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/6f6a55568f5c63e6d70b6b40ee35c31365932a4d/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/3de15b1681ff7ebc41038a9c852d676884cb149a/7f6045003d313158bcc50f03df9586f0b4356b5b/c6d71f422710934f67aa2ce3e990e757ad721606/8d44a2098c29160b09b6e0516371b0b3e7a548ac/0e5db32edcb057eda013c9eb46bb6e12569d393d/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/60816eb4fe366e5fe5797b6436b8a2e83ad700de/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/edb8f410d25a6b518ad0a580e66b30c74f4beb29/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/,2019-06-14 11:42:43-04:00/2018-01-27 13:13:48-05:00/2017-01-04 14:28:18-05:00/2020-02-12 04:20:12-05:00/2019-01-16 12:15:09-05:00/2019-03-19 14:34:34-04:00/2017-09-30 20:00:34-04:00/2018-07-28 11:05:33-04:00/2020-02-08 02:07:48-05:00/2017-01-30 15:54:33-05:00/2019-03-04 22:52:08-05:00/2019-01-11 20:32:41-05:00/2017-01-22 00:45:02-05:00/2019-01-10 23:45:04-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-02-06 12:15:22-05:00/2018-07-25 12:31:04-04:00/2020-03-26 03:39:10-04:00/2017-12-22 13:55:48-05:00/2019-01-10 22:50:59-05:00/2017-09-27 23:03:03-04:00/2017-01-12 20:54:26-05:00/2019-05-12 23:23:33-04:00/2018-07-31 20:15:50-04:00/2019-01-24 10:47:14-05:00/2017-01-03 15:53:24-05:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2019-03-02 16:09:37-05:00/2019-02-02 13:17:35-05:00/,"Preparation to release quantum_compiler

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,84daafc0e9529187861334000fd7bff4dee99d4b,2016-10-07T21:58:36Z,178bead999d17d3e115d2a873e7617945f1021e6/d36f63bfcf91bb9ded9ce0eab3ae4f5a8026b428/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2016-11-30 13:43:00-05:00/2016-10-07 19:06:01-04:00/2016-10-18 21:26:32-04:00/,"typos

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,c6d71f422710934f67aa2ce3e990e757ad721606,2017-01-13T01:54:26Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/7f6045003d313158bcc50f03df9586f0b4356b5b/e592002498517c7e6778bb4d53620ded4507482f/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/6f8dbbdc0af50d1f4fbf119b2632587fb388e697/c211ab9a91b13f3377df32ff047258bee3516fac/1823d776e502437b816f9ac317f3569bb0bdb23e/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/3de15b1681ff7ebc41038a9c852d676884cb149a/,2018-01-27 13:13:48-05:00/2017-09-27 23:03:03-04:00/2020-02-12 04:20:12-05:00/2017-02-04 04:35:12-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2017-01-12 21:07:57-05:00/2020-03-25 22:50:15-04:00/2019-06-16 19:11:59-04:00/2018-07-25 12:31:04-04:00/2019-01-10 22:50:59-05:00/,"Added Gray Code optimization and new test to CGateSEO_writer. Documented Gray code usage in new version of  CGateSEO_writer.pdf

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,4667b74d4db6848a870453dcf919d8532e7136c0,2019-02-08T23:22:00Z,f72a7ee826838c95df430a91c0937d59721f658d/,2019-02-20 23:25:41-05:00/,fixed broken links
Assembly,artiste-qb-net/qubiter,d83b9b4906534157931fa3224b6bc02f4c5ca307,2017-11-01T23:20:46Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/835f5338bf4cece21e2a12e865675438be611abe/,2019-06-14 00:22:03-04:00/2019-02-12 10:46:52-05:00/,improved quiver plot
Assembly,artiste-qb-net/qubiter,e4e18d98de823951ed146ac55cfbe65d0f3ae9ea,2019-03-03T06:02:51Z,1f26b23e9733598351e795594346966e14508351/9ff47c757e1f0b00250e830dbe5f8aa0f48318ad/,2020-02-10 15:57:18-05:00/2019-03-07 09:10:36-05:00/,pep work
Assembly,artiste-qb-net/qubiter,879f725eaff52ef44e7829cfeb7dac94a7f67af6,2019-01-18T17:16:49Z,462dd426f8b9cc538a45a394147059b4f260adfc/,2019-03-07 23:14:36-05:00/,"minor mistake, added \n"
Assembly,artiste-qb-net/qubiter,680aab8c05dceeabc2f324a8070098c74faedee2,2019-03-19T18:34:34Z,e592002498517c7e6778bb4d53620ded4507482f/d906751c3d058c84900b918440ac8fdfdd4a9552/f6e5181e22a4c93f94393974c72fae8e2fc6af87/7857d8c003a11e4313f8a92333c78b16dd6e83e3/f0dbaabcfda8a4fa97e0454b39e7a46cf5d1a08c/b37065e324e8d578e3a7409b6793bc2b03b1703b/23c65f402715fd3f866ce3ccf65453be570a105e/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/00c0364b17e989e1c02a5b9a69140eb8cd635e50/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/6277c230f056646f1ed4797ad8357bebf25c9b04/9f9065d88f07b2c7a333ac847df336262a56a006/350fcc4563e0a60ca1a13820f860f6aba9db48f9/8d44a2098c29160b09b6e0516371b0b3e7a548ac/eabdf0398eabdd46252ede58bda6a68536e09285/7d000593469a05dea00d51aba2bc78f55bdc1910/c211ab9a91b13f3377df32ff047258bee3516fac/79532f7a9ab1a7131ce5523173ef28c99b5f409a/78ccc41cf9dc2b5793a1b2cb70749aaa278c7b43/,2020-02-12 04:20:12-05:00/2019-05-13 16:38:20-04:00/2019-03-21 11:26:43-04:00/2020-02-08 02:07:48-05:00/2019-03-23 11:46:02-04:00/2019-05-09 21:34:09-04:00/2019-04-05 21:10:33-04:00/2019-05-11 18:44:26-04:00/2019-03-23 05:11:49-04:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-04-07 18:19:37-04:00/2019-05-10 20:22:40-04:00/2019-05-09 19:56:50-04:00/2019-05-12 23:23:33-04:00/2019-04-07 20:39:19-04:00/2019-05-13 02:12:06-04:00/2020-03-25 22:50:15-04:00/2019-03-21 15:40:27-04:00/2019-03-19 16:47:16-04:00/,Changes associated with implementing backprop via autograd
Assembly,artiste-qb-net/qubiter,d4848bad35a6052d3748bb3771748ad8cc862eef,2018-07-28T15:27:14Z,9ad069ab0d3837bf9f3fe4c9df7f00b6488eeda2/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-01-19 02:05:03-05:00/2019-06-14 00:22:03-04:00/,minor notebook update
Assembly,artiste-qb-net/qubiter,4ad435d3f67800a8744a326f089ffa98ce8b6060,2018-07-29T19:14:25Z,f72a7ee826838c95df430a91c0937d59721f658d/e592002498517c7e6778bb4d53620ded4507482f/1f26b23e9733598351e795594346966e14508351/43df6d68fe473a6d99215fe2022d16dee4a20258/8303678d60c539aae8aa7480bdb6235898feecd4/37ff0a56cf94741546fd9073454795cd9e41bfa8/edb8f410d25a6b518ad0a580e66b30c74f4beb29/,2019-02-20 23:25:41-05:00/2020-02-12 04:20:12-05:00/2020-02-10 15:57:18-05:00/2019-01-20 19:38:02-05:00/2019-03-04 22:52:08-05:00/2019-02-04 15:05:09-05:00/2019-03-02 16:09:37-05:00/,Updated Hello World notebook
Assembly,artiste-qb-net/qubiter,425639369bf97854c6b737ee2e7548a720a935f5,2019-06-25T08:53:07Z,2324c729c4e2067dc80b712ea558ded18779b44a/7857d8c003a11e4313f8a92333c78b16dd6e83e3/ec8bb736cffb85bc8fb1ce0e757ac0c38861f884/746481beb350a8193407d9697e886d86fadf919b/15208359199a8f5b429b7588f29348d7e685d871/,2019-06-28 01:47:10-04:00/2020-02-08 02:07:48-05:00/2019-07-04 10:57:45-04:00/2019-06-29 22:37:53-04:00/2019-06-25 09:06:23-04:00/,added script that generates pdf picture of qubiter's class graph using graphviz. That pdf is now part of the sphinx_doc at readthedocs
Assembly,artiste-qb-net/qubiter,a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c,2019-03-17T07:02:11Z,a9a515295fc5ec138b5bdc8e3a5d3756db8a35dd/f6e5181e22a4c93f94393974c72fae8e2fc6af87/a4d6ff908725b5467bf28b1cbaabf85e51c496df/bde94c45e8fbf7dd64d8bbf3b693031f4b79d7e2/00c0364b17e989e1c02a5b9a69140eb8cd635e50/3f4d47fb5e1c28d6ebbd0a9123ede7b80c9c2b28/d7ba96c958caa1708ae3ef09d3c84206ccb77316/680aab8c05dceeabc2f324a8070098c74faedee2/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/23c65f402715fd3f866ce3ccf65453be570a105e/52e90753ead34eace41f4ad363eacb98fc5df9e0/6277c230f056646f1ed4797ad8357bebf25c9b04/,2019-03-17 03:12:59-04:00/2019-03-21 11:26:43-04:00/2019-03-17 13:20:11-04:00/2019-04-19 14:04:42-04:00/2019-03-23 05:11:49-04:00/2019-04-07 18:32:38-04:00/2019-06-14 00:22:03-04:00/2019-03-19 14:34:34-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-04-05 21:10:33-04:00/2020-03-26 13:20:07-04:00/2019-04-07 18:19:37-04:00/,Changed EngFileLineList name to EngFileListing. Improved MeanHamilMinimization related stuff
Assembly,artiste-qb-net/qubiter,58046c144f1664ae3f6f16c7a367acb08e7926de,2019-03-04T08:55:32Z,935098785ac910fa9afc483bc42b884bb7d069d2/8d44a2098c29160b09b6e0516371b0b3e7a548ac/e592002498517c7e6778bb4d53620ded4507482f/7d000593469a05dea00d51aba2bc78f55bdc1910/c211ab9a91b13f3377df32ff047258bee3516fac/8e156512fcf09090c899f979d88de4b89c588c7e/8303678d60c539aae8aa7480bdb6235898feecd4/,2019-06-14 11:42:43-04:00/2019-05-12 23:23:33-04:00/2020-02-12 04:20:12-05:00/2019-05-13 02:12:06-04:00/2020-03-25 22:50:15-04:00/2019-05-13 09:34:16-04:00/2019-03-04 22:52:08-05:00/,"Added new gates: any U(2) matrix, not just SU(2), with arbitrarily many controls"
Assembly,artiste-qb-net/qubiter,2c13bc1633d20dbff080798a2238e67bfc002ada,2019-06-22T11:42:00Z,2324c729c4e2067dc80b712ea558ded18779b44a/425639369bf97854c6b737ee2e7548a720a935f5/e592002498517c7e6778bb4d53620ded4507482f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/ec8bb736cffb85bc8fb1ce0e757ac0c38861f884/c211ab9a91b13f3377df32ff047258bee3516fac/746481beb350a8193407d9697e886d86fadf919b/1f26b23e9733598351e795594346966e14508351/db59056f2c0dd5ec5e5af0ed86944ca62072df5e/15208359199a8f5b429b7588f29348d7e685d871/6f6a55568f5c63e6d70b6b40ee35c31365932a4d/f08a75a0090259faa2da5ca63fd256fc09e19bf7/,2019-06-28 01:47:10-04:00/2019-06-25 04:53:07-04:00/2020-02-12 04:20:12-05:00/2020-02-08 02:07:48-05:00/2019-07-04 10:57:45-04:00/2020-03-25 22:50:15-04:00/2019-06-29 22:37:53-04:00/2020-02-10 15:57:18-05:00/2019-06-25 05:08:41-04:00/2019-06-25 09:06:23-04:00/2020-03-26 03:39:10-04:00/2019-06-23 11:17:52-04:00/,adding sphinx documentation
Assembly,artiste-qb-net/qubiter,391ae8ef3f1f89d057a7c0fe7da622da8cef270f,2019-07-04T15:40:17Z,1f26b23e9733598351e795594346966e14508351/7857d8c003a11e4313f8a92333c78b16dd6e83e3/,2020-02-10 15:57:18-05:00/2020-02-08 02:07:48-05:00/,changed name from utilities_widgets.py to utilities_nb.py
Assembly,artiste-qb-net/qubiter,4c0d02e60e0ebc10943c44bd2ebf6472238fbcce,2019-06-30T03:38:19Z,705dca87dae19555ca3920b936d9f9d8b81674df/7857d8c003a11e4313f8a92333c78b16dd6e83e3/ec8bb736cffb85bc8fb1ce0e757ac0c38861f884/,2020-02-16 00:33:43-05:00/2020-02-08 02:07:48-05:00/2019-07-04 10:57:45-04:00/,saved jupyter notebook with widget state
Assembly,artiste-qb-net/qubiter,35cfb2e08059618c74451b34391c8a0a2d7ea9e5,2017-01-22T05:45:02Z,bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7/33048fd17e72008231c9d6d49e02dcd3ff8d670f/7f6045003d313158bcc50f03df9586f0b4356b5b/969b2472b8d7d8d68636a6f03526ee37e01dc714/,2017-01-30 15:54:33-05:00/2018-01-27 13:13:48-05:00/2017-09-27 23:03:03-04:00/2017-01-22 19:33:27-05:00/,"commented info out

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,6904697a0cef061e6e8eef0d72a1d96472717ce7,2019-01-21T00:46:36Z,4667b74d4db6848a870453dcf919d8532e7136c0/,2019-02-08 18:22:00-05:00/,fixed hyperlinks in Hello World notebook
Assembly,artiste-qb-net/qubiter,a4d6ff908725b5467bf28b1cbaabf85e51c496df,2019-03-17T17:20:11Z,f6e5181e22a4c93f94393974c72fae8e2fc6af87/680aab8c05dceeabc2f324a8070098c74faedee2/23c65f402715fd3f866ce3ccf65453be570a105e/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/78ccc41cf9dc2b5793a1b2cb70749aaa278c7b43/,2019-03-21 11:26:43-04:00/2019-03-19 14:34:34-04:00/2019-04-05 21:10:33-04:00/2019-05-11 18:44:26-04:00/2019-03-19 16:47:16-04:00/,refactoring of MeanHamilMinimizer related classes
Assembly,artiste-qb-net/qubiter,edb8f410d25a6b518ad0a580e66b30c74f4beb29,2019-03-02T21:09:37Z,4a07898b65bd0cb5b547a16553334b12ef29276c/3cc7ae7d83bc93f676b79aa0700dc68895f78566/680aab8c05dceeabc2f324a8070098c74faedee2/0d8faf996058bebb73cd96eb119f93214669491a/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/8303678d60c539aae8aa7480bdb6235898feecd4/6277c230f056646f1ed4797ad8357bebf25c9b04/3278b874283927de2de08727e4b11caec895dfe8/,2019-03-08 13:26:47-05:00/2019-06-15 13:34:05-04:00/2019-03-19 14:34:34-04:00/2019-03-02 16:24:29-05:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-03-04 22:52:08-05:00/2019-04-07 18:19:37-04:00/2019-04-13 11:10:15-04:00/,replaced all zero_bit_first attributes by not ZL for consistency with other classes
Assembly,artiste-qb-net/qubiter,22dfc34794bb14781bfe2666d91db95a226f8973,2018-01-27T02:34:47Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/82ba7982ea591a17bde043a5fd96e02b8dc06d72/,2018-01-27 13:13:48-05:00/2018-07-18 13:13:07-04:00/,Made Qubiter_to_IBMqasm2 assume any CNot is possible if input c_to_t = None. Thanks to Guido De Rosa for suggesting this.
Assembly,artiste-qb-net/qubiter,65b122e64bc88925e2812fc204d091d8b70b5438,2019-01-21T00:52:31Z,37ff0a56cf94741546fd9073454795cd9e41bfa8/,2019-02-04 15:05:09-05:00/,added missing log file
Assembly,artiste-qb-net/qubiter,c9579b5299552f575540ce6785bd14ef09871465,2016-10-06T00:33:28Z,e592002498517c7e6778bb4d53620ded4507482f/86721215ea820925ee9e040a8bdb952424980dc1/84daafc0e9529187861334000fd7bff4dee99d4b/1823d776e502437b816f9ac317f3569bb0bdb23e/d906751c3d058c84900b918440ac8fdfdd4a9552/7857d8c003a11e4313f8a92333c78b16dd6e83e3/93c9fbcd15c071585a3419da6d33f110ba53adf8/67cdb562dce12934b420328db1d904d3be662c17/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/43df6d68fe473a6d99215fe2022d16dee4a20258/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/f72a7ee826838c95df430a91c0937d59721f658d/7f6045003d313158bcc50f03df9586f0b4356b5b/586651245502bdca6ff24955a7ba7ba03754ba30/d36f63bfcf91bb9ded9ce0eab3ae4f5a8026b428/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/8f806abdfe360feaef7ed0c011742b6ddf3d69aa/767365c3b030979059c5d21d3aac0e592a8a6041/81954c327e0e49c7994e44b324ced5d06198cb3f/,2020-02-12 04:20:12-05:00/2016-10-16 11:48:50-04:00/2016-10-07 17:58:36-04:00/2019-06-16 19:11:59-04:00/2019-05-13 16:38:20-04:00/2020-02-08 02:07:48-05:00/2016-10-16 12:41:32-04:00/2016-10-16 12:29:03-04:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-01-20 19:38:02-05:00/2016-10-18 21:26:32-04:00/2019-02-20 23:25:41-05:00/2017-09-27 23:03:03-04:00/2016-10-05 23:57:45-04:00/2016-10-07 19:06:01-04:00/2017-02-04 04:35:12-05:00/2019-02-13 11:23:31-05:00/2017-01-02 20:26:44-05:00/2016-12-01 12:13:48-05:00/,Added Jupyter notebook with Phase estimation examples. In response to questions by Prof. Marcel Jacon
Assembly,artiste-qb-net/qubiter,94d74d85484706adaa35110df14e99cab26c7b97,2017-10-16T16:53:18Z,cac39c84ba7739210f77cf43681fe83e08667dd6/d7ba96c958caa1708ae3ef09d3c84206ccb77316/835f5338bf4cece21e2a12e865675438be611abe/,2017-11-04 01:03:57+08:00/2019-06-14 00:22:03-04:00/2019-02-12 10:46:52-05:00/,"Chinese version for ""Teleportation-***.ipynb file"
Assembly,artiste-qb-net/qubiter,3b9f07f3d3f04c308396cbd59b8728438e6ef849,2016-10-07T21:29:15Z,7f6045003d313158bcc50f03df9586f0b4356b5b/b6540b04224feb0ab68cbeb6d153a41d0a94efb5/e592002498517c7e6778bb4d53620ded4507482f/d36f63bfcf91bb9ded9ce0eab3ae4f5a8026b428/70df0a76bfec9b5735684b173d16ea1760cd6c84/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/84daafc0e9529187861334000fd7bff4dee99d4b/86721215ea820925ee9e040a8bdb952424980dc1/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/81954c327e0e49c7994e44b324ced5d06198cb3f/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2017-09-27 23:03:03-04:00/2016-10-08 00:31:10-04:00/2020-02-12 04:20:12-05:00/2016-10-07 19:06:01-04:00/2016-10-17 00:44:31-04:00/2017-03-01 18:17:52-05:00/2016-10-07 17:58:36-04:00/2016-10-16 11:48:50-04:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2016-12-01 12:13:48-05:00/2016-10-18 21:26:32-04:00/,"Added notebook with simple example of iterative phase estimation

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,fe9ae4f1ca9c8d39a9f8fdb10fb4ba5037e88317,2017-03-01T18:50:43Z,a369b8df5941949f88bc775a05f705a4fe326477/723d834b7b0c34a86ce146862d92b69d5f937ff1/7f6045003d313158bcc50f03df9586f0b4356b5b/,2017-09-27 23:52:24-04:00/2017-03-01 14:01:48-05:00/2017-09-27 23:03:03-04:00/,added jupyter notebook illustrating use of Qubiter_to_IBMqasm.py
Assembly,artiste-qb-net/qubiter,82ba7982ea591a17bde043a5fd96e02b8dc06d72,2018-07-18T17:13:07Z,2768d5bd775d4206b66e7fd564a8aa0571104c52/1186fb02c3fe425419356be82e153b28aa9183c2/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/2c13bc1633d20dbff080798a2238e67bfc002ada/653988f4dce11447c4bdb7c0a7b71a9fe284d445/eec117d8c459f250c2a23e5a045ac980d4898dec/3de15b1681ff7ebc41038a9c852d676884cb149a/,2018-07-28 11:05:33-04:00/2019-01-16 12:15:09-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-06-22 07:42:00-04:00/2018-07-23 11:51:04-04:00/2019-06-14 19:17:29-04:00/2019-01-10 22:50:59-05:00/,"Changed device couplings specification from data structure c_to_t which was list of edges, to c_to_tars (a dict mapping each control to a list of its targets). c_to_tars is more user intelligible"
Assembly,artiste-qb-net/qubiter,d722286550932208ffe076fda2f01dd193776373,2019-05-13T15:44:28Z,7866f9f0bda5f14da6c509b787e968e5199254f6/,2019-05-13 11:50:54-04:00/,trying to workaround casting problem in tensorflow
Assembly,artiste-qb-net/qubiter,522ce0752fffcd10033b81642be9fa95e4c68320,2019-06-25T14:31:03Z,2324c729c4e2067dc80b712ea558ded18779b44a/e592002498517c7e6778bb4d53620ded4507482f/,2019-06-28 01:47:10-04:00/2020-02-12 04:20:12-05:00/,"moved refreshing of the ""sphinx doc _static files"" to a cell in the build_notebook.ipynb"
Assembly,artiste-qb-net/qubiter,a369b8df5941949f88bc775a05f705a4fe326477,2017-09-28T03:52:24Z,1f16e0617b64bd8dd51a13493126755f56825eeb/625cb2e727013891cf9da8a63f1a43600d081a62/36b162ea4689b66ebc50c58dc21eea828367b9ad/75388f67d5666dd74791f47ebf9201121685869a/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/653988f4dce11447c4bdb7c0a7b71a9fe284d445/d33d4b78db176948471e2ba0360aa277a0851890/82ba7982ea591a17bde043a5fd96e02b8dc06d72/df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/ea7af8f133fc1e824a3962ce25ef7637468bb31f/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/,2017-09-28 00:12:57-04:00/2017-12-17 03:09:10-05:00/2020-01-17 22:56:34-05:00/2017-09-30 20:00:34-04:00/2019-06-14 12:43:07-04:00/2018-07-23 11:51:04-04:00/2017-12-17 04:25:57-05:00/2018-07-18 13:13:07-04:00/2017-12-30 16:43:20-05:00/2017-12-22 21:23:33-05:00/2017-12-22 13:55:48-05:00/,"fixing notebooks

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,348a6a2d4a5ef09d6fb5e24e5e89ec34d69c1cd1,2019-01-14T17:21:28Z,1186fb02c3fe425419356be82e153b28aa9183c2/,2019-01-16 12:15:09-05:00/,Added self.first_var_num to class SEO_writer
Assembly,artiste-qb-net/qubiter,fc1bf3da874a15940f4036b4b0c12eec558561bf,2017-02-11T20:13:24Z,7f6045003d313158bcc50f03df9586f0b4356b5b/625cb2e727013891cf9da8a63f1a43600d081a62/12c4b1d6ff9801a43329c2da356b92cccead92fc/a369b8df5941949f88bc775a05f705a4fe326477/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/,2017-09-27 23:03:03-04:00/2017-12-17 03:09:10-05:00/2017-02-12 15:20:21-05:00/2017-09-27 23:52:24-04:00/2017-12-22 13:55:48-05:00/,"Improved murky doscstring language in Qubiter_to_IBMqasm class

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,68729242bd72d4fc11a13c14569e6ddb41d3238f,2019-06-14T22:33:31Z,f6b085a2870b414c426f49084ff4270788bb0ff3/,2019-06-14 18:37:24-04:00/,fixed link
Assembly,artiste-qb-net/qubiter,acdf608065bb8b80b90c57d4683cdede72f2338c,2016-12-04T18:13:44Z,7f6045003d313158bcc50f03df9586f0b4356b5b/c6d71f422710934f67aa2ce3e990e757ad721606/e592002498517c7e6778bb4d53620ded4507482f/d7ba96c958caa1708ae3ef09d3c84206ccb77316/3de15b1681ff7ebc41038a9c852d676884cb149a/,2017-09-27 23:03:03-04:00/2017-01-12 20:54:26-05:00/2020-02-12 04:20:12-05:00/2019-06-14 00:22:03-04:00/2019-01-10 22:50:59-05:00/,"Added do_checking and bug fixes to CGateSEO_writer

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,96838359d700b9f114494b01550a9f63145fc53a,2017-11-01T21:32:08Z,d83b9b4906534157931fa3224b6bc02f4c5ca307/,2017-11-01 19:20:46-04:00/,improved quiver plots
Assembly,artiste-qb-net/qubiter,857e3f81df3942a9ff3befb15f08ffa1da41e8a7,2016-07-02T06:41:03Z,5dbccc71d9ccb64c3419fd5db9ec5560da387571/,2016-07-02 02:45:45-04:00/,"Merge branch 'master' of https://github.com/artiste-qb-net/qubiter

# Conflicts:
#	.gitignore
#	FouSEO_writer.py
#	IBM_QuantumExperience.py
#	PhaseEstSEO_writer.py
#	SEO_reader.py
#	SEO_simulator.py
#	SEO_writer.py
#	io_folder/fou_test_6_ZFpic.txt
#	io_folder/fou_test_6_ZLpic.txt
#	io_folder/fou_test_6_eng.txt
#	io_folder/ibm_qe_test_5_ZLpic.txt
#	io_folder/ibm_qe_test_5_eng.txt
#	io_folder/ibm_qe_test_5_log.txt
#	io_folder/ph_est_test_8_ZFpic.txt
#	io_folder/ph_est_test_8_ZLpic.txt
#	io_folder/ph_est_test_8_eng.txt"
Assembly,artiste-qb-net/qubiter,94e6749353bb44b9af0b5b96ff0c4cb4aa847e71,2018-07-29T03:34:06Z,e592002498517c7e6778bb4d53620ded4507482f/4ad435d3f67800a8744a326f089ffa98ce8b6060/c211ab9a91b13f3377df32ff047258bee3516fac/43df6d68fe473a6d99215fe2022d16dee4a20258/f76db4edb01a635570bb72656477e99493297f1d/8303678d60c539aae8aa7480bdb6235898feecd4/,2020-02-12 04:20:12-05:00/2018-07-29 15:14:25-04:00/2020-03-25 22:50:15-04:00/2019-01-20 19:38:02-05:00/2019-01-14 11:33:01-05:00/2019-03-04 22:52:08-05:00/,"Added bunch of alternative ways of calling 1 qubit rotations of all types (H, X, Y, Z, S, T, Rx, Ry, Rz, Rn) with no controls"
Assembly,artiste-qb-net/qubiter,ab4d18787bc5ad65cd95732f2d4503b3056d20cf,2019-02-02T18:17:35Z,e592002498517c7e6778bb4d53620ded4507482f/f6645c2365b584e601e575432f9e0e58e18451dd/d7ba96c958caa1708ae3ef09d3c84206ccb77316/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/c211ab9a91b13f3377df32ff047258bee3516fac/e4e18d98de823951ed146ac55cfbe65d0f3ae9ea/8303678d60c539aae8aa7480bdb6235898feecd4/462dd426f8b9cc538a45a394147059b4f260adfc/,2020-02-12 04:20:12-05:00/2019-03-07 23:44:48-05:00/2019-06-14 00:22:03-04:00/2019-03-17 03:02:11-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-02-06 12:15:22-05:00/2020-03-25 22:50:15-04:00/2019-03-03 01:02:51-05:00/2019-03-04 22:52:08-05:00/2019-03-07 23:14:36-05:00/,"Added classes LoopFileGenerator and LoopyPlaceholderManager that allow adaptive nested loops in the English file. This is only for users that want to have loops in English file. Same functionality can be achieved by using loops in the Python code, outside of the English file."
Assembly,artiste-qb-net/qubiter,b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4,2019-01-18T17:08:15Z,f72a7ee826838c95df430a91c0937d59721f658d/dcb3a2e027a98a178ac0172c3de5d87ad912273b/e592002498517c7e6778bb4d53620ded4507482f/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/7857d8c003a11e4313f8a92333c78b16dd6e83e3/9ad069ab0d3837bf9f3fe4c9df7f00b6488eeda2/e52a576cdc96c8615704c7f7a185fc7b28211f7c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/092c151d9618fd8d18e44028dfa577476508c5a8/c211ab9a91b13f3377df32ff047258bee3516fac/8425018c56d3ae7eee62793557599ca0026a9f9a/879f725eaff52ef44e7829cfeb7dac94a7f67af6/8303678d60c539aae8aa7480bdb6235898feecd4/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/462dd426f8b9cc538a45a394147059b4f260adfc/,2019-02-20 23:25:41-05:00/2019-01-18 20:37:09-05:00/2020-02-12 04:20:12-05:00/2019-01-24 10:47:14-05:00/2020-02-08 02:07:48-05:00/2019-01-19 02:05:03-05:00/2019-01-21 01:41:55-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-01-18 12:40:57-05:00/2020-03-25 22:50:15-04:00/2019-02-23 20:39:58-05:00/2019-01-18 12:16:49-05:00/2019-03-04 22:52:08-05:00/2019-02-02 13:17:35-05:00/2019-03-07 23:14:36-05:00/,"Many improvements to translation from Qubiter to 3 target languages, IBMqasm Pyquil, and Cirq"
Assembly,artiste-qb-net/qubiter,7f6045003d313158bcc50f03df9586f0b4356b5b,2017-09-28T03:03:03Z,935098785ac910fa9afc483bc42b884bb7d069d2/33048fd17e72008231c9d6d49e02dcd3ff8d670f/e592002498517c7e6778bb4d53620ded4507482f/625cb2e727013891cf9da8a63f1a43600d081a62/f002ed4ebc8e1db6ffc4c0bba23496c72c26cc21/b64d7c3363ec0e3737efffd12e303ede79fefb98/a369b8df5941949f88bc775a05f705a4fe326477/1186fb02c3fe425419356be82e153b28aa9183c2/36b162ea4689b66ebc50c58dc21eea828367b9ad/680aab8c05dceeabc2f324a8070098c74faedee2/75388f67d5666dd74791f47ebf9201121685869a/b19eca7aef458795774ac7ea23a60329fa6ab0d1/41ada4bbae07b23d61a91bd3d48369204744aa75/2768d5bd775d4206b66e7fd564a8aa0571104c52/58046c144f1664ae3f6f16c7a367acb08e7926de/f6e5181e22a4c93f94393974c72fae8e2fc6af87/17b2b17976a4c68940cedb8ae3ac88e037f1fd29/82ba7982ea591a17bde043a5fd96e02b8dc06d72/8425018c56d3ae7eee62793557599ca0026a9f9a/8303678d60c539aae8aa7480bdb6235898feecd4/b6897fd4ed82856cedf9d490eaacba372dc01bc2/aed0c52c5892bd988611cd02d7a970313ede11d0/8267ed5b9ff55daad0281e8327182bb95e0f3c1d/a6097e48939df0edae7ee330c93139a59561aa72/d83b9b4906534157931fa3224b6bc02f4c5ca307/d7ba96c958caa1708ae3ef09d3c84206ccb77316/746481beb350a8193407d9697e886d86fadf919b/1f26b23e9733598351e795594346966e14508351/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/72d39c120127cf3194a6e678a4e7b7998180605d/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/6f6a55568f5c63e6d70b6b40ee35c31365932a4d/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/d4848bad35a6052d3748bb3771748ad8cc862eef/3de15b1681ff7ebc41038a9c852d676884cb149a/350fcc4563e0a60ca1a13820f860f6aba9db48f9/8d44a2098c29160b09b6e0516371b0b3e7a548ac/4ad435d3f67800a8744a326f089ffa98ce8b6060/2887c6c1dc802599d54ba9db31af7fc1c9d0bb10/b67e7168e0d01471815027aa21e1bb1779ea318f/c211ab9a91b13f3377df32ff047258bee3516fac/653988f4dce11447c4bdb7c0a7b71a9fe284d445/8f806abdfe360feaef7ed0c011742b6ddf3d69aa/96838359d700b9f114494b01550a9f63145fc53a/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/a6144f2ec16999ffc49628d18143c520f475d70a/,2019-06-14 11:42:43-04:00/2018-01-27 13:13:48-05:00/2020-02-12 04:20:12-05:00/2017-12-17 03:09:10-05:00/2019-01-14 15:37:15-05:00/2018-07-24 20:42:14-04:00/2017-09-27 23:52:24-04:00/2019-01-16 12:15:09-05:00/2020-01-17 22:56:34-05:00/2019-03-19 14:34:34-04:00/2017-09-30 20:00:34-04:00/2017-10-05 15:45:17-04:00/2018-01-01 15:57:20-05:00/2018-07-28 11:05:33-04:00/2019-03-04 03:55:32-05:00/2019-03-21 11:26:43-04:00/2018-11-03 22:28:07-04:00/2018-07-18 13:13:07-04:00/2019-02-23 20:39:58-05:00/2019-03-04 22:52:08-05:00/2019-01-15 01:52:37-05:00/2019-01-11 20:32:41-05:00/2017-10-07 18:11:45-04:00/2019-01-10 23:45:04-05:00/2017-11-01 19:20:46-04:00/2019-06-14 00:22:03-04:00/2019-06-29 22:37:53-04:00/2020-02-10 15:57:18-05:00/2019-02-06 12:15:22-05:00/2018-07-25 14:44:47-04:00/2018-07-25 12:31:04-04:00/2020-03-26 03:39:10-04:00/2017-12-22 13:55:48-05:00/2018-07-28 11:27:14-04:00/2019-01-10 22:50:59-05:00/2019-05-09 19:56:50-04:00/2019-05-12 23:23:33-04:00/2018-07-29 15:14:25-04:00/2019-02-11 12:33:35-05:00/2017-10-02 19:35:30-04:00/2020-03-25 22:50:15-04:00/2018-07-23 11:51:04-04:00/2019-02-13 11:23:31-05:00/2017-11-01 17:32:08-04:00/2019-02-02 13:17:35-05:00/2019-01-19 00:24:34-05:00/,"Added  IF_M(){xxx}IF_M, and PRINT commands. Also added new classes StateVec and Plotter

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,73fff7d024953aee575b264a243d2b7b31babc2a,2017-07-27T22:22:38Z,935098785ac910fa9afc483bc42b884bb7d069d2/7f6045003d313158bcc50f03df9586f0b4356b5b/82ba7982ea591a17bde043a5fd96e02b8dc06d72/,2019-06-14 11:42:43-04:00/2017-09-27 23:03:03-04:00/2018-07-18 13:13:07-04:00/,fixed mistakes in rosetta stone
Assembly,artiste-qb-net/qubiter,45c7887960ec3d306e0fd447fae5fd2613e1dab2,2019-02-08T00:47:23Z,f816aded2826341fd6927ea96d8717a7da0d607c/,2019-07-02 12:26:52-04:00/,updated README so it mentions bayesforge
Assembly,artiste-qb-net/qubiter,69fcc45cc71f6c7af9eb52f6f106b705bb81f8be,2018-01-26T00:28:57Z,1f26b23e9733598351e795594346966e14508351/33048fd17e72008231c9d6d49e02dcd3ff8d670f/,2020-02-10 15:57:18-05:00/2018-01-27 13:13:48-05:00/,Made changes suggested by Guido De Rosa issue #13
Assembly,artiste-qb-net/qubiter,59fded6cfb06bb99d4eb3bf41316c37da2be9901,2018-07-26T21:00:07Z,9ad069ab0d3837bf9f3fe4c9df7f00b6488eeda2/,2019-01-19 02:05:03-05:00/,fixed broken link
Assembly,artiste-qb-net/qubiter,70df0a76bfec9b5735684b173d16ea1760cd6c84,2016-10-17T04:44:31Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/7857d8c003a11e4313f8a92333c78b16dd6e83e3/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2019-06-14 00:22:03-04:00/2020-02-08 02:07:48-05:00/2016-10-18 21:26:32-04:00/,"Added GHZ state notebook

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,2f70aecfcbc11e03d6711b2c6fad3b3c3d8b5091,2019-01-11T04:08:54Z,0c3c794456d25c20d097a39376f7df9630490013/a6097e48939df0edae7ee330c93139a59561aa72/,2019-02-06 20:12:27-05:00/2019-01-10 23:45:04-05:00/,merged
Assembly,artiste-qb-net/qubiter,8d0e8d7c30b22e7b164de4761355e2e1a382d2c2,2016-03-21T05:10:37Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/e592002498517c7e6778bb4d53620ded4507482f/b64d7c3363ec0e3737efffd12e303ede79fefb98/1186fb02c3fe425419356be82e153b28aa9183c2/0e1e9d6d685a7839a94e88efd2aacdbb98151167/680aab8c05dceeabc2f324a8070098c74faedee2/75388f67d5666dd74791f47ebf9201121685869a/c3f937972c610644c00b7934f5b0f26116bce310/3278b874283927de2de08727e4b11caec895dfe8/2768d5bd775d4206b66e7fd564a8aa0571104c52/8b2a7d81b3be99e488d4da7382cffa309d6b968f/58046c144f1664ae3f6f16c7a367acb08e7926de/178bead999d17d3e115d2a873e7617945f1021e6/63ec066797bdfab6b7bc5a23def2c0084ea89446/c73470e305a50486e171dfe7d48a4bd08fee24a0/7857d8c003a11e4313f8a92333c78b16dd6e83e3/8417c9477cbb9a99ff34c3bd95c248d9f8ac55b1/9177c7a4b65a2f5d1c3dcaf654a3055e7677e0f6/23c65f402715fd3f866ce3ccf65453be570a105e/8e156512fcf09090c899f979d88de4b89c588c7e/bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7/8303678d60c539aae8aa7480bdb6235898feecd4/f0e7198f3099f4810338254b40a4885e444a45f2/b6897fd4ed82856cedf9d490eaacba372dc01bc2/a3b27689640e5fce74a6ad3f7a993901219061bb/aed0c52c5892bd988611cd02d7a970313ede11d0/348a6a2d4a5ef09d6fb5e24e5e89ec34d69c1cd1/7234816f78e8c0e212b9449deda2983d35a20dc2/86facaed0d36096a243b2c75b53343b9b1302cfa/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/edb8f410d25a6b518ad0a580e66b30c74f4beb29/72d39c120127cf3194a6e678a4e7b7998180605d/f7174b7d106a8b8b54fd952ae8009a7dff9bcab6/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/37a33e1553f4a0cfe7ae27a2ca32a277bd9da199/81f01862d4d4ee29aae5304fada9a15d7f5e65f7/98c343ac198edbd664461dce30e56e146a579ce3/3de15b1681ff7ebc41038a9c852d676884cb149a/f72a7ee826838c95df430a91c0937d59721f658d/7f6045003d313158bcc50f03df9586f0b4356b5b/85e42a6bdfcd38ae0fdaa95878f5432ca3da2d8d/8d44a2098c29160b09b6e0516371b0b3e7a548ac/484d38ac05802fe857f99355354f7c73c93115a3/4ad435d3f67800a8744a326f089ffa98ce8b6060/0e5db32edcb057eda013c9eb46bb6e12569d393d/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/7d000593469a05dea00d51aba2bc78f55bdc1910/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/0d8faf996058bebb73cd96eb119f93214669491a/653988f4dce11447c4bdb7c0a7b71a9fe284d445/57956f702a87d786ca189ea96289e391431cb9e9/767365c3b030979059c5d21d3aac0e592a8a6041/7261a1932646eae31cbc0d0a04083b57a0e18af8/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/,2018-01-27 13:13:48-05:00/2020-02-12 04:20:12-05:00/2018-07-24 20:42:14-04:00/2019-01-16 12:15:09-05:00/2016-10-08 00:56:13-04:00/2019-03-19 14:34:34-04:00/2017-09-30 20:00:34-04:00/2016-06-17 14:48:02-04:00/2019-04-13 11:10:15-04:00/2018-07-28 11:05:33-04:00/2016-03-21 18:43:19-04:00/2019-03-04 03:55:32-05:00/2016-11-30 13:43:00-05:00/2016-07-02 02:32:41-04:00/2016-06-24 15:39:21-04:00/2020-02-08 02:07:48-05:00/2016-06-26 01:17:08-04:00/2016-03-21 01:54:17-04:00/2019-04-05 21:10:33-04:00/2019-05-13 09:34:16-04:00/2017-01-30 15:54:33-05:00/2019-03-04 22:52:08-05:00/2016-03-22 01:38:37-04:00/2019-01-15 01:52:37-05:00/2016-03-29 11:36:49-04:00/2019-01-11 20:32:41-05:00/2019-01-14 12:21:28-05:00/2016-11-30 21:50:12-05:00/2016-11-30 23:54:03-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-03-02 16:09:37-05:00/2018-07-25 14:44:47-04:00/2019-03-05 02:38:42-05:00/2018-07-25 12:31:04-04:00/2016-03-29 11:36:49-04:00/2016-09-19 16:55:54-04:00/2016-06-17 17:42:27-04:00/2019-01-10 22:50:59-05:00/2019-02-20 23:25:41-05:00/2017-09-27 23:03:03-04:00/2016-03-21 13:39:05-04:00/2019-05-12 23:23:33-04:00/2016-05-21 23:57:14-04:00/2018-07-29 15:14:25-04:00/2018-07-31 20:15:50-04:00/2019-01-24 10:47:14-05:00/2019-05-13 02:12:06-04:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2019-03-02 16:24:29-05:00/2018-07-23 11:51:04-04:00/2016-05-21 23:57:14-04:00/2017-01-02 20:26:44-05:00/2016-06-17 19:21:40-04:00/2019-02-02 13:17:35-05:00/,"First, very tentative commit

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,e52a576cdc96c8615704c7f7a185fc7b28211f7c,2019-01-21T06:41:55Z,b775ead4f10d373f0b0a88401ca67ca6919d7a62/7857d8c003a11e4313f8a92333c78b16dd6e83e3/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/,2019-01-21 16:03:12-05:00/2020-02-08 02:07:48-05:00/2019-02-02 13:17:35-05:00/2019-01-24 10:47:14-05:00/,Generalized legal variable names. Now they can be of the form `#3` or `-#3` or `#3*.5` or `-#3*.5`
Assembly,artiste-qb-net/qubiter,78ccc41cf9dc2b5793a1b2cb70749aaa278c7b43,2019-03-19T20:47:16Z,00c0364b17e989e1c02a5b9a69140eb8cd635e50/,2019-03-23 05:11:49-04:00/,typos
Assembly,artiste-qb-net/qubiter,87648659df8eae681fe61ee7911cfefbea506d88,2019-03-08T07:38:10Z,10eb26b7df1cbe76cdeb382f713de7d59a3ef951/e592002498517c7e6778bb4d53620ded4507482f/a4d6ff908725b5467bf28b1cbaabf85e51c496df/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/23c65f402715fd3f866ce3ccf65453be570a105e/eb3c94eafb761e6ddf34ce354647fa1d851bb791/,2019-03-11 10:52:31-04:00/2020-02-12 04:20:12-05:00/2019-03-17 13:20:11-04:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-04-05 21:10:33-04:00/2019-03-13 21:33:47-04:00/,Fixed some changes that broke naive minimization notebook. Still not working
Assembly,artiste-qb-net/qubiter,e592002498517c7e6778bb4d53620ded4507482f,2020-02-12T09:20:12Z,c211ab9a91b13f3377df32ff047258bee3516fac/,2020-03-25 22:50:15-04:00/,"Changed OneBitGates.py to OneQubitGate.py and other uses of ""bit"" to ""qbit"""
Assembly,artiste-qb-net/qubiter,f6a59ec46c593d36731346631a5a6e98030bbf35,2016-08-03T06:27:32Z,9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/43df6d68fe473a6d99215fe2022d16dee4a20258/81f01862d4d4ee29aae5304fada9a15d7f5e65f7/,2017-03-01 18:17:52-05:00/2019-01-20 19:38:02-05:00/2016-09-19 16:55:54-04:00/,"fixed factor of 2 omission

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,58faea71410f4c6b8489832cc39b9a0ff2fa895f,2019-01-13T00:27:07Z,f76db4edb01a635570bb72656477e99493297f1d/,2019-01-14 11:33:01-05:00/,added import
Assembly,artiste-qb-net/qubiter,a3632c5c9f45a05ce97581c279c83df65e96bc78,2017-01-23T14:47:35Z,df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/,2017-12-30 16:43:20-05:00/,"typo

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,2c6a86b96cb4f6f2628399703fd687ad107ff3a5,2018-01-21T01:17:37Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/,2018-01-27 13:13:48-05:00/,Added ? row to example 1 of AsciiPic_to_Latex.py
Assembly,artiste-qb-net/qubiter,37ff0a56cf94741546fd9073454795cd9e41bfa8,2019-02-04T20:05:09Z,f72a7ee826838c95df430a91c0937d59721f658d/e592002498517c7e6778bb4d53620ded4507482f/f5bdf3c53db3674f681ef3aa3fa8f4e1b5e622d8/ca7bd48d43cf0085555a750e47144af341e5dc0c/eabdf0398eabdd46252ede58bda6a68536e09285/7857d8c003a11e4313f8a92333c78b16dd6e83e3/c211ab9a91b13f3377df32ff047258bee3516fac/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/680aab8c05dceeabc2f324a8070098c74faedee2/2c13bc1633d20dbff080798a2238e67bfc002ada/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/1f26b23e9733598351e795594346966e14508351/9ff47c757e1f0b00250e830dbe5f8aa0f48318ad/e4e18d98de823951ed146ac55cfbe65d0f3ae9ea/0c3c794456d25c20d097a39376f7df9630490013/3278b874283927de2de08727e4b11caec895dfe8/,2019-02-20 23:25:41-05:00/2020-02-12 04:20:12-05:00/2019-02-05 12:34:51-05:00/2020-03-26 04:31:18-04:00/2019-04-07 20:39:19-04:00/2020-02-08 02:07:48-05:00/2020-03-25 22:50:15-04:00/2019-03-17 03:02:11-04:00/2019-03-19 14:34:34-04:00/2019-06-22 07:42:00-04:00/2019-02-06 12:15:22-05:00/2020-02-10 15:57:18-05:00/2019-03-07 09:10:36-05:00/2019-03-03 01:02:51-05:00/2019-02-06 20:12:27-05:00/2019-04-13 11:10:15-04:00/,Trivial additions. Added new_one_liner() to class EngFileLineList
Assembly,artiste-qb-net/qubiter,c5fa810ad773f46a2e241ac76c438985fc09d4c4,2017-01-23T02:19:13Z,7f6045003d313158bcc50f03df9586f0b4356b5b/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/a369b8df5941949f88bc775a05f705a4fe326477/36b162ea4689b66ebc50c58dc21eea828367b9ad/7857d8c003a11e4313f8a92333c78b16dd6e83e3/1f26b23e9733598351e795594346966e14508351/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/a3632c5c9f45a05ce97581c279c83df65e96bc78/df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/,2017-09-27 23:03:03-04:00/2017-02-04 04:35:12-05:00/2017-03-01 18:17:52-05:00/2017-09-27 23:52:24-04:00/2020-01-17 22:56:34-05:00/2020-02-08 02:07:48-05:00/2020-02-10 15:57:18-05:00/2019-06-14 12:43:07-04:00/2017-01-23 09:47:35-05:00/2017-12-30 16:43:20-05:00/,"added quantum compiler intro jupyter notebook

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,454276a05b278883e00e4ac1625f544197710e66,2017-01-30T22:34:53Z,7f6045003d313158bcc50f03df9586f0b4356b5b/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/a369b8df5941949f88bc775a05f705a4fe326477/36b162ea4689b66ebc50c58dc21eea828367b9ad/7857d8c003a11e4313f8a92333c78b16dd6e83e3/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/,2017-09-27 23:03:03-04:00/2017-02-04 04:35:12-05:00/2017-09-27 23:52:24-04:00/2020-01-17 22:56:34-05:00/2020-02-08 02:07:48-05:00/2019-06-14 12:43:07-04:00/2017-12-30 16:43:20-05:00/,Add CN version of quantum_compiler_intro
Assembly,artiste-qb-net/qubiter,2768d5bd775d4206b66e7fd564a8aa0571104c52,2018-07-28T15:05:33Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/1186fb02c3fe425419356be82e153b28aa9183c2/,2019-06-14 00:22:03-04:00/2019-01-16 12:15:09-05:00/,improved cnot counter in class SEO_reader
Assembly,artiste-qb-net/qubiter,7d000593469a05dea00d51aba2bc78f55bdc1910,2019-05-13T06:12:06Z,483a9a8febf315103db390d14a5076ba13e1b612/6b3497f9604daee4a59d3663e4d5838c31a8706c/8e156512fcf09090c899f979d88de4b89c588c7e/,2019-05-13 02:23:42-04:00/2019-05-13 02:47:49-04:00/2019-05-13 09:34:16-04:00/,More reworking of OneBitGates so it can handle tensorflow tensor assignments
Assembly,artiste-qb-net/qubiter,d7ba96c958caa1708ae3ef09d3c84206ccb77316,2019-06-14T04:22:03Z,935098785ac910fa9afc483bc42b884bb7d069d2/f816aded2826341fd6927ea96d8717a7da0d607c/3cc7ae7d83bc93f676b79aa0700dc68895f78566/425639369bf97854c6b737ee2e7548a720a935f5/e592002498517c7e6778bb4d53620ded4507482f/36b162ea4689b66ebc50c58dc21eea828367b9ad/7857d8c003a11e4313f8a92333c78b16dd6e83e3/fe588d378754ea1daa95b9dd506e986504b77065/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/8ccf8879d1b080991250332685a59b69d81784dd/1823d776e502437b816f9ac317f3569bb0bdb23e/3ef61e86c843d4346fa4fbdbe1a1d9562b77aefc/,2019-06-14 11:42:43-04:00/2019-07-02 12:26:52-04:00/2019-06-15 13:34:05-04:00/2019-06-25 04:53:07-04:00/2020-02-12 04:20:12-05:00/2020-01-17 22:56:34-05:00/2020-02-08 02:07:48-05:00/2019-06-14 21:37:36-04:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-06-14 12:43:07-04:00/2019-06-14 12:48:41-04:00/2019-06-16 19:11:59-04:00/2019-06-16 01:54:40-04:00/,restructured repo so that it now includes an internal qubiter subdirectory. This structure is necessary for pip install. Also added python scripts that run all class py files and notebooks. This is a homemade continuous integration tool.
Assembly,artiste-qb-net/qubiter,d33d4b78db176948471e2ba0360aa277a0851890,2017-12-17T09:25:57Z,ea7af8f133fc1e824a3962ce25ef7637468bb31f/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/653988f4dce11447c4bdb7c0a7b71a9fe284d445/,2017-12-22 21:23:33-05:00/2017-12-22 13:55:48-05:00/2018-07-23 11:51:04-04:00/,typos
Assembly,artiste-qb-net/qubiter,f76db4edb01a635570bb72656477e99493297f1d,2019-01-14T16:33:01Z,b6897fd4ed82856cedf9d490eaacba372dc01bc2/1186fb02c3fe425419356be82e153b28aa9183c2/6277c230f056646f1ed4797ad8357bebf25c9b04/1da4df451007e88b3bd7ad1e9ca860e2ada998ea/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/f851d219f1cbb6ab60f170659dc57a6af08bb9ec/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/18c13a733f09180c18dfca55e336d8f520224cd9/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/8303678d60c539aae8aa7480bdb6235898feecd4/e4e18d98de823951ed146ac55cfbe65d0f3ae9ea/37ff0a56cf94741546fd9073454795cd9e41bfa8/edb8f410d25a6b518ad0a580e66b30c74f4beb29/1ba7706639a5150ef0237c68b94ac1fd3fa60281/,2019-01-15 01:52:37-05:00/2019-01-16 12:15:09-05:00/2019-04-07 18:19:37-04:00/2019-01-17 01:10:36-05:00/2019-01-24 10:47:14-05:00/2019-01-14 22:08:51-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-01-19 00:12:11-05:00/2019-01-18 12:08:15-05:00/2019-03-04 22:52:08-05:00/2019-03-03 01:02:51-05:00/2019-02-04 15:05:09-05:00/2019-03-02 16:09:37-05:00/2019-01-14 11:57:49-05:00/,Added class EngLineList
Assembly,artiste-qb-net/qubiter,a35ed49ac6fa1d00e9c03726f265539469cbd4e6,2017-12-22T18:55:48Z,302b4bc475e418632d7506a35ebe3067f4bf572b/33048fd17e72008231c9d6d49e02dcd3ff8d670f/dcb3a2e027a98a178ac0172c3de5d87ad912273b/e592002498517c7e6778bb4d53620ded4507482f/1186fb02c3fe425419356be82e153b28aa9183c2/22dfc34794bb14781bfe2666d91db95a226f8973/1823d776e502437b816f9ac317f3569bb0bdb23e/41ada4bbae07b23d61a91bd3d48369204744aa75/4c29aa247e5f76063ff14ee89c07bef369664acf/2768d5bd775d4206b66e7fd564a8aa0571104c52/7857d8c003a11e4313f8a92333c78b16dd6e83e3/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/82ba7982ea591a17bde043a5fd96e02b8dc06d72/df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/a6097e48939df0edae7ee330c93139a59561aa72/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/995d1c0aa2f91cafa0714c41a56461ec0332b9a2/3de15b1681ff7ebc41038a9c852d676884cb149a/653988f4dce11447c4bdb7c0a7b71a9fe284d445/52e90753ead34eace41f4ad363eacb98fc5df9e0/,2017-12-28 10:54:08-05:00/2018-01-27 13:13:48-05:00/2019-01-18 20:37:09-05:00/2020-02-12 04:20:12-05:00/2019-01-16 12:15:09-05:00/2018-01-26 21:34:47-05:00/2019-06-16 19:11:59-04:00/2018-01-01 15:57:20-05:00/2017-12-23 15:46:41-05:00/2018-07-28 11:05:33-04:00/2020-02-08 02:07:48-05:00/2019-01-18 12:08:15-05:00/2018-07-18 13:13:07-04:00/2017-12-30 16:43:20-05:00/2019-01-10 23:45:04-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2018-07-25 12:31:04-04:00/2017-12-23 02:06:12-05:00/2019-01-10 22:50:59-05:00/2018-07-23 11:51:04-04:00/2020-03-26 13:20:07-04:00/,Added classes ForbiddenCNotExpander and Qubiter_to_IBMqasm2 and deleted class Qubiter_to_IBMqasm2_5q.py
Assembly,artiste-qb-net/qubiter,f851d219f1cbb6ab60f170659dc57a6af08bb9ec,2019-01-15T03:08:51Z,b6897fd4ed82856cedf9d490eaacba372dc01bc2/1186fb02c3fe425419356be82e153b28aa9183c2/1da4df451007e88b3bd7ad1e9ca860e2ada998ea/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/6277c230f056646f1ed4797ad8357bebf25c9b04/,2019-01-15 01:52:37-05:00/2019-01-16 12:15:09-05:00/2019-01-17 01:10:36-05:00/2019-01-24 10:47:14-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-02-06 12:15:22-05:00/2019-04-07 18:19:37-04:00/,Enhanced EngLineList class
Assembly,artiste-qb-net/qubiter,98a42f88af37c13bbf34ca1d76335fbf7fd0873e,2019-06-30T02:46:59Z,4c0d02e60e0ebc10943c44bd2ebf6472238fbcce/,2019-06-29 23:38:19-04:00/,added more to mock list for sphinx_doc
Assembly,artiste-qb-net/qubiter,9175c8688b5887548058a4ead485b2750f2a00e9,2016-06-17T21:29:00Z,7261a1932646eae31cbc0d0a04083b57a0e18af8/,2016-06-17 19:21:40-04:00/,"Changed class PhaseEstSEO_writer, made it simpler"
Assembly,artiste-qb-net/qubiter,52e90753ead34eace41f4ad363eacb98fc5df9e0,2020-03-26T17:20:07Z,3f8ef868041da66fefb3171315c15f4a04677596/,2020-03-26 18:11:52-04:00/,improved restructured text
Assembly,artiste-qb-net/qubiter,b64d7c3363ec0e3737efffd12e303ede79fefb98,2018-07-25T00:42:14Z,0e5db32edcb057eda013c9eb46bb6e12569d393d/9ad069ab0d3837bf9f3fe4c9df7f00b6488eeda2/d7ba96c958caa1708ae3ef09d3c84206ccb77316/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/d4848bad35a6052d3748bb3771748ad8cc862eef/,2018-07-31 20:15:50-04:00/2019-01-19 02:05:03-05:00/2019-06-14 00:22:03-04:00/2019-01-18 12:08:15-05:00/2018-07-25 12:31:04-04:00/2018-07-28 11:27:14-04:00/,cosmetic changes
Assembly,artiste-qb-net/qubiter,72b344dca4e67c179194d19b526f0ae65035da60,2016-10-08T05:07:11Z,7f6045003d313158bcc50f03df9586f0b4356b5b/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/d7ba96c958caa1708ae3ef09d3c84206ccb77316/81954c327e0e49c7994e44b324ced5d06198cb3f/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2017-09-27 23:03:03-04:00/2017-02-04 04:35:12-05:00/2019-06-14 00:22:03-04:00/2016-12-01 12:13:48-05:00/2016-10-18 21:26:32-04:00/,"typo

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,81954c327e0e49c7994e44b324ced5d06198cb3f,2016-12-01T17:13:48Z,7f6045003d313158bcc50f03df9586f0b4356b5b/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/4ad435d3f67800a8744a326f089ffa98ce8b6060/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/49345ae922983e26a71bec893a1ca6b8116e7384/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/767365c3b030979059c5d21d3aac0e592a8a6041/edb8f410d25a6b518ad0a580e66b30c74f4beb29/,2017-09-27 23:03:03-04:00/2017-02-04 04:35:12-05:00/2018-07-29 15:14:25-04:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2016-12-03 22:39:02-05:00/2019-02-06 12:15:22-05:00/2017-01-02 20:26:44-05:00/2019-03-02 16:09:37-05:00/,"Improved describe_state_vec print out so that it uses ZL or ZF subscript

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,43df6d68fe473a6d99215fe2022d16dee4a20258,2019-01-21T00:38:02Z,f72a7ee826838c95df430a91c0937d59721f658d/4a07898b65bd0cb5b547a16553334b12ef29276c/e592002498517c7e6778bb4d53620ded4507482f/c153ba68f55d50d49368397e795ed4bb8050253e/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/c211ab9a91b13f3377df32ff047258bee3516fac/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/37ff0a56cf94741546fd9073454795cd9e41bfa8/,2019-02-20 23:25:41-05:00/2019-03-08 13:26:47-05:00/2020-02-12 04:20:12-05:00/2019-01-20 19:58:44-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-03-25 22:50:15-04:00/2019-02-06 12:15:22-05:00/2019-02-04 15:05:09-05:00/,Improved Hello World jupyter notebook. Now S and T entered exactly instead of up to a phase
Assembly,artiste-qb-net/qubiter,969b2472b8d7d8d68636a6f03526ee37e01dc714,2017-01-23T00:33:27Z,7f6045003d313158bcc50f03df9586f0b4356b5b/,2017-09-27 23:03:03-04:00/,"tiny changes

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,462dd426f8b9cc538a45a394147059b4f260adfc,2019-03-08T04:14:36Z,4a07898b65bd0cb5b547a16553334b12ef29276c/f6e5181e22a4c93f94393974c72fae8e2fc6af87/a4d6ff908725b5467bf28b1cbaabf85e51c496df/bde94c45e8fbf7dd64d8bbf3b693031f4b79d7e2/6193697f831f62be4fd6245cc2c8be2eb1533807/00c0364b17e989e1c02a5b9a69140eb8cd635e50/f0dbaabcfda8a4fa97e0454b39e7a46cf5d1a08c/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/680aab8c05dceeabc2f324a8070098c74faedee2/87648659df8eae681fe61ee7911cfefbea506d88/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/23c65f402715fd3f866ce3ccf65453be570a105e/1f26b23e9733598351e795594346966e14508351/79532f7a9ab1a7131ce5523173ef28c99b5f409a/c211ab9a91b13f3377df32ff047258bee3516fac/832e79fcc624853cbad28c873e2707566a1db241/,2019-03-08 13:26:47-05:00/2019-03-21 11:26:43-04:00/2019-03-17 13:20:11-04:00/2019-04-19 14:04:42-04:00/2019-04-21 21:21:08-04:00/2019-03-23 05:11:49-04:00/2019-03-23 11:46:02-04:00/2019-03-17 03:02:11-04:00/2019-03-19 14:34:34-04:00/2019-03-08 02:38:10-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2019-04-05 21:10:33-04:00/2020-02-10 15:57:18-05:00/2019-03-21 15:40:27-04:00/2020-03-25 22:50:15-04:00/2019-03-09 01:58:21-05:00/,Lots of changes in classes that interact with Rigetti
Assembly,artiste-qb-net/qubiter,00d140a704efc518a9a9cb6d1821a71963f9e02d,2019-03-19T20:54:56Z,7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/23c65f402715fd3f866ce3ccf65453be570a105e/79532f7a9ab1a7131ce5523173ef28c99b5f409a/,2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-04-05 21:10:33-04:00/2019-03-21 15:40:27-04:00/,omission mistake
Assembly,artiste-qb-net/qubiter,625cb2e727013891cf9da8a63f1a43600d081a62,2017-12-17T08:09:10Z,cd8fd67a41729ebef21d77387c2dbcea28f9be21/33048fd17e72008231c9d6d49e02dcd3ff8d670f/df085c830c8c421706f740645908c05ec11bbdd3/653988f4dce11447c4bdb7c0a7b71a9fe284d445/d33d4b78db176948471e2ba0360aa277a0851890/82ba7982ea591a17bde043a5fd96e02b8dc06d72/ea7af8f133fc1e824a3962ce25ef7637468bb31f/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/,2017-12-22 22:56:50-05:00/2018-01-27 13:13:48-05:00/2017-12-17 03:17:18-05:00/2018-07-23 11:51:04-04:00/2017-12-17 04:25:57-05:00/2018-07-18 13:13:07-04:00/2017-12-22 21:23:33-05:00/2017-12-22 13:55:48-05:00/,fixed bug in translation from qubiter english file to ibm qasm
Assembly,artiste-qb-net/qubiter,3f4d47fb5e1c28d6ebbd0a9123ede7b80c9c2b28,2019-04-07T22:32:38Z,eabdf0398eabdd46252ede58bda6a68536e09285/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/,2019-04-07 20:39:19-04:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/,"changed word listing to lista, 2 letters shorter"
Assembly,artiste-qb-net/qubiter,350fcc4563e0a60ca1a13820f860f6aba9db48f9,2019-05-09T23:56:50Z,e592002498517c7e6778bb4d53620ded4507482f/440782174e78dd29a464dd55fe98d71f197fc804/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/8554043787363e7524304020e34a01a167bc661b/,2020-02-12 04:20:12-05:00/2019-05-09 21:23:25-04:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-05-11 18:44:26-04:00/2019-05-09 22:20:08-04:00/,Adding TensorFlow Eager enabled simulator called SEO_simulator_tf
Assembly,artiste-qb-net/qubiter,41ada4bbae07b23d61a91bd3d48369204744aa75,2018-01-01T20:57:20Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/f6e5181e22a4c93f94393974c72fae8e2fc6af87/afc92b2be659b81fee69da6c3bb8286692eb2775/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/653988f4dce11447c4bdb7c0a7b71a9fe284d445/82ba7982ea591a17bde043a5fd96e02b8dc06d72/3de15b1681ff7ebc41038a9c852d676884cb149a/,2018-01-27 13:13:48-05:00/2019-03-21 11:26:43-04:00/2018-01-25 22:10:06-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2018-07-23 11:51:04-04:00/2018-07-18 13:13:07-04:00/2019-01-10 22:50:59-05:00/,Added class ChipCouplingsFitter
Assembly,artiste-qb-net/qubiter,586651245502bdca6ff24955a7ba7ba03754ba30,2016-10-06T03:57:45Z,9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/67cdb562dce12934b420328db1d904d3be662c17/86721215ea820925ee9e040a8bdb952424980dc1/d36f63bfcf91bb9ded9ce0eab3ae4f5a8026b428/,2017-03-01 18:17:52-05:00/2016-10-16 12:29:03-04:00/2016-10-16 11:48:50-04:00/2016-10-07 19:06:01-04:00/,"minor corrections to notebooks

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,36b162ea4689b66ebc50c58dc21eea828367b9ad,2020-01-18T03:56:34Z,1f26b23e9733598351e795594346966e14508351/7857d8c003a11e4313f8a92333c78b16dd6e83e3/e592002498517c7e6778bb4d53620ded4507482f/,2020-02-10 15:57:18-05:00/2020-02-08 02:07:48-05:00/2020-02-12 04:20:12-05:00/,fixed some csd files with my new linux computer
Assembly,artiste-qb-net/qubiter,2324c729c4e2067dc80b712ea558ded18779b44a,2019-06-28T05:47:10Z,746481beb350a8193407d9697e886d86fadf919b/52e90753ead34eace41f4ad363eacb98fc5df9e0/7857d8c003a11e4313f8a92333c78b16dd6e83e3/ec8bb736cffb85bc8fb1ce0e757ac0c38861f884/,2019-06-29 22:37:53-04:00/2020-03-26 13:20:07-04:00/2020-02-08 02:07:48-05:00/2019-07-04 10:57:45-04:00/,some tweaks to sphinx_doc like adding Module Index to sidebar
Assembly,artiste-qb-net/qubiter,f08a75a0090259faa2da5ca63fd256fc09e19bf7,2019-06-23T15:17:52Z,2324c729c4e2067dc80b712ea558ded18779b44a/15208359199a8f5b429b7588f29348d7e685d871/425639369bf97854c6b737ee2e7548a720a935f5/609a64822f7a89778c85c1708a6028ec0033cb91/,2019-06-28 01:47:10-04:00/2019-06-25 09:06:23-04:00/2019-06-25 04:53:07-04:00/2019-06-23 14:03:03-04:00/,added mocks to sphinx conf.py
Assembly,artiste-qb-net/qubiter,c6d35761925a423b9899b992c26b02d01b2f70f2,2019-02-06T22:39:05Z,36b162ea4689b66ebc50c58dc21eea828367b9ad/680aab8c05dceeabc2f324a8070098c74faedee2/ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/f7174b7d106a8b8b54fd952ae8009a7dff9bcab6/,2020-01-17 22:56:34-05:00/2019-03-19 14:34:34-04:00/2019-02-24 03:59:37-05:00/2019-05-11 18:44:26-04:00/2019-03-05 02:38:42-05:00/,"fixed error isinstance(x, (float, np.floating))"
Assembly,artiste-qb-net/qubiter,2992f0558f5e58430fb08a533fdd7a71e1558cf5,2016-10-17T04:59:13Z,efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2016-10-18 21:26:32-04:00/,"small typo

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,b6897fd4ed82856cedf9d490eaacba372dc01bc2,2019-01-15T06:52:37Z,1da4df451007e88b3bd7ad1e9ca860e2ada998ea/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/8303678d60c539aae8aa7480bdb6235898feecd4/6277c230f056646f1ed4797ad8357bebf25c9b04/,2019-01-17 01:10:36-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-02-24 03:59:37-05:00/2019-02-06 12:15:22-05:00/2019-03-04 22:52:08-05:00/2019-04-07 18:19:37-04:00/,fine tuning how initialize EchoingSEO_reader and its children
Assembly,artiste-qb-net/qubiter,9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce,2017-03-01T23:17:52Z,2768d5bd775d4206b66e7fd564a8aa0571104c52/7f6045003d313158bcc50f03df9586f0b4356b5b/4ad435d3f67800a8744a326f089ffa98ce8b6060/7857d8c003a11e4313f8a92333c78b16dd6e83e3/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/d7ba96c958caa1708ae3ef09d3c84206ccb77316/43df6d68fe473a6d99215fe2022d16dee4a20258/18c13a733f09180c18dfca55e336d8f520224cd9/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/8f806abdfe360feaef7ed0c011742b6ddf3d69aa/df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/a6144f2ec16999ffc49628d18143c520f475d70a/6904697a0cef061e6e8eef0d72a1d96472717ce7/,2018-07-28 11:05:33-04:00/2017-09-27 23:03:03-04:00/2018-07-29 15:14:25-04:00/2020-02-08 02:07:48-05:00/2018-07-25 12:31:04-04:00/2019-06-14 00:22:03-04:00/2019-01-20 19:38:02-05:00/2019-01-19 00:12:11-05:00/2019-06-14 12:43:07-04:00/2019-02-13 11:23:31-05:00/2017-12-30 16:43:20-05:00/2019-01-19 00:24:34-05:00/2019-01-20 19:46:36-05:00/,"reran all notebooks to make sure they haven't broken

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,0e1e9d6d685a7839a94e88efd2aacdbb98151167,2016-10-08T04:56:13Z,3de15b1681ff7ebc41038a9c852d676884cb149a/,2019-01-10 22:50:59-05:00/,"Made optional the bit reversing permutation in quantum Fourier transform.

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,8303678d60c539aae8aa7480bdb6235898feecd4,2019-03-05T03:52:08Z,935098785ac910fa9afc483bc42b884bb7d069d2/64e7484d4e60a98d1d415e349299779b3ef491f3/8d44a2098c29160b09b6e0516371b0b3e7a548ac/e592002498517c7e6778bb4d53620ded4507482f/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/f7174b7d106a8b8b54fd952ae8009a7dff9bcab6/f6645c2365b584e601e575432f9e0e58e18451dd/2aedf9b0d2180ba698bf14f278b794d583c6bd52/5930ed939fb60da435d04aea13705c060af28db3/f64af562327fa85e3f208c8be09f2d35b001c0ec/,2019-06-14 11:42:43-04:00/2020-02-09 18:30:30-05:00/2019-05-12 23:23:33-04:00/2020-02-12 04:20:12-05:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/2019-03-05 02:38:42-05:00/2019-03-07 23:44:48-05:00/2019-03-07 23:50:27-05:00/2019-03-07 01:14:38-05:00/2019-03-05 21:43:02-05:00/,"Added new 2 qbit gate called SWAY which includes SWAP, iSWAP. sqrt(iSWAP), PSWAP, sqrt(PSWAP), etc. SWAY can be
have any number of controls and SEO_simulator can handle it"
Assembly,artiste-qb-net/qubiter,178bead999d17d3e115d2a873e7617945f1021e6,2016-11-30T18:43:00Z,302b4bc475e418632d7506a35ebe3067f4bf572b/33048fd17e72008231c9d6d49e02dcd3ff8d670f/e592002498517c7e6778bb4d53620ded4507482f/b64d7c3363ec0e3737efffd12e303ede79fefb98/1186fb02c3fe425419356be82e153b28aa9183c2/ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd/2768d5bd775d4206b66e7fd564a8aa0571104c52/18cb5d389405a767cbbf0796d28ad6f8ad7faf02/7857d8c003a11e4313f8a92333c78b16dd6e83e3/80dd3e96565af6ada7abbff3655fc5adb79360dd/acdf608065bb8b80b90c57d4683cdede72f2338c/8425018c56d3ae7eee62793557599ca0026a9f9a/8303678d60c539aae8aa7480bdb6235898feecd4/65bed30bd962cdb207c0ea1bdb1814166b5c4e1a/b6897fd4ed82856cedf9d490eaacba372dc01bc2/7234816f78e8c0e212b9449deda2983d35a20dc2/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/49345ae922983e26a71bec893a1ca6b8116e7384/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/3de15b1681ff7ebc41038a9c852d676884cb149a/7f6045003d313158bcc50f03df9586f0b4356b5b/c6d71f422710934f67aa2ce3e990e757ad721606/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/767365c3b030979059c5d21d3aac0e592a8a6041/81954c327e0e49c7994e44b324ced5d06198cb3f/,2017-12-28 10:54:08-05:00/2018-01-27 13:13:48-05:00/2020-02-12 04:20:12-05:00/2018-07-24 20:42:14-04:00/2019-01-16 12:15:09-05:00/2019-02-24 03:59:37-05:00/2018-07-28 11:05:33-04:00/2017-01-09 12:12:26-05:00/2020-02-08 02:07:48-05:00/2016-12-08 14:14:55-05:00/2016-12-04 13:13:44-05:00/2019-02-23 20:39:58-05:00/2019-03-04 22:52:08-05:00/2016-12-03 22:47:00-05:00/2019-01-15 01:52:37-05:00/2016-11-30 21:50:12-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2016-12-03 22:39:02-05:00/2018-07-25 12:31:04-04:00/2019-01-10 22:50:59-05:00/2017-09-27 23:03:03-04:00/2017-01-12 20:54:26-05:00/2019-01-24 10:47:14-05:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2017-01-02 20:26:44-05:00/2016-12-01 12:13:48-05:00/,"Added expander capabilities (classes CGateSEO_writer and CktExpander)

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,d906751c3d058c84900b918440ac8fdfdd4a9552,2019-05-13T20:38:20Z,e592002498517c7e6778bb4d53620ded4507482f/36b162ea4689b66ebc50c58dc21eea828367b9ad/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2020-02-12 04:20:12-05:00/2020-01-17 22:56:34-05:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/2019-06-14 00:22:03-04:00/,TensorFlow simulator and minimization finally work. Cleaning up
Assembly,artiste-qb-net/qubiter,9ad069ab0d3837bf9f3fe4c9df7f00b6488eeda2,2019-01-19T07:05:03Z,f72a7ee826838c95df430a91c0937d59721f658d/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/7857d8c003a11e4313f8a92333c78b16dd6e83e3/e52a576cdc96c8615704c7f7a185fc7b28211f7c/f6645c2365b584e601e575432f9e0e58e18451dd/,2019-02-20 23:25:41-05:00/2019-01-24 10:47:14-05:00/2020-02-08 02:07:48-05:00/2019-01-21 01:41:55-05:00/2019-03-07 23:44:48-05:00/,"updated jupyter notebook showing how to translate from Qubiter to Rigetti, Google and IBM languages"
Assembly,artiste-qb-net/qubiter,f72a7ee826838c95df430a91c0937d59721f658d,2019-02-21T04:25:41Z,a4d6ff908725b5467bf28b1cbaabf85e51c496df/680aab8c05dceeabc2f324a8070098c74faedee2/1823d776e502437b816f9ac317f3569bb0bdb23e/3278b874283927de2de08727e4b11caec895dfe8/f6e5181e22a4c93f94393974c72fae8e2fc6af87/91f643a57ad26f224e391e48c8872f96504ee14f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/87648659df8eae681fe61ee7911cfefbea506d88/8425018c56d3ae7eee62793557599ca0026a9f9a/23c65f402715fd3f866ce3ccf65453be570a105e/f6645c2365b584e601e575432f9e0e58e18451dd/8303678d60c539aae8aa7480bdb6235898feecd4/42fbedb964ccec49b2cbb792be79a268a8098af6/00c0364b17e989e1c02a5b9a69140eb8cd635e50/d7ba96c958caa1708ae3ef09d3c84206ccb77316/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/1f26b23e9733598351e795594346966e14508351/6277c230f056646f1ed4797ad8357bebf25c9b04/4a07898b65bd0cb5b547a16553334b12ef29276c/bde94c45e8fbf7dd64d8bbf3b693031f4b79d7e2/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/eb3c94eafb761e6ddf34ce354647fa1d851bb791/edb8f410d25a6b518ad0a580e66b30c74f4beb29/78ccc41cf9dc2b5793a1b2cb70749aaa278c7b43/462dd426f8b9cc538a45a394147059b4f260adfc/,2019-03-17 13:20:11-04:00/2019-03-19 14:34:34-04:00/2019-06-16 19:11:59-04:00/2019-04-13 11:10:15-04:00/2019-03-21 11:26:43-04:00/2019-02-22 00:32:35-05:00/2020-02-08 02:07:48-05:00/2019-03-08 02:38:10-05:00/2019-02-23 20:39:58-05:00/2019-04-05 21:10:33-04:00/2019-03-07 23:44:48-05:00/2019-03-04 22:52:08-05:00/2019-02-21 00:28:28-05:00/2019-03-23 05:11:49-04:00/2019-06-14 00:22:03-04:00/2019-03-17 03:02:11-04:00/2020-02-10 15:57:18-05:00/2019-04-07 18:19:37-04:00/2019-03-08 13:26:47-05:00/2019-04-19 14:04:42-04:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2019-03-13 21:33:47-04:00/2019-03-02 16:09:37-05:00/2019-03-19 16:47:16-04:00/2019-03-07 23:14:36-05:00/,Made qubiter capable of doing hybrid quantum-classical computing (aka VQE). This was done by adding class MeanHamilMinimizer_naive and notebook illustrating its use. Added other classes that support this one.
Assembly,artiste-qb-net/qubiter,f0dbaabcfda8a4fa97e0454b39e7a46cf5d1a08c,2019-03-23T15:46:02Z,23c65f402715fd3f866ce3ccf65453be570a105e/,2019-04-05 21:10:33-04:00/,avoided some repetition of code by introducing new internal function in MeanHamilMinimizer
Assembly,artiste-qb-net/qubiter,37a33e1553f4a0cfe7ae27a2ca32a277bd9da199,2016-03-29T15:36:49Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/e592002498517c7e6778bb4d53620ded4507482f/0e1e9d6d685a7839a94e88efd2aacdbb98151167/9175c8688b5887548058a4ead485b2750f2a00e9/c3f937972c610644c00b7934f5b0f26116bce310/63ec066797bdfab6b7bc5a23def2c0084ea89446/c73470e305a50486e171dfe7d48a4bd08fee24a0/bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7/8303678d60c539aae8aa7480bdb6235898feecd4/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/81f01862d4d4ee29aae5304fada9a15d7f5e65f7/3de15b1681ff7ebc41038a9c852d676884cb149a/7f6045003d313158bcc50f03df9586f0b4356b5b/484d38ac05802fe857f99355354f7c73c93115a3/7261a1932646eae31cbc0d0a04083b57a0e18af8/c211ab9a91b13f3377df32ff047258bee3516fac/57956f702a87d786ca189ea96289e391431cb9e9/edb8f410d25a6b518ad0a580e66b30c74f4beb29/,2018-01-27 13:13:48-05:00/2020-02-12 04:20:12-05:00/2016-10-08 00:56:13-04:00/2016-06-17 17:29:00-04:00/2016-06-17 14:48:02-04:00/2016-07-02 02:32:41-04:00/2016-06-24 15:39:21-04:00/2017-01-30 15:54:33-05:00/2019-03-04 22:52:08-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2016-09-19 16:55:54-04:00/2019-01-10 22:50:59-05:00/2017-09-27 23:03:03-04:00/2016-05-21 23:57:14-04:00/2016-06-17 19:21:40-04:00/2020-03-25 22:50:15-04:00/2016-05-21 23:57:14-04:00/2019-03-02 16:09:37-05:00/,"Added class PhaseEstSEO_writer for doing quantum phase estimation

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,a1ff81d5cec51d1c42230b8b24a0e125fa377f3c,2019-01-24T15:47:14Z,f72a7ee826838c95df430a91c0937d59721f658d/e592002498517c7e6778bb4d53620ded4507482f/f6645c2365b584e601e575432f9e0e58e18451dd/6277c230f056646f1ed4797ad8357bebf25c9b04/7857d8c003a11e4313f8a92333c78b16dd6e83e3/dd1a78870f758ccf71c969f4f3098dd2e598347c/3f4d47fb5e1c28d6ebbd0a9123ede7b80c9c2b28/d7ba96c958caa1708ae3ef09d3c84206ccb77316/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/680aab8c05dceeabc2f324a8070098c74faedee2/dcf87233179b58206b26c8906a752c26ced2c0ec/c211ab9a91b13f3377df32ff047258bee3516fac/f7174b7d106a8b8b54fd952ae8009a7dff9bcab6/e4e18d98de823951ed146ac55cfbe65d0f3ae9ea/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/462dd426f8b9cc538a45a394147059b4f260adfc/,2019-02-20 23:25:41-05:00/2020-02-12 04:20:12-05:00/2019-03-07 23:44:48-05:00/2019-04-07 18:19:37-04:00/2020-02-08 02:07:48-05:00/2019-01-26 02:32:08-05:00/2019-04-07 18:32:38-04:00/2019-06-14 00:22:03-04:00/2019-03-17 03:02:11-04:00/2019-03-19 14:34:34-04:00/2019-06-16 01:43:35-04:00/2020-03-25 22:50:15-04:00/2019-03-05 02:38:42-05:00/2019-03-03 01:02:51-05:00/2019-02-02 13:17:35-05:00/2019-03-07 23:14:36-05:00/,Generalized Placeholders to include functional placeholders
Assembly,artiste-qb-net/qubiter,f24d9d66d4dcb120afd1b5e251cd072f9b03e0a2,2019-01-13T00:15:43Z,dcf87233179b58206b26c8906a752c26ced2c0ec/f851d219f1cbb6ab60f170659dc57a6af08bb9ec/f76db4edb01a635570bb72656477e99493297f1d/1f26b23e9733598351e795594346966e14508351/,2019-06-16 01:43:35-04:00/2019-01-14 22:08:51-05:00/2019-01-14 11:33:01-05:00/2020-02-10 15:57:18-05:00/,"Added methods that store a circuit in memory as a list of the lines, as strings, of an English file"
Assembly,artiste-qb-net/qubiter,3c245848cd4468d34d4a1904f9eb26ffe55045c3,2019-05-10T02:10:38Z,dcf87233179b58206b26c8906a752c26ced2c0ec/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/c211ab9a91b13f3377df32ff047258bee3516fac/,2019-06-16 01:43:35-04:00/2019-05-11 18:44:26-04:00/2020-03-25 22:50:15-04:00/,fixing SEO_simulator_tf
Assembly,artiste-qb-net/qubiter,8e156512fcf09090c899f979d88de4b89c588c7e,2019-05-13T13:34:16Z,f5a26411f40021c8791c59ea255111952a0cd30d/e592002498517c7e6778bb4d53620ded4507482f/,2019-05-13 10:07:43-04:00/2020-02-12 04:20:12-05:00/,revised OneBitGate so it can handle tensorflow
Assembly,artiste-qb-net/qubiter,653988f4dce11447c4bdb7c0a7b71a9fe284d445,2018-07-23T15:51:04Z,e592002498517c7e6778bb4d53620ded4507482f/b64d7c3363ec0e3737efffd12e303ede79fefb98/1186fb02c3fe425419356be82e153b28aa9183c2/9ad069ab0d3837bf9f3fe4c9df7f00b6488eeda2/1823d776e502437b816f9ac317f3569bb0bdb23e/2768d5bd775d4206b66e7fd564a8aa0571104c52/7857d8c003a11e4313f8a92333c78b16dd6e83e3/092c151d9618fd8d18e44028dfa577476508c5a8/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/f6645c2365b584e601e575432f9e0e58e18451dd/59fded6cfb06bb99d4eb3bf41316c37da2be9901/65708d57ce6d237b9ea4a4ee0e5d9685ea6eab97/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/2c13bc1633d20dbff080798a2238e67bfc002ada/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/d4848bad35a6052d3748bb3771748ad8cc862eef/3de15b1681ff7ebc41038a9c852d676884cb149a/f72a7ee826838c95df430a91c0937d59721f658d/f816aded2826341fd6927ea96d8717a7da0d607c/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/52e90753ead34eace41f4ad363eacb98fc5df9e0/462dd426f8b9cc538a45a394147059b4f260adfc/,2020-02-12 04:20:12-05:00/2018-07-24 20:42:14-04:00/2019-01-16 12:15:09-05:00/2019-01-19 02:05:03-05:00/2019-06-16 19:11:59-04:00/2018-07-28 11:05:33-04:00/2020-02-08 02:07:48-05:00/2019-01-18 12:40:57-05:00/2019-01-18 12:08:15-05:00/2019-03-07 23:44:48-05:00/2018-07-26 17:00:07-04:00/2019-01-17 01:03:50-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-06-22 07:42:00-04:00/2018-07-25 12:31:04-04:00/2018-07-28 11:27:14-04:00/2019-01-10 22:50:59-05:00/2019-02-20 23:25:41-05:00/2019-07-02 12:26:52-04:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2020-03-26 13:20:07-04:00/2019-03-07 23:14:36-05:00/,"Added machinery for  translating Qubiter qasm to 3 target quantum languages:  IBM qasm, Google Cirq and Rigetti PyQuil"
Assembly,artiste-qb-net/qubiter,1186fb02c3fe425419356be82e153b28aa9183c2,2019-01-16T17:15:09Z,e592002498517c7e6778bb4d53620ded4507482f/65708d57ce6d237b9ea4a4ee0e5d9685ea6eab97/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/1da4df451007e88b3bd7ad1e9ca860e2ada998ea/7857d8c003a11e4313f8a92333c78b16dd6e83e3/e52a576cdc96c8615704c7f7a185fc7b28211f7c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/c6d35761925a423b9899b992c26b02d01b2f70f2/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/8425018c56d3ae7eee62793557599ca0026a9f9a/e4e18d98de823951ed146ac55cfbe65d0f3ae9ea/462dd426f8b9cc538a45a394147059b4f260adfc/,2020-02-12 04:20:12-05:00/2019-01-17 01:03:50-05:00/2019-01-24 10:47:14-05:00/2019-01-17 01:10:36-05:00/2020-02-08 02:07:48-05:00/2019-01-21 01:41:55-05:00/2019-06-14 00:22:03-04:00/2019-02-06 17:39:05-05:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-01-18 12:08:15-05:00/2019-02-23 20:39:58-05:00/2019-03-03 01:02:51-05:00/2019-03-07 23:14:36-05:00/,"Changed how variables are entered by user. Before, you entered None and Qubiter would decide for itself what to call it, something like #3. Now, you enter a string '#3' or '-#3' , where 3 can be replaced by any non-negative int"
Assembly,artiste-qb-net/qubiter,85e42a6bdfcd38ae0fdaa95878f5432ca3da2d8d,2016-03-21T17:39:05Z,8b2a7d81b3be99e488d4da7382cffa309d6b968f/63ec066797bdfab6b7bc5a23def2c0084ea89446/86facaed0d36096a243b2c75b53343b9b1302cfa/60816eb4fe366e5fe5797b6436b8a2e83ad700de/c3f937972c610644c00b7934f5b0f26116bce310/767365c3b030979059c5d21d3aac0e592a8a6041/7261a1932646eae31cbc0d0a04083b57a0e18af8/,2016-03-21 18:43:19-04:00/2016-07-02 02:32:41-04:00/2016-11-30 23:54:03-05:00/2017-01-03 15:53:24-05:00/2016-06-17 14:48:02-04:00/2017-01-02 20:26:44-05:00/2016-06-17 19:21:40-04:00/,"Fixed small bug in embedding controls

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,42fbedb964ccec49b2cbb792be79a268a8098af6,2019-02-21T05:28:28Z,91f643a57ad26f224e391e48c8872f96504ee14f/a4d6ff908725b5467bf28b1cbaabf85e51c496df/00c0364b17e989e1c02a5b9a69140eb8cd635e50/,2019-02-22 00:32:35-05:00/2019-03-17 13:20:11-04:00/2019-03-23 05:11:49-04:00/,typos
Assembly,artiste-qb-net/qubiter,440782174e78dd29a464dd55fe98d71f197fc804,2019-05-10T01:23:25Z,3947c630165a4bcd9c0e452b3bb170573fadef7d/bb6f2a7eae8d06db8276aa873cae842c12c1200c/a6d0847429f5e071d25410b2e342d819210f8b09/3c245848cd4468d34d4a1904f9eb26ffe55045c3/dcf87233179b58206b26c8906a752c26ced2c0ec/,2019-05-10 20:38:29-04:00/2019-05-09 23:21:05-04:00/2019-05-09 23:10:49-04:00/2019-05-09 22:10:38-04:00/2019-06-16 01:43:35-04:00/,fixing SEO_simulator_tf
Assembly,artiste-qb-net/qubiter,eabdf0398eabdd46252ede58bda6a68536e09285,2019-04-08T00:39:19Z,3278b874283927de2de08727e4b11caec895dfe8/,2019-04-13 11:10:15-04:00/,"improved SEO_Lista, replaced new_line() with append()"
Assembly,artiste-qb-net/qubiter,8267ed5b9ff55daad0281e8327182bb95e0f3c1d,2017-10-07T22:11:45Z,d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/a6144f2ec16999ffc49628d18143c520f475d70a/,2019-02-06 12:15:22-05:00/2019-01-19 00:24:34-05:00/,minor
Assembly,artiste-qb-net/qubiter,6277c230f056646f1ed4797ad8357bebf25c9b04,2019-04-07T22:19:37Z,3cc7ae7d83bc93f676b79aa0700dc68895f78566/eabdf0398eabdd46252ede58bda6a68536e09285/bde94c45e8fbf7dd64d8bbf3b693031f4b79d7e2/3f4d47fb5e1c28d6ebbd0a9123ede7b80c9c2b28/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/2c13bc1633d20dbff080798a2238e67bfc002ada/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/3278b874283927de2de08727e4b11caec895dfe8/,2019-06-15 13:34:05-04:00/2019-04-07 20:39:19-04:00/2019-04-19 14:04:42-04:00/2019-04-07 18:32:38-04:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2019-06-22 07:42:00-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-04-13 11:10:15-04:00/,Changed name of EngFileListing to SEO_Listing and added simulate() method to it
Assembly,artiste-qb-net/qubiter,092c151d9618fd8d18e44028dfa577476508c5a8,2019-01-18T17:40:57Z,dcb3a2e027a98a178ac0172c3de5d87ad912273b/e52a576cdc96c8615704c7f7a185fc7b28211f7c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-01-18 20:37:09-05:00/2019-01-21 01:41:55-05:00/2019-06-14 00:22:03-04:00/,Changed again Qubiter_to_GoogleCirq.py
Assembly,artiste-qb-net/qubiter,93c9fbcd15c071585a3419da6d33f110ba53adf8,2016-10-16T16:41:32Z,efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2016-10-18 21:26:32-04:00/,"More of bra, ket display problems

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,2887c6c1dc802599d54ba9db31af7fc1c9d0bb10,2019-02-11T17:33:35Z,58046c144f1664ae3f6f16c7a367acb08e7926de/f6e5181e22a4c93f94393974c72fae8e2fc6af87/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/a8a7fdc6b465b6dd608102cc61509a3f5d7e6b2e/,2019-03-04 03:55:32-05:00/2019-03-21 11:26:43-04:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/2019-02-11 12:54:20-05:00/,added mean value of Hermitian matrix StateVec.get_mean_value_of_real_diag_mat()
Assembly,artiste-qb-net/qubiter,0f9ea1e6de55fd4a6ddb52c6391526314df2380e,2016-09-19T23:13:08Z,3b9f07f3d3f04c308396cbd59b8728438e6ef849/7f6045003d313158bcc50f03df9586f0b4356b5b/586651245502bdca6ff24955a7ba7ba03754ba30/e592002498517c7e6778bb4d53620ded4507482f/178bead999d17d3e115d2a873e7617945f1021e6/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/86721215ea820925ee9e040a8bdb952424980dc1/84daafc0e9529187861334000fd7bff4dee99d4b/c9579b5299552f575540ce6785bd14ef09871465/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/2529df08ef36db01b4971a3025f658aaab138320/81954c327e0e49c7994e44b324ced5d06198cb3f/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2016-10-07 17:29:15-04:00/2017-09-27 23:03:03-04:00/2016-10-05 23:57:45-04:00/2020-02-12 04:20:12-05:00/2016-11-30 13:43:00-05:00/2017-02-04 04:35:12-05:00/2017-03-01 18:17:52-05:00/2016-10-16 11:48:50-04:00/2016-10-07 17:58:36-04:00/2016-10-05 20:33:28-04:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2016-10-18 22:09:09-04:00/2016-12-01 12:13:48-05:00/2016-10-18 21:26:32-04:00/,"canged name of file

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,1f26b23e9733598351e795594346966e14508351,2020-02-10T20:57:18Z,52e90753ead34eace41f4ad363eacb98fc5df9e0/e592002498517c7e6778bb4d53620ded4507482f/c211ab9a91b13f3377df32ff047258bee3516fac/,2020-03-26 13:20:07-04:00/2020-02-12 04:20:12-05:00/2020-03-25 22:50:15-04:00/,changed num_bits to num_qbits. added example of multicontrolled gate to Hello World notebook.
Assembly,artiste-qb-net/qubiter,9cd92fbabd5ae6224c0cfc24e027ae1b9f240605,2018-01-18T23:01:21Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/c9b8261a912b1bb39d29efe2e018459b60548b59/5f158ca1d5efe760b8106f3f0156a37ce2f4ec4c/7857d8c003a11e4313f8a92333c78b16dd6e83e3/782bc4d77f302afc7c1cf7a6373e9d8799abe67d/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/17b2b17976a4c68940cedb8ae3ac88e037f1fd29/c57d07f6f778454e511c5d5f1d33ff816745dd02/27362640b604561b91be2ce00c2ffef04f8a391a/52e90753ead34eace41f4ad363eacb98fc5df9e0/3de15b1681ff7ebc41038a9c852d676884cb149a/2c6a86b96cb4f6f2628399703fd687ad107ff3a5/,2018-01-27 13:13:48-05:00/2018-01-19 16:53:39-05:00/2018-01-19 10:06:10-05:00/2020-02-08 02:07:48-05:00/2018-01-19 16:02:27-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2018-11-03 22:28:07-04:00/2018-01-19 16:16:31-05:00/2018-01-19 16:38:21-05:00/2020-03-26 13:20:07-04:00/2019-01-10 22:50:59-05:00/2018-01-20 20:17:37-05:00/,git mistake fixed
Assembly,artiste-qb-net/qubiter,8d44a2098c29160b09b6e0516371b0b3e7a548ac,2019-05-13T03:23:33Z,d722286550932208ffe076fda2f01dd193776373/e592002498517c7e6778bb4d53620ded4507482f/a626784995d265620f9864fe5616b239ae350cb5/7d000593469a05dea00d51aba2bc78f55bdc1910/8e156512fcf09090c899f979d88de4b89c588c7e/,2019-05-13 11:44:28-04:00/2020-02-12 04:20:12-05:00/2019-05-12 23:56:57-04:00/2019-05-13 02:12:06-04:00/2019-05-13 09:34:16-04:00/,Generalized OneBitGates class so that it can return TensorFlow tensors as well as numpy tensors
Assembly,artiste-qb-net/qubiter,0d8faf996058bebb73cd96eb119f93214669491a,2019-03-02T21:24:29Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-06-14 00:22:03-04:00/,"small mistake, forgot to change NOTA"
Assembly,artiste-qb-net/qubiter,b775ead4f10d373f0b0a88401ca67ca6919d7a62,2019-01-21T21:03:12Z,a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/6277c230f056646f1ed4797ad8357bebf25c9b04/1f26b23e9733598351e795594346966e14508351/,2019-03-17 03:02:11-04:00/2019-01-24 10:47:14-05:00/2019-04-07 18:19:37-04:00/2020-02-10 15:57:18-05:00/,Added inplace addition to EngFileLineList class
Assembly,artiste-qb-net/qubiter,9154931e312f18cbef660c0de0ebd1988fb878a7,2017-01-04T19:28:18Z,9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/b789ac3be09469115e7daed353e471f6ae186485/,2017-03-01 18:17:52-05:00/2017-01-15 16:02:11-05:00/,"First release of quantum compiler

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,dd1a78870f758ccf71c969f4f3098dd2e598347c,2019-01-26T07:32:08Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-06-14 00:22:03-04:00/,typo
Assembly,artiste-qb-net/qubiter,63ec066797bdfab6b7bc5a23def2c0084ea89446,2016-07-02T06:32:41Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/7f6045003d313158bcc50f03df9586f0b4356b5b/e592002498517c7e6778bb4d53620ded4507482f/178bead999d17d3e115d2a873e7617945f1021e6/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/73fff7d024953aee575b264a243d2b7b31babc2a/f6a59ec46c593d36731346631a5a6e98030bbf35/7857d8c003a11e4313f8a92333c78b16dd6e83e3/0e1e9d6d685a7839a94e88efd2aacdbb98151167/75388f67d5666dd74791f47ebf9201121685869a/43df6d68fe473a6d99215fe2022d16dee4a20258/bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7/edb8f410d25a6b518ad0a580e66b30c74f4beb29/81f01862d4d4ee29aae5304fada9a15d7f5e65f7/3de15b1681ff7ebc41038a9c852d676884cb149a/,2018-01-27 13:13:48-05:00/2017-09-27 23:03:03-04:00/2020-02-12 04:20:12-05:00/2016-11-30 13:43:00-05:00/2017-03-01 18:17:52-05:00/2017-07-27 18:22:38-04:00/2016-08-03 02:27:32-04:00/2020-02-08 02:07:48-05:00/2016-10-08 00:56:13-04:00/2017-09-30 20:00:34-04:00/2019-01-20 19:38:02-05:00/2017-01-30 15:54:33-05:00/2019-03-02 16:09:37-05:00/2016-09-19 16:55:54-04:00/2019-01-10 22:50:59-05:00/,GITHUB TEST
Assembly,artiste-qb-net/qubiter,1da4df451007e88b3bd7ad1e9ca860e2ada998ea,2019-01-17T06:10:36Z,a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/3f4d47fb5e1c28d6ebbd0a9123ede7b80c9c2b28/,2019-03-17 03:02:11-04:00/2019-01-24 10:47:14-05:00/2019-04-07 18:32:38-04:00/,Changed name of class from EngLineList to EngFileLineList
Assembly,artiste-qb-net/qubiter,0c3c794456d25c20d097a39376f7df9630490013,2019-02-07T01:12:27Z,680aab8c05dceeabc2f324a8070098c74faedee2/4667b74d4db6848a870453dcf919d8532e7136c0/45c7887960ec3d306e0fd447fae5fd2613e1dab2/,2019-03-19 14:34:34-04:00/2019-02-08 18:22:00-05:00/2019-02-07 19:47:23-05:00/,Fixed a warning to use tuple() for an exotic index of an array. Updated README.md
Assembly,artiste-qb-net/qubiter,7b9de1f0fee1a72c699c563f3c2aa75942d2982a,2019-06-14T16:43:07Z,7857d8c003a11e4313f8a92333c78b16dd6e83e3/36b162ea4689b66ebc50c58dc21eea828367b9ad/1823d776e502437b816f9ac317f3569bb0bdb23e/,2020-02-08 02:07:48-05:00/2020-01-17 22:56:34-05:00/2019-06-16 19:11:59-04:00/,improved some notebooks
Assembly,artiste-qb-net/qubiter,8c4db439f5fd5fd120abb25568df47c46ffa9cd6,2019-07-01T05:18:41Z,45f419f4ad593b52624c613745b761079cd18d14/705dca87dae19555ca3920b936d9f9d8b81674df/,2019-07-01 03:01:31-04:00/2020-02-16 00:33:43-05:00/,typos
Assembly,artiste-qb-net/qubiter,f002ed4ebc8e1db6ffc4c0bba23496c72c26cc21,2019-01-14T20:37:15Z,d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/f851d219f1cbb6ab60f170659dc57a6af08bb9ec/,2019-02-06 12:15:22-05:00/2019-01-14 22:08:51-05:00/,added sample_bit_pd() and get_bit_counts() to StateVec class
Assembly,artiste-qb-net/qubiter,bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7,2017-01-30T20:54:33Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/e592002498517c7e6778bb4d53620ded4507482f/625cb2e727013891cf9da8a63f1a43600d081a62/b64d7c3363ec0e3737efffd12e303ede79fefb98/a369b8df5941949f88bc775a05f705a4fe326477/1186fb02c3fe425419356be82e153b28aa9183c2/75388f67d5666dd74791f47ebf9201121685869a/41ada4bbae07b23d61a91bd3d48369204744aa75/4c29aa247e5f76063ff14ee89c07bef369664acf/7857d8c003a11e4313f8a92333c78b16dd6e83e3/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/afc92b2be659b81fee69da6c3bb8286692eb2775/d7ba96c958caa1708ae3ef09d3c84206ccb77316/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/3de15b1681ff7ebc41038a9c852d676884cb149a/fc1bf3da874a15940f4036b4b0c12eec558561bf/7f6045003d313158bcc50f03df9586f0b4356b5b/653988f4dce11447c4bdb7c0a7b71a9fe284d445/6a3eecdcf81745915cc24a3063093aaa875c6bd6/462dd426f8b9cc538a45a394147059b4f260adfc/,2018-01-27 13:13:48-05:00/2020-02-12 04:20:12-05:00/2017-12-17 03:09:10-05:00/2018-07-24 20:42:14-04:00/2017-09-27 23:52:24-04:00/2019-01-16 12:15:09-05:00/2017-09-30 20:00:34-04:00/2018-01-01 15:57:20-05:00/2017-12-23 15:46:41-05:00/2020-02-08 02:07:48-05:00/2019-01-18 12:08:15-05:00/2017-03-01 18:17:52-05:00/2018-01-25 22:10:06-05:00/2019-06-14 00:22:03-04:00/2017-12-22 13:55:48-05:00/2019-01-10 22:50:59-05:00/2017-02-11 15:13:24-05:00/2017-09-27 23:03:03-04:00/2018-07-23 11:51:04-04:00/2017-01-31 00:08:40-05:00/2019-03-07 23:14:36-05:00/,"Added Qubiter_to_IBMqasm class

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,1ba7706639a5150ef0237c68b94ac1fd3fa60281,2019-01-14T16:57:49Z,7857d8c003a11e4313f8a92333c78b16dd6e83e3/d8e3600cf161b7c9d75582e2da9f12540116b52a/f851d219f1cbb6ab60f170659dc57a6af08bb9ec/37ff0a56cf94741546fd9073454795cd9e41bfa8/edb8f410d25a6b518ad0a580e66b30c74f4beb29/,2020-02-08 02:07:48-05:00/2019-01-18 18:15:04-05:00/2019-01-14 22:08:51-05:00/2019-02-04 15:05:09-05:00/2019-03-02 16:09:37-05:00/,Added print_eng_file() and print_pic_file() to class SEO_writer
Assembly,artiste-qb-net/qubiter,484d38ac05802fe857f99355354f7c73c93115a3,2016-05-22T03:57:14Z,5c1f868fc428e1fb92d7c438da08d8f7c596f410/1186fb02c3fe425419356be82e153b28aa9183c2/9175c8688b5887548058a4ead485b2750f2a00e9/7ca57e7b8e6e6cff71e79184697026aa755594c5/680aab8c05dceeabc2f324a8070098c74faedee2/c3f937972c610644c00b7934f5b0f26116bce310/5d301edea6446be4d92798c873473cdc652a6053/b4aea65c0606f7c2e59612fc31f2db9a6fb37068/fcc37d876a5b77fb2c5c3a36bdbea8a105243608/889c3f352129a31b0141671251795bd46b343aac/23faecfc899aac56609b80176f0c26ee341aeed3/18c7df1d4ccaa3bbd70024f472aa3766a26e4d20/229079011c2b0fe2d11323c93ee394bc95207a59/763abe38215e62c20884cb0545ca1826bada7bed/63ec066797bdfab6b7bc5a23def2c0084ea89446/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d4999852cc3d64aea905faf85e0c132dad073c55/7f501ea7afc282b52d5d6550c446c2d3751fe40c/c5f000caa56a1cd7d04a0b729f7e51e89b9f00ac/e62d2e7e07125f979ade2613757f529d270cf3dc/54b94af08edc4da15d2d6bd3499fb74365296502/9b1ef48ae099078db90f9d89e8308d7ff9f24131/8f40078256f8dffd0fdcb1d9d17513e67dc16690/fc851aa8a4bc2338241d0ee8c2e5fbe73389ed81/1f26b23e9733598351e795594346966e14508351/60af217908b92d642cb8babb017b71673d0bff12/7f6045003d313158bcc50f03df9586f0b4356b5b/4f74744608b4e76e7791d87391ff774c3ae87785/c211ab9a91b13f3377df32ff047258bee3516fac/e2e6e23090684db91ec03bac59b96d7e23e4027c/7261a1932646eae31cbc0d0a04083b57a0e18af8/,2016-05-25 11:13:51-04:00/2019-01-16 12:15:09-05:00/2016-06-17 17:29:00-04:00/2016-05-26 19:06:57-04:00/2019-03-19 14:34:34-04:00/2016-06-17 14:48:02-04:00/2016-05-26 19:05:02-04:00/2016-05-26 19:08:41-04:00/2016-05-26 19:07:47-04:00/2016-05-26 19:04:35-04:00/2016-05-26 19:03:35-04:00/2016-05-22 01:04:46-04:00/2016-05-26 19:04:01-04:00/2016-05-26 19:09:29-04:00/2016-07-02 02:32:41-04:00/2020-02-08 02:07:48-05:00/2016-05-26 19:06:16-04:00/2016-05-26 19:09:45-04:00/2016-05-26 19:09:14-04:00/2016-05-26 19:08:07-04:00/2016-05-26 19:07:22-04:00/2017-02-17 14:43:00-05:00/2016-05-26 19:08:57-04:00/2016-05-26 19:08:23-04:00/2020-02-10 15:57:18-05:00/2016-05-26 19:03:11-04:00/2017-09-27 23:03:03-04:00/2016-05-26 19:02:52-04:00/2020-03-25 22:50:15-04:00/2016-05-26 19:05:51-04:00/2016-06-17 19:21:40-04:00/,"Preliminary quantum chemistry. Using phase estimation to find ground state of molecules. Still needs much checking

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,bde94c45e8fbf7dd64d8bbf3b693031f4b79d7e2,2019-04-19T18:04:42Z,1f26b23e9733598351e795594346966e14508351/903888afa63867315376fb8942cb487271ecd3ce/,2020-02-10 15:57:18-05:00/2019-04-26 02:02:44-04:00/,fixed bug in RigettiTools main(). Other minor changes
Assembly,artiste-qb-net/qubiter,ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd,2019-02-24T08:59:37Z,e592002498517c7e6778bb4d53620ded4507482f/bda2963340466a49ea877a6dc4a58ed3b2e3278a/9e24c4e6e9619fac142d17f57a729b26a7742e52/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/1823d776e502437b816f9ac317f3569bb0bdb23e/f6645c2365b584e601e575432f9e0e58e18451dd/2aedf9b0d2180ba698bf14f278b794d583c6bd52/,2020-02-12 04:20:12-05:00/2019-02-28 02:29:53-05:00/2019-02-28 00:01:25-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-05-11 18:44:26-04:00/2019-06-16 19:11:59-04:00/2019-03-07 23:44:48-05:00/2019-03-07 23:50:27-05:00/,Added jupyter notebook entitled Translating_from_Qubiter_to_Xanadu_PennyLane.ipynb
Assembly,artiste-qb-net/qubiter,24d71b25120fd51b10effa071e978f726617b042,2018-11-06T19:06:36Z,dcf87233179b58206b26c8906a752c26ced2c0ec/5d3369644dca6bb187157c7e1335f66f0f7a2e66/7857d8c003a11e4313f8a92333c78b16dd6e83e3/,2019-06-16 01:43:35-04:00/2019-06-14 14:10:10+08:00/2020-02-08 02:07:48-05:00/,"Install qubiter by: pip install qubiter

Packaged qubiter with setup.py. Now user can install qubiter by using ""pip install qubiter""."
Assembly,artiste-qb-net/qubiter,6a3eecdcf81745915cc24a3063093aaa875c6bd6,2017-01-31T05:08:40Z,fc1bf3da874a15940f4036b4b0c12eec558561bf/7f6045003d313158bcc50f03df9586f0b4356b5b/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/653988f4dce11447c4bdb7c0a7b71a9fe284d445/,2017-02-11 15:13:24-05:00/2017-09-27 23:03:03-04:00/2017-12-22 13:55:48-05:00/2018-07-23 11:51:04-04:00/,"fixed typos

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,74b95731c68ca3148728e6a4c6da84ef3e7894ee,2016-09-19T22:52:06Z,90f25e58d62d944ccb9830620c08e6013eafd965/,2016-09-19 19:04:32-04:00/,"trying to get github to render some equations that it ignores in jupyter notebook

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,4183bd629df60b3cc3c0edb2540942c26e41ef26,2018-01-18T22:00:29Z,a2ee8282279e76e9734bfa4ee42761a294ff965e/,2018-01-18 17:15:45-05:00/,changed all Latex spellings to be consistent
Assembly,artiste-qb-net/qubiter,ebbed4e4c6135c7a6d96a218b22e336d94d390c9,2019-03-05T07:50:52Z,87648659df8eae681fe61ee7911cfefbea506d88/f64af562327fa85e3f208c8be09f2d35b001c0ec/,2019-03-08 02:38:10-05:00/2019-03-05 21:43:02-05:00/,added comments to notebook unusual_gates_like_generalized_swap.ipynb
Assembly,artiste-qb-net/qubiter,5d3369644dca6bb187157c7e1335f66f0f7a2e66,2019-06-14T06:10:10Z,dcf87233179b58206b26c8906a752c26ced2c0ec/a964bff04eb29617d9e5e7c95bff30f255ca4228/c211ab9a91b13f3377df32ff047258bee3516fac/,2019-06-16 01:43:35-04:00/2019-06-16 23:36:34+08:00/2020-03-25 22:50:15-04:00/,"appling pip

update setup file and _init_ files."
Assembly,artiste-qb-net/qubiter,5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f,2017-02-04T09:35:12Z,f72a7ee826838c95df430a91c0937d59721f658d/7f6045003d313158bcc50f03df9586f0b4356b5b/36b162ea4689b66ebc50c58dc21eea828367b9ad/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/43df6d68fe473a6d99215fe2022d16dee4a20258/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/1823d776e502437b816f9ac317f3569bb0bdb23e/df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/37ff0a56cf94741546fd9073454795cd9e41bfa8/a6144f2ec16999ffc49628d18143c520f475d70a/,2019-02-20 23:25:41-05:00/2017-09-27 23:03:03-04:00/2020-01-17 22:56:34-05:00/2017-03-01 18:17:52-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-01-20 19:38:02-05:00/2019-06-14 12:43:07-04:00/2019-06-16 19:11:59-04:00/2017-12-30 16:43:20-05:00/2019-02-04 15:05:09-05:00/2019-01-19 00:24:34-05:00/,"Fixed paths in all jupyter notebooks

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,6563c05945bcbe81a250816936ccd9e55993dcbc,2020-02-18T20:15:05Z,bacd67de9ea7cd7813405b71919ef06285832f46/,2020-04-06 11:06:39-04:00/,sorted list in SUMMARY.ipynb
Assembly,artiste-qb-net/qubiter,65bed30bd962cdb207c0ea1bdb1814166b5c4e1a,2016-12-04T03:47:00Z,acdf608065bb8b80b90c57d4683cdede72f2338c/,2016-12-04 13:13:44-05:00/,"reran expansion class tests

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,c153ba68f55d50d49368397e795ed4bb8050253e,2019-01-21T00:58:44Z,f72a7ee826838c95df430a91c0937d59721f658d/,2019-02-20 23:25:41-05:00/,typos
Assembly,artiste-qb-net/qubiter,4e1bd5bc3fd990972e5c206066a4a85bf254e641,2018-01-18T06:45:55Z,a2ee8282279e76e9734bfa4ee42761a294ff965e/4183bd629df60b3cc3c0edb2540942c26e41ef26/33048fd17e72008231c9d6d49e02dcd3ff8d670f/2c6a86b96cb4f6f2628399703fd687ad107ff3a5/,2018-01-18 17:15:45-05:00/2018-01-18 17:00:29-05:00/2018-01-27 13:13:48-05:00/2018-01-20 20:17:37-05:00/,Added latex_tools folder with new class AsciiPic_to_LaTex
Assembly,artiste-qb-net/qubiter,f7174b7d106a8b8b54fd952ae8009a7dff9bcab6,2019-03-05T07:38:42Z,f816aded2826341fd6927ea96d8717a7da0d607c/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/87648659df8eae681fe61ee7911cfefbea506d88/5930ed939fb60da435d04aea13705c060af28db3/f64af562327fa85e3f208c8be09f2d35b001c0ec/,2019-07-02 12:26:52-04:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-03-08 02:38:10-05:00/2019-03-07 01:14:38-05:00/2019-03-05 21:43:02-05:00/,Added jupyter notebook testing two new gates U_2_ and SWAY
Assembly,artiste-qb-net/qubiter,351a1a934d58567465e5a026f9671621613e8956,2018-01-26T05:12:24Z,935098785ac910fa9afc483bc42b884bb7d069d2/,2019-06-14 11:42:43-04:00/,"Fixed small mistake in Rosetta Stone, for PHAS"
Assembly,artiste-qb-net/qubiter,17b2b17976a4c68940cedb8ae3ac88e037f1fd29,2018-11-04T02:28:07Z,b6897fd4ed82856cedf9d490eaacba372dc01bc2/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/6f6a55568f5c63e6d70b6b40ee35c31365932a4d/52e90753ead34eace41f4ad363eacb98fc5df9e0/,2019-01-15 01:52:37-05:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/2020-03-26 03:39:10-04:00/2020-03-26 13:20:07-04:00/,"fixed StateVec.get_partial_tr(0, replaced word Tiny by Mosaic in Latex tools"
Assembly,artiste-qb-net/qubiter,18c13a733f09180c18dfca55e336d8f520224cd9,2019-01-19T05:12:11Z,a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/e52a576cdc96c8615704c7f7a185fc7b28211f7c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/43df6d68fe473a6d99215fe2022d16dee4a20258/,2019-01-24 10:47:14-05:00/2019-01-21 01:41:55-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-01-20 19:38:02-05:00/,New Placeholder jupyter notebook that includes both positive and negative placeholders
Assembly,artiste-qb-net/qubiter,bb8a69a93294577eef294b4e1fa32118bfd1360c,2017-01-03T16:09:10Z,9154931e312f18cbef660c0de0ebd1988fb878a7/,2017-01-04 14:28:18-05:00/,new cuncsd that makes p necessary input
Assembly,artiste-qb-net/qubiter,db59056f2c0dd5ec5e5af0ed86944ca62072df5e,2019-06-25T09:08:41Z,2324c729c4e2067dc80b712ea558ded18779b44a/e592002498517c7e6778bb4d53620ded4507482f/36b162ea4689b66ebc50c58dc21eea828367b9ad/7857d8c003a11e4313f8a92333c78b16dd6e83e3/c211ab9a91b13f3377df32ff047258bee3516fac/746481beb350a8193407d9697e886d86fadf919b/1f26b23e9733598351e795594346966e14508351/15208359199a8f5b429b7588f29348d7e685d871/522ce0752fffcd10033b81642be9fa95e4c68320/,2019-06-28 01:47:10-04:00/2020-02-12 04:20:12-05:00/2020-01-17 22:56:34-05:00/2020-02-08 02:07:48-05:00/2020-03-25 22:50:15-04:00/2019-06-29 22:37:53-04:00/2020-02-10 15:57:18-05:00/2019-06-25 09:06:23-04:00/2019-06-25 10:31:03-04:00/,small change in sphinx_doc conf.py
Assembly,artiste-qb-net/qubiter,7adf74304e33192c061adadf229e2a7bdcbe3a20,2016-09-19T22:39:29Z,3b9f07f3d3f04c308396cbd59b8728438e6ef849/c9579b5299552f575540ce6785bd14ef09871465/90f25e58d62d944ccb9830620c08e6013eafd965/,2016-10-07 17:29:15-04:00/2016-10-05 20:33:28-04:00/2016-09-19 19:04:32-04:00/,"Small corrections to notebooks

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,cac39c84ba7739210f77cf43681fe83e08667dd6,2017-11-03T17:03:57Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/835f5338bf4cece21e2a12e865675438be611abe/,2019-06-14 00:22:03-04:00/2019-02-12 10:46:52-05:00/,improved quiver plot
Assembly,artiste-qb-net/qubiter,6f6a55568f5c63e6d70b6b40ee35c31365932a4d,2020-03-26T07:39:10Z,ca7bd48d43cf0085555a750e47144af341e5dc0c/,2020-03-26 04:31:18-04:00/,improved restructured text
Assembly,artiste-qb-net/qubiter,65708d57ce6d237b9ea4a4ee0e5d9685ea6eab97,2019-01-17T06:03:50Z,f72a7ee826838c95df430a91c0937d59721f658d/e592002498517c7e6778bb4d53620ded4507482f/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/e52a576cdc96c8615704c7f7a185fc7b28211f7c/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/462dd426f8b9cc538a45a394147059b4f260adfc/,2019-02-20 23:25:41-05:00/2020-02-12 04:20:12-05:00/2019-01-24 10:47:14-05:00/2019-01-21 01:41:55-05:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-01-18 12:08:15-05:00/2019-03-07 23:14:36-05:00/,Improved translation from Qubiter to PyQuil. Now placeholders are allowed
Assembly,artiste-qb-net/qubiter,4739041114744729f1f3e2bb65893c8d744694a3,2018-08-25T18:28:07Z,2c13bc1633d20dbff080798a2238e67bfc002ada/,2019-06-22 07:42:00-04:00/,added couplings info for IBM 20 qubit chips (Tokyo and Austin)
Assembly,artiste-qb-net/qubiter,832e79fcc624853cbad28c873e2707566a1db241,2019-03-09T06:58:21Z,f6e5181e22a4c93f94393974c72fae8e2fc6af87/bde94c45e8fbf7dd64d8bbf3b693031f4b79d7e2/00c0364b17e989e1c02a5b9a69140eb8cd635e50/f0dbaabcfda8a4fa97e0454b39e7a46cf5d1a08c/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/680aab8c05dceeabc2f324a8070098c74faedee2/1f26b23e9733598351e795594346966e14508351/23c65f402715fd3f866ce3ccf65453be570a105e/,2019-03-21 11:26:43-04:00/2019-04-19 14:04:42-04:00/2019-03-23 05:11:49-04:00/2019-03-23 11:46:02-04:00/2019-03-17 03:02:11-04:00/2019-03-19 14:34:34-04:00/2020-02-10 15:57:18-05:00/2019-04-05 21:10:33-04:00/,Fixed mistake in MeanHamilMinimizer_rigetti.  Now store executable for each term in hamil
Assembly,artiste-qb-net/qubiter,b19eca7aef458795774ac7ea23a60329fa6ab0d1,2017-10-05T19:45:17Z,48b35f24998dcc203e2d263bc7f261c21c996638/,2017-10-05 15:49:23-04:00/,tiny StateVec.is_zero bugs
Assembly,artiste-qb-net/qubiter,8425018c56d3ae7eee62793557599ca0026a9f9a,2019-02-24T01:39:58Z,e592002498517c7e6778bb4d53620ded4507482f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/9c8693c7618d384058fcbf2d62e568231730a755/8303678d60c539aae8aa7480bdb6235898feecd4/462dd426f8b9cc538a45a394147059b4f260adfc/,2020-02-12 04:20:12-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-02-28 02:39:38-05:00/2019-03-04 22:52:08-05:00/2019-03-07 23:14:36-05:00/,Added capacity to translate from Qubiter to Pennylane languages via the class Qubiter_to_PennyLane
Assembly,artiste-qb-net/qubiter,ba104976a02b69545f6817210e01ce55c1444b3b,2019-01-16T22:25:31Z,2c13bc1633d20dbff080798a2238e67bfc002ada/1da4df451007e88b3bd7ad1e9ca860e2ada998ea/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/e52a576cdc96c8615704c7f7a185fc7b28211f7c/,2019-06-22 07:42:00-04:00/2019-01-17 01:10:36-05:00/2019-01-24 10:47:14-05:00/2019-01-21 01:41:55-05:00/,Added herm() method to EngLineList class
Assembly,artiste-qb-net/qubiter,57956f702a87d786ca189ea96289e391431cb9e9,2016-05-22T03:57:14Z,825b2726c8419c3b18fbcd3de95daba53c71c84f/,2016-05-22 01:05:08-04:00/,"Preliminary quantum chemistry. Using phase estimation to find ground state of molecules. Still needs much checking

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,df859e5d6e9e83b1ad88bb3a0678c386b42e5e55,2017-12-30T21:43:20Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/c211ab9a91b13f3377df32ff047258bee3516fac/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/653988f4dce11447c4bdb7c0a7b71a9fe284d445/82ba7982ea591a17bde043a5fd96e02b8dc06d72/,2018-01-27 13:13:48-05:00/2020-03-25 22:50:15-04:00/2019-06-14 12:43:07-04:00/2018-07-23 11:51:04-04:00/2018-07-18 13:13:07-04:00/,fixed bug in ForbiddenCNotExpander.py
Assembly,artiste-qb-net/qubiter,90f25e58d62d944ccb9830620c08e6013eafd965,2016-09-19T23:04:32Z,43df6d68fe473a6d99215fe2022d16dee4a20258/,2019-01-20 19:38:02-05:00/,"encore

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,7234816f78e8c0e212b9449deda2983d35a20dc2,2016-12-01T02:50:12Z,302b4bc475e418632d7506a35ebe3067f4bf572b/7f6045003d313158bcc50f03df9586f0b4356b5b/c6d71f422710934f67aa2ce3e990e757ad721606/e592002498517c7e6778bb4d53620ded4507482f/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/18cb5d389405a767cbbf0796d28ad6f8ad7faf02/7857d8c003a11e4313f8a92333c78b16dd6e83e3/80dd3e96565af6ada7abbff3655fc5adb79360dd/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/49345ae922983e26a71bec893a1ca6b8116e7384/1823d776e502437b816f9ac317f3569bb0bdb23e/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/3de15b1681ff7ebc41038a9c852d676884cb149a/767365c3b030979059c5d21d3aac0e592a8a6041/81954c327e0e49c7994e44b324ced5d06198cb3f/,2017-12-28 10:54:08-05:00/2017-09-27 23:03:03-04:00/2017-01-12 20:54:26-05:00/2020-02-12 04:20:12-05:00/2017-02-04 04:35:12-05:00/2017-03-01 18:17:52-05:00/2017-01-09 12:12:26-05:00/2020-02-08 02:07:48-05:00/2016-12-08 14:14:55-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2016-12-03 22:39:02-05:00/2019-06-16 19:11:59-04:00/2018-07-25 12:31:04-04:00/2019-01-10 22:50:59-05:00/2017-01-02 20:26:44-05:00/2016-12-01 12:13:48-05:00/,"added jupyter notebook illustrating gate expansions

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,b67e7168e0d01471815027aa21e1bb1779ea318f,2017-10-02T23:35:30Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/be9c48a110fedd121a14d7f6bf09f9c85ec6a034/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d83b9b4906534157931fa3224b6bc02f4c5ca307/835f5338bf4cece21e2a12e865675438be611abe/d7ba96c958caa1708ae3ef09d3c84206ccb77316/746481beb350a8193407d9697e886d86fadf919b/17b2b17976a4c68940cedb8ae3ac88e037f1fd29/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/96838359d700b9f114494b01550a9f63145fc53a/,2018-01-27 13:13:48-05:00/2017-10-02 19:51:30-04:00/2020-02-08 02:07:48-05:00/2017-11-01 19:20:46-04:00/2019-02-12 10:46:52-05:00/2019-06-14 00:22:03-04:00/2019-06-29 22:37:53-04:00/2018-11-03 22:28:07-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2017-11-01 17:32:08-04:00/,"Added Jupyter notebook Teleportation-showcasing-IF_M-blocks.ipynb

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,a8a7fdc6b465b6dd608102cc61509a3f5d7e6b2e,2019-02-11T17:54:20Z,c211ab9a91b13f3377df32ff047258bee3516fac/00c0364b17e989e1c02a5b9a69140eb8cd635e50/f6e5181e22a4c93f94393974c72fae8e2fc6af87/835f5338bf4cece21e2a12e865675438be611abe/,2020-03-25 22:50:15-04:00/2019-03-23 05:11:49-04:00/2019-03-21 11:26:43-04:00/2019-02-12 10:46:52-05:00/,improved  docstring of get_mean_value_of_real_diag_mat()
Assembly,artiste-qb-net/qubiter,835f5338bf4cece21e2a12e865675438be611abe,2019-02-12T15:46:52Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-06-14 00:22:03-04:00/,Updated teleportation jupyter notebooks
Assembly,artiste-qb-net/qubiter,a964bff04eb29617d9e5e7c95bff30f255ca4228,2019-06-16T15:36:34Z,80d74b949ccc2433504f98406a341f2193ced119/,2019-06-17 09:27:04+08:00/,License -> BSD License
Assembly,artiste-qb-net/qubiter,a626784995d265620f9864fe5616b239ae350cb5,2019-05-13T03:56:57Z,8e156512fcf09090c899f979d88de4b89c588c7e/,2019-05-13 09:34:16-04:00/,dtype problems
Assembly,artiste-qb-net/qubiter,3de15b1681ff7ebc41038a9c852d676884cb149a,2019-01-11T03:50:59Z,b6897fd4ed82856cedf9d490eaacba372dc01bc2/8d44a2098c29160b09b6e0516371b0b3e7a548ac/e592002498517c7e6778bb4d53620ded4507482f/1186fb02c3fe425419356be82e153b28aa9183c2/348a6a2d4a5ef09d6fb5e24e5e89ec34d69c1cd1/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/a6097e48939df0edae7ee330c93139a59561aa72/9ad069ab0d3837bf9f3fe4c9df7f00b6488eeda2/e52a576cdc96c8615704c7f7a185fc7b28211f7c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/680aab8c05dceeabc2f324a8070098c74faedee2/2c13bc1633d20dbff080798a2238e67bfc002ada/ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd/1f26b23e9733598351e795594346966e14508351/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/8425018c56d3ae7eee62793557599ca0026a9f9a/f76db4edb01a635570bb72656477e99493297f1d/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/,2019-01-15 01:52:37-05:00/2019-05-12 23:23:33-04:00/2020-02-12 04:20:12-05:00/2019-01-16 12:15:09-05:00/2019-01-14 12:21:28-05:00/2019-01-24 10:47:14-05:00/2019-01-10 23:45:04-05:00/2019-01-19 02:05:03-05:00/2019-01-21 01:41:55-05:00/2019-06-14 00:22:03-04:00/2019-03-19 14:34:34-04:00/2019-06-22 07:42:00-04:00/2019-02-24 03:59:37-05:00/2020-02-10 15:57:18-05:00/2019-01-18 12:08:15-05:00/2019-02-23 20:39:58-05:00/2019-01-14 11:33:01-05:00/2019-02-02 13:17:35-05:00/,Added PlaceholderManager class. Updated IBM couplings file
Assembly,artiste-qb-net/qubiter,67cdb562dce12934b420328db1d904d3be662c17,2016-10-16T16:29:03Z,5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/93c9fbcd15c071585a3419da6d33f110ba53adf8/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2017-02-04 04:35:12-05:00/2016-10-16 12:41:32-04:00/2016-10-18 21:26:32-04:00/,"\right> and similar not recognized, back to \rangle

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,bb48a44962733f2fd31ab06d2b91f344a61b941e,2018-07-25T19:57:37Z,2768d5bd775d4206b66e7fd564a8aa0571104c52/,2018-07-28 11:05:33-04:00/,omission
Assembly,artiste-qb-net/qubiter,5930ed939fb60da435d04aea13705c060af28db3,2019-03-07T06:14:38Z,935098785ac910fa9afc483bc42b884bb7d069d2/64e7484d4e60a98d1d415e349299779b3ef491f3/8d44a2098c29160b09b6e0516371b0b3e7a548ac/10eb26b7df1cbe76cdeb382f713de7d59a3ef951/e592002498517c7e6778bb4d53620ded4507482f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/87648659df8eae681fe61ee7911cfefbea506d88/52e90753ead34eace41f4ad363eacb98fc5df9e0/,2019-06-14 11:42:43-04:00/2020-02-09 18:30:30-05:00/2019-05-12 23:23:33-04:00/2019-03-11 10:52:31-04:00/2020-02-12 04:20:12-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-03-08 02:38:10-05:00/2020-03-26 13:20:07-04:00/,"fixed mistake in SWAY. Now depends on only 2 angles, not 4"
Assembly,artiste-qb-net/qubiter,60816eb4fe366e5fe5797b6436b8a2e83ad700de,2017-01-03T20:53:24Z,7f6045003d313158bcc50f03df9586f0b4356b5b/,2017-09-27 23:03:03-04:00/,"enhanced readme

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,a2ee8282279e76e9734bfa4ee42761a294ff965e,2018-01-18T22:15:45Z,7a484f1fc97a285a7b7b905867731314bdb182b9/,2018-01-18 17:24:54-05:00/,latex tools
Assembly,artiste-qb-net/qubiter,483a9a8febf315103db390d14a5076ba13e1b612,2019-05-13T06:23:42Z,09a6d45138aae6467e394a4806cc79de3d8ba8a2/,2019-05-13 02:29:42-04:00/,dtype error
Assembly,artiste-qb-net/qubiter,0a444bcce3f93859dc3ab7850ce5d57fa752e0ef,2016-10-22T21:35:23Z,68729242bd72d4fc11a13c14569e6ddb41d3238f/,2019-06-14 18:33:31-04:00/,render all notebooks in folder
Assembly,artiste-qb-net/qubiter,d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c,2019-02-06T17:15:22Z,350fcc4563e0a60ca1a13820f860f6aba9db48f9/f72a7ee826838c95df430a91c0937d59721f658d/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/680aab8c05dceeabc2f324a8070098c74faedee2/746481beb350a8193407d9697e886d86fadf919b/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/0c3c794456d25c20d097a39376f7df9630490013/edb8f410d25a6b518ad0a580e66b30c74f4beb29/,2019-05-09 19:56:50-04:00/2019-02-20 23:25:41-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-03-19 14:34:34-04:00/2019-06-29 22:37:53-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-02-06 20:12:27-05:00/2019-03-02 16:09:37-05:00/,Improved Hello world jupyter notebook so it shows many more of Qubiter's basic features (like generating and plotting counts)
Assembly,artiste-qb-net/qubiter,1f16e0617b64bd8dd51a13493126755f56825eeb,2017-09-28T04:12:57Z,82ba7982ea591a17bde043a5fd96e02b8dc06d72/ea7af8f133fc1e824a3962ce25ef7637468bb31f/653988f4dce11447c4bdb7c0a7b71a9fe284d445/625cb2e727013891cf9da8a63f1a43600d081a62/,2018-07-18 13:13:07-04:00/2017-12-22 21:23:33-05:00/2018-07-23 11:51:04-04:00/2017-12-17 03:09:10-05:00/,fix translation to qasm notebook
Assembly,artiste-qb-net/qubiter,4a07898b65bd0cb5b547a16553334b12ef29276c,2019-03-08T18:26:47Z,a4d6ff908725b5467bf28b1cbaabf85e51c496df/680aab8c05dceeabc2f324a8070098c74faedee2/78ccc41cf9dc2b5793a1b2cb70749aaa278c7b43/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-03-17 13:20:11-04:00/2019-03-19 14:34:34-04:00/2019-03-19 16:47:16-04:00/2019-06-14 00:22:03-04:00/,Fixed thorny problem with naive minimization. init_st_vec was being overwritten each time simulator was run
Assembly,artiste-qb-net/qubiter,49345ae922983e26a71bec893a1ca6b8116e7384,2016-12-04T03:39:02Z,767365c3b030979059c5d21d3aac0e592a8a6041/acdf608065bb8b80b90c57d4683cdede72f2338c/7f6045003d313158bcc50f03df9586f0b4356b5b/80dd3e96565af6ada7abbff3655fc5adb79360dd/,2017-01-02 20:26:44-05:00/2016-12-04 13:13:44-05:00/2017-09-27 23:03:03-04:00/2016-12-08 14:14:55-05:00/,"fixed mistake in CGateSEO_writer, added get_random_st

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,f6645c2365b584e601e575432f9e0e58e18451dd,2019-03-08T04:44:48Z,1f26b23e9733598351e795594346966e14508351/2aedf9b0d2180ba698bf14f278b794d583c6bd52/e592002498517c7e6778bb4d53620ded4507482f/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2020-02-10 15:57:18-05:00/2019-03-07 23:50:27-05:00/2020-02-12 04:20:12-05:00/2019-06-14 00:22:03-04:00/,Changed name of function write_controlled_bit_swap(). This broke a lot of notebooks. Changing it back to original
Assembly,artiste-qb-net/qubiter,00c0364b17e989e1c02a5b9a69140eb8cd635e50,2019-03-23T09:11:49Z,dcf87233179b58206b26c8906a752c26ced2c0ec/23c65f402715fd3f866ce3ccf65453be570a105e/1f26b23e9733598351e795594346966e14508351/f0dbaabcfda8a4fa97e0454b39e7a46cf5d1a08c/,2019-06-16 01:43:35-04:00/2019-04-05 21:10:33-04:00/2020-02-10 15:57:18-05:00/2019-03-23 11:46:02-04:00/,"Made MeanHamilMinimizer_rigetti so that for num_samples=0, it returns exact mean value calculated with WavefunctionSimulator"
Assembly,artiste-qb-net/qubiter,23c65f402715fd3f866ce3ccf65453be570a105e,2019-04-06T01:10:33Z,bde94c45e8fbf7dd64d8bbf3b693031f4b79d7e2/6193697f831f62be4fd6245cc2c8be2eb1533807/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/6f6a55568f5c63e6d70b6b40ee35c31365932a4d/d906751c3d058c84900b918440ac8fdfdd4a9552/,2019-04-19 14:04:42-04:00/2019-04-21 21:21:08-04:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-05-11 18:44:26-04:00/2020-03-26 03:39:10-04:00/2019-05-13 16:38:20-04:00/,"Drastically refactored MeanHamilMinimizer related classes and updated related notebooks. Same stuff, but split into a better, more granular class structure into which it is easier to plug-in the upcoming PyTorch and TensorFlow back prop enhancement"
Assembly,artiste-qb-net/qubiter,995d1c0aa2f91cafa0714c41a56461ec0332b9a2,2017-12-23T07:06:12Z,82ba7982ea591a17bde043a5fd96e02b8dc06d72/,2018-07-18 13:13:07-04:00/,fixed indentation
Assembly,artiste-qb-net/qubiter,705a21f97c15711764b754a00aff6ddb78ac93ee,2017-12-26T17:41:35Z,302b4bc475e418632d7506a35ebe3067f4bf572b/33048fd17e72008231c9d6d49e02dcd3ff8d670f/f6e5181e22a4c93f94393974c72fae8e2fc6af87/,2017-12-28 10:54:08-05:00/2018-01-27 13:13:48-05:00/2019-03-21 11:26:43-04:00/,added util_OpenFermion.py
Assembly,artiste-qb-net/qubiter,45f419f4ad593b52624c613745b761079cd18d14,2019-07-01T07:01:31Z,52d79baee6b826f25f00d65a9040cec5306f3ee3/,2019-07-02 09:40:59-04:00/,typo
Assembly,artiste-qb-net/qubiter,efd62fcd78effc0bf2cc29028eebc28b9e41b27c,2016-10-19T01:26:32Z,7f6045003d313158bcc50f03df9586f0b4356b5b/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/d7ba96c958caa1708ae3ef09d3c84206ccb77316/746481beb350a8193407d9697e886d86fadf919b/1f342f44618a09d2dfe15aa4c4070e120ced2154/2529df08ef36db01b4971a3025f658aaab138320/767365c3b030979059c5d21d3aac0e592a8a6041/81954c327e0e49c7994e44b324ced5d06198cb3f/,2017-09-27 23:03:03-04:00/2017-03-01 18:17:52-05:00/2019-06-14 00:22:03-04:00/2019-06-29 22:37:53-04:00/2016-10-18 23:13:54-04:00/2016-10-18 22:09:09-04:00/2017-01-02 20:26:44-05:00/2016-12-01 12:13:48-05:00/,"Learned how to put \newcommand in  jupyter notebooks. Added probs to pp_array

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,3217fffe9317f19637e9cdceb88ec172f988a188,2016-10-22T21:15:27Z,0a444bcce3f93859dc3ab7850ce5d57fa752e0ef/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/,2016-10-22 17:35:23-04:00/2017-02-04 04:35:12-05:00/,Readme with links that render notebooks properly
Assembly,artiste-qb-net/qubiter,75388f67d5666dd74791f47ebf9201121685869a,2017-10-01T00:00:34Z,935098785ac910fa9afc483bc42b884bb7d069d2/302b4bc475e418632d7506a35ebe3067f4bf572b/33048fd17e72008231c9d6d49e02dcd3ff8d670f/e592002498517c7e6778bb4d53620ded4507482f/f002ed4ebc8e1db6ffc4c0bba23496c72c26cc21/36b162ea4689b66ebc50c58dc21eea828367b9ad/680aab8c05dceeabc2f324a8070098c74faedee2/351a1a934d58567465e5a026f9671621613e8956/b19eca7aef458795774ac7ea23a60329fa6ab0d1/7857d8c003a11e4313f8a92333c78b16dd6e83e3/17b2b17976a4c68940cedb8ae3ac88e037f1fd29/b6897fd4ed82856cedf9d490eaacba372dc01bc2/69fcc45cc71f6c7af9eb52f6f106b705bb81f8be/f851d219f1cbb6ab60f170659dc57a6af08bb9ec/d7ba96c958caa1708ae3ef09d3c84206ccb77316/746481beb350a8193407d9697e886d86fadf919b/2c13bc1633d20dbff080798a2238e67bfc002ada/1f26b23e9733598351e795594346966e14508351/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/6f6a55568f5c63e6d70b6b40ee35c31365932a4d/a35ed49ac6fa1d00e9c03726f265539469cbd4e6/4ad435d3f67800a8744a326f089ffa98ce8b6060/2887c6c1dc802599d54ba9db31af7fc1c9d0bb10/b67e7168e0d01471815027aa21e1bb1779ea318f/c211ab9a91b13f3377df32ff047258bee3516fac/dcf87233179b58206b26c8906a752c26ced2c0ec/8f806abdfe360feaef7ed0c011742b6ddf3d69aa/0c3c794456d25c20d097a39376f7df9630490013/,2019-06-14 11:42:43-04:00/2017-12-28 10:54:08-05:00/2018-01-27 13:13:48-05:00/2020-02-12 04:20:12-05:00/2019-01-14 15:37:15-05:00/2020-01-17 22:56:34-05:00/2019-03-19 14:34:34-04:00/2018-01-26 00:12:24-05:00/2017-10-05 15:45:17-04:00/2020-02-08 02:07:48-05:00/2018-11-03 22:28:07-04:00/2019-01-15 01:52:37-05:00/2018-01-25 19:28:57-05:00/2019-01-14 22:08:51-05:00/2019-06-14 00:22:03-04:00/2019-06-29 22:37:53-04:00/2019-06-22 07:42:00-04:00/2020-02-10 15:57:18-05:00/2019-02-06 12:15:22-05:00/2018-07-25 12:31:04-04:00/2020-03-26 03:39:10-04:00/2017-12-22 13:55:48-05:00/2018-07-29 15:14:25-04:00/2019-02-11 12:33:35-05:00/2017-10-02 19:35:30-04:00/2020-03-25 22:50:15-04:00/2019-06-16 01:43:35-04:00/2019-02-13 11:23:31-05:00/2019-02-06 20:12:27-05:00/,"gave StateVec class a constructor

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,afc92b2be659b81fee69da6c3bb8286692eb2775,2018-01-26T03:10:06Z,351a1a934d58567465e5a026f9671621613e8956/22dfc34794bb14781bfe2666d91db95a226f8973/b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/1186fb02c3fe425419356be82e153b28aa9183c2/,2018-01-26 00:12:24-05:00/2018-01-26 21:34:47-05:00/2019-01-18 12:08:15-05:00/2019-01-16 12:15:09-05:00/,Qubiter_to_IBMqasm2.py now comments out global phases when translating English to IBM qasm
Assembly,artiste-qb-net/qubiter,b0e0cd7ea5ad3e46f433673a2e79655a83e730d7,2019-05-11T22:44:26Z,8d44a2098c29160b09b6e0516371b0b3e7a548ac/0ad841410a14973b847c3e8dec89b8831c2a9f6d/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/d906751c3d058c84900b918440ac8fdfdd4a9552/,2019-05-12 23:23:33-04:00/2019-05-11 19:07:31-04:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-05-13 16:38:20-04:00/,fixing TensorFlow simulator so it can tape properly
Assembly,artiste-qb-net/qubiter,b6540b04224feb0ab68cbeb6d153a41d0a94efb5,2016-10-08T04:31:10Z,70df0a76bfec9b5735684b173d16ea1760cd6c84/86721215ea820925ee9e040a8bdb952424980dc1/e592002498517c7e6778bb4d53620ded4507482f/72b344dca4e67c179194d19b526f0ae65035da60/,2016-10-17 00:44:31-04:00/2016-10-16 11:48:50-04:00/2020-02-12 04:20:12-05:00/2016-10-08 01:07:11-04:00/,"typos phase_est_iterative notebook

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,a6097e48939df0edae7ee330c93139a59561aa72,2019-01-11T04:45:04Z,1186fb02c3fe425419356be82e153b28aa9183c2/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/c6d35761925a423b9899b992c26b02d01b2f70f2/ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/0c3c794456d25c20d097a39376f7df9630490013/,2019-01-16 12:15:09-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-02-06 17:39:05-05:00/2019-02-24 03:59:37-05:00/2019-05-11 18:44:26-04:00/2019-02-06 20:12:27-05:00/,"minor changes, reran each class to check for bugs"
Assembly,artiste-qb-net/qubiter,91e09ce449d0f59266cbda5068a53281649ee521,2019-01-21T00:39:22Z,7857d8c003a11e4313f8a92333c78b16dd6e83e3/37ff0a56cf94741546fd9073454795cd9e41bfa8/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/,2020-02-08 02:07:48-05:00/2019-02-04 15:05:09-05:00/2019-02-06 12:15:22-05:00/,new txt files in io_folder
Assembly,artiste-qb-net/qubiter,903888afa63867315376fb8942cb487271ecd3ce,2019-04-26T06:02:44Z,e592002498517c7e6778bb4d53620ded4507482f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/7b638592fff90412f91b1cdef0c44915e562cecf/,2020-02-12 04:20:12-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-06-14 12:43:07-04:00/2019-05-07 22:20:36-04:00/,added jupyter notebook Stairs_ckt_its_gradients_in_rigetti.ipynb
Assembly,artiste-qb-net/qubiter,f6e5181e22a4c93f94393974c72fae8e2fc6af87,2019-03-21T15:26:43Z,3947c630165a4bcd9c0e452b3bb170573fadef7d/e592002498517c7e6778bb4d53620ded4507482f/00c0364b17e989e1c02a5b9a69140eb8cd635e50/f0dbaabcfda8a4fa97e0454b39e7a46cf5d1a08c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/b37065e324e8d578e3a7409b6793bc2b03b1703b/23c65f402715fd3f866ce3ccf65453be570a105e/b0e0cd7ea5ad3e46f433673a2e79655a83e730d7/79532f7a9ab1a7131ce5523173ef28c99b5f409a/d906751c3d058c84900b918440ac8fdfdd4a9552/9f9065d88f07b2c7a333ac847df336262a56a006/,2019-05-10 20:38:29-04:00/2020-02-12 04:20:12-05:00/2019-03-23 05:11:49-04:00/2019-03-23 11:46:02-04:00/2019-06-14 00:22:03-04:00/2019-05-09 21:34:09-04:00/2019-04-05 21:10:33-04:00/2019-05-11 18:44:26-04:00/2019-03-21 15:40:27-04:00/2019-05-13 16:38:20-04:00/2019-05-10 20:22:40-04:00/,Finally finished enabling qubiter to use Autograd (the original one). First stable? installment of that update
Assembly,artiste-qb-net/qubiter,be9c48a110fedd121a14d7f6bf09f9c85ec6a034,2017-10-02T23:51:30Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-06-14 00:22:03-04:00/,TYPOS
Assembly,artiste-qb-net/qubiter,0e5db32edcb057eda013c9eb46bb6e12569d393d,2018-08-01T00:15:50Z,dcf87233179b58206b26c8906a752c26ced2c0ec/7857d8c003a11e4313f8a92333c78b16dd6e83e3/3de15b1681ff7ebc41038a9c852d676884cb149a/1f26b23e9733598351e795594346966e14508351/,2019-06-16 01:43:35-04:00/2020-02-08 02:07:48-05:00/2019-01-10 22:50:59-05:00/2020-02-10 15:57:18-05:00/,Added examples to main() of SEO_reader and EchoingSEO_reader classes
Assembly,artiste-qb-net/qubiter,2aedf9b0d2180ba698bf14f278b794d583c6bd52,2019-03-08T04:50:27Z,e592002498517c7e6778bb4d53620ded4507482f/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2020-02-12 04:20:12-05:00/2019-06-14 00:22:03-04:00/,swa_ back to swap
Assembly,artiste-qb-net/qubiter,81f01862d4d4ee29aae5304fada9a15d7f5e65f7,2016-09-19T20:55:54Z,3b9f07f3d3f04c308396cbd59b8728438e6ef849/33048fd17e72008231c9d6d49e02dcd3ff8d670f/7adf74304e33192c061adadf229e2a7bdcbe3a20/84daafc0e9529187861334000fd7bff4dee99d4b/86721215ea820925ee9e040a8bdb952424980dc1/2529df08ef36db01b4971a3025f658aaab138320/37ff0a56cf94741546fd9073454795cd9e41bfa8/74b95731c68ca3148728e6a4c6da84ef3e7894ee/178bead999d17d3e115d2a873e7617945f1021e6/7857d8c003a11e4313f8a92333c78b16dd6e83e3/bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/8267ed5b9ff55daad0281e8327182bb95e0f3c1d/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/43df6d68fe473a6d99215fe2022d16dee4a20258/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/3de15b1681ff7ebc41038a9c852d676884cb149a/f72a7ee826838c95df430a91c0937d59721f658d/7f6045003d313158bcc50f03df9586f0b4356b5b/4a07898b65bd0cb5b547a16553334b12ef29276c/d36f63bfcf91bb9ded9ce0eab3ae4f5a8026b428/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/4ad435d3f67800a8744a326f089ffa98ce8b6060/c9579b5299552f575540ce6785bd14ef09871465/90f25e58d62d944ccb9830620c08e6013eafd965/dcf87233179b58206b26c8906a752c26ced2c0ec/edb8f410d25a6b518ad0a580e66b30c74f4beb29/81954c327e0e49c7994e44b324ced5d06198cb3f/,2016-10-07 17:29:15-04:00/2018-01-27 13:13:48-05:00/2016-09-19 18:39:29-04:00/2016-10-07 17:58:36-04:00/2016-10-16 11:48:50-04:00/2016-10-18 22:09:09-04:00/2019-02-04 15:05:09-05:00/2016-09-19 18:52:06-04:00/2016-11-30 13:43:00-05:00/2020-02-08 02:07:48-05:00/2017-01-30 15:54:33-05:00/2017-03-01 18:17:52-05:00/2017-10-07 18:11:45-04:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-01-20 19:38:02-05:00/2019-02-06 12:15:22-05:00/2019-01-10 22:50:59-05:00/2019-02-20 23:25:41-05:00/2017-09-27 23:03:03-04:00/2019-03-08 13:26:47-05:00/2016-10-07 19:06:01-04:00/2017-02-04 04:35:12-05:00/2018-07-29 15:14:25-04:00/2016-10-05 20:33:28-04:00/2016-09-19 19:04:32-04:00/2019-06-16 01:43:35-04:00/2019-03-02 16:09:37-05:00/2016-12-01 12:13:48-05:00/,"Added jupyter notebooks folder with two notebooks, Hello World and Teleportation

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,0e776e68767e914ca59dcef6d56a182b9c887e0c,2017-01-03T05:37:52Z,bb8a69a93294577eef294b4e1fa32118bfd1360c/1d81eefba78f3086e5ed5f19054734c08d10cff2/9154931e312f18cbef660c0de0ebd1988fb878a7/,2017-01-03 11:09:10-05:00/2017-01-03 11:09:10-05:00/2017-01-04 14:28:18-05:00/,csd testing script
Assembly,artiste-qb-net/qubiter,6193697f831f62be4fd6245cc2c8be2eb1533807,2019-04-22T01:21:08Z,350fcc4563e0a60ca1a13820f860f6aba9db48f9/e592002498517c7e6778bb4d53620ded4507482f/903888afa63867315376fb8942cb487271ecd3ce/2baf8c81c04433fe8a114b27b0689d45f8060b91/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/2c13bc1633d20dbff080798a2238e67bfc002ada/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/52e90753ead34eace41f4ad363eacb98fc5df9e0/,2019-05-09 19:56:50-04:00/2020-02-12 04:20:12-05:00/2019-04-26 02:02:44-04:00/2019-04-23 22:46:38-04:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2019-06-22 07:42:00-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2020-03-26 13:20:07-04:00/,"Major addition, pdf paper and py code for threaded evaluation of gradients of quantum cost functions."
Assembly,artiste-qb-net/qubiter,f5a26411f40021c8791c59ea255111952a0cd30d,2019-05-13T14:07:43Z,d722286550932208ffe076fda2f01dd193776373/,2019-05-13 11:44:28-04:00/,"OneBitGates, casting problems"
Assembly,artiste-qb-net/qubiter,b0ae96bcd2efa2894775025681f84749e544aa27,2019-07-03T01:19:11Z,84741d9032edf57886e745d0200753a12357bd61/,2019-07-04 08:22:03-04:00/,minor wording change
Assembly,artiste-qb-net/qubiter,3ae9d833d81bcc87e46aa3d45e7a45f85494c746,2018-01-09T03:56:26Z,1f26b23e9733598351e795594346966e14508351/33048fd17e72008231c9d6d49e02dcd3ff8d670f/82ba7982ea591a17bde043a5fd96e02b8dc06d72/4e1bd5bc3fd990972e5c206066a4a85bf254e641/,2020-02-10 15:57:18-05:00/2018-01-27 13:13:48-05:00/2018-07-18 13:13:07-04:00/2018-01-18 01:45:55-05:00/,Added drawing function to class ChipCouplingsFitter
Assembly,artiste-qb-net/qubiter,c211ab9a91b13f3377df32ff047258bee3516fac,2020-03-26T02:50:15Z,6f6a55568f5c63e6d70b6b40ee35c31365932a4d/bacd67de9ea7cd7813405b71919ef06285832f46/12529baaf36c6f72b24ed2e42f6b8aaa0d34f7a2/ca7bd48d43cf0085555a750e47144af341e5dc0c/,2020-03-26 03:39:10-04:00/2020-04-06 11:06:39-04:00/2020-03-25 22:55:16-04:00/2020-03-26 04:31:18-04:00/,did some docstring editing
Assembly,artiste-qb-net/qubiter,9ff47c757e1f0b00250e830dbe5f8aa0f48318ad,2019-03-07T14:10:36Z,3278b874283927de2de08727e4b11caec895dfe8/,2019-04-13 11:10:15-04:00/,Significant improvement to EngFileLineList. Now one liners don't use temporary files
Assembly,artiste-qb-net/qubiter,a6d0847429f5e071d25410b2e342d819210f8b09,2019-05-10T03:10:49Z,bb6f2a7eae8d06db8276aa873cae842c12c1200c/,2019-05-09 23:21:05-04:00/,fixing SEO_simulator_tf
Assembly,artiste-qb-net/qubiter,dcf87233179b58206b26c8906a752c26ced2c0ec,2019-06-16T05:43:35Z,36b162ea4689b66ebc50c58dc21eea828367b9ad/a964bff04eb29617d9e5e7c95bff30f255ca4228/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d5a537badb7d058dbcaba8d1fccb0e4831a77666/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/2c13bc1633d20dbff080798a2238e67bfc002ada/1823d776e502437b816f9ac317f3569bb0bdb23e/3ef61e86c843d4346fa4fbdbe1a1d9562b77aefc/,2020-01-17 22:56:34-05:00/2019-06-16 23:36:34+08:00/2020-02-08 02:07:48-05:00/2019-06-16 01:49:51-04:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/2019-06-22 07:42:00-04:00/2019-06-16 19:11:59-04:00/2019-06-16 01:54:40-04:00/,"Switched to file_prefixes being paths relative to directory containing the .git file (for example, qubiter/utilities_gen.py) instead of relative to the current working  directory.  I was tacitly assuming that the cwd and the directory with the .git file were the always the same."
Assembly,artiste-qb-net/qubiter,1823d776e502437b816f9ac317f3569bb0bdb23e,2019-06-16T23:11:59Z,f816aded2826341fd6927ea96d8717a7da0d607c/36b162ea4689b66ebc50c58dc21eea828367b9ad/7857d8c003a11e4313f8a92333c78b16dd6e83e3/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/,2019-07-02 12:26:52-04:00/2020-01-17 22:56:34-05:00/2020-02-08 02:07:48-05:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/,fixed problem with paths that contain folder names with blank spaces
Assembly,artiste-qb-net/qubiter,f64af562327fa85e3f208c8be09f2d35b001c0ec,2019-03-06T02:43:02Z,f816aded2826341fd6927ea96d8717a7da0d607c/e592002498517c7e6778bb4d53620ded4507482f/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/87648659df8eae681fe61ee7911cfefbea506d88/5930ed939fb60da435d04aea13705c060af28db3/,2019-07-02 12:26:52-04:00/2020-02-12 04:20:12-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-03-08 02:38:10-05:00/2019-03-07 01:14:38-05:00/,Added more commentary to jupyter notebook on SWAY gate
Assembly,artiste-qb-net/qubiter,42b630398bb64eee1fedee2d00e157aa89fe7e66,2019-02-03T08:25:59Z,1f26b23e9733598351e795594346966e14508351/7857d8c003a11e4313f8a92333c78b16dd6e83e3/e592002498517c7e6778bb4d53620ded4507482f/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2020-02-10 15:57:18-05:00/2020-02-08 02:07:48-05:00/2020-02-12 04:20:12-05:00/2019-06-14 00:22:03-04:00/,Added jupyter notebook illustrating use of loop files at English file level
Assembly,artiste-qb-net/qubiter,a9a515295fc5ec138b5bdc8e3a5d3756db8a35dd,2019-03-17T07:12:59Z,680aab8c05dceeabc2f324a8070098c74faedee2/,2019-03-19 14:34:34-04:00/,prank
Assembly,artiste-qb-net/qubiter,91f643a57ad26f224e391e48c8872f96504ee14f,2019-02-22T05:32:35Z,4a07898b65bd0cb5b547a16553334b12ef29276c/a4d6ff908725b5467bf28b1cbaabf85e51c496df/00c0364b17e989e1c02a5b9a69140eb8cd635e50/680aab8c05dceeabc2f324a8070098c74faedee2/78ccc41cf9dc2b5793a1b2cb70749aaa278c7b43/462dd426f8b9cc538a45a394147059b4f260adfc/,2019-03-08 13:26:47-05:00/2019-03-17 13:20:11-04:00/2019-03-23 05:11:49-04:00/2019-03-19 14:34:34-04:00/2019-03-19 16:47:16-04:00/2019-03-07 23:14:36-05:00/,corrected some erroneous statements about different optimization methods. Added use of conjugate gradient to jupyter notebook about MeanHamilMinimizer_naive
Assembly,artiste-qb-net/qubiter,e07ecbe4b8ffc6818c4eceab70a3458b98af67a4,2019-03-21T22:48:30Z,00c0364b17e989e1c02a5b9a69140eb8cd635e50/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-03-23 05:11:49-04:00/2019-06-14 00:22:03-04:00/,typo
Assembly,artiste-qb-net/qubiter,bd114103fa2f20cbc7a01963a90e53ce60efb9a7,2016-10-17T04:52:59Z,7f6045003d313158bcc50f03df9586f0b4356b5b/e592002498517c7e6778bb4d53620ded4507482f/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/2992f0558f5e58430fb08a533fdd7a71e1558cf5/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/75388f67d5666dd74791f47ebf9201121685869a/1823d776e502437b816f9ac317f3569bb0bdb23e/2529df08ef36db01b4971a3025f658aaab138320/81954c327e0e49c7994e44b324ced5d06198cb3f/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2017-09-27 23:03:03-04:00/2020-02-12 04:20:12-05:00/2017-02-04 04:35:12-05:00/2017-03-01 18:17:52-05:00/2016-10-17 00:59:13-04:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2017-09-30 20:00:34-04:00/2019-06-16 19:11:59-04:00/2016-10-18 22:09:09-04:00/2016-12-01 12:13:48-05:00/2016-10-18 21:26:32-04:00/,"adding ghz notebook again

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,f0e7198f3099f4810338254b40a4885e444a45f2,2016-03-22T05:38:37Z,7f6045003d313158bcc50f03df9586f0b4356b5b/a3b27689640e5fce74a6ad3f7a993901219061bb/c73470e305a50486e171dfe7d48a4bd08fee24a0/0e1e9d6d685a7839a94e88efd2aacdbb98151167/d7ba96c958caa1708ae3ef09d3c84206ccb77316/c3f937972c610644c00b7934f5b0f26116bce310/767365c3b030979059c5d21d3aac0e592a8a6041/37a33e1553f4a0cfe7ae27a2ca32a277bd9da199/,2017-09-27 23:03:03-04:00/2016-03-29 11:36:49-04:00/2016-06-24 15:39:21-04:00/2016-10-08 00:56:13-04:00/2019-06-14 00:22:03-04:00/2016-06-17 14:48:02-04:00/2017-01-02 20:26:44-05:00/2016-03-29 11:36:49-04:00/,Passes all current tests. Even MEAS steps seem to work.
Assembly,artiste-qb-net/qubiter,c57d07f6f778454e511c5d5f1d33ff816745dd02,2018-01-19T21:16:31Z,17b2b17976a4c68940cedb8ae3ac88e037f1fd29/,2018-11-03 22:28:07-04:00/,small improvement of docstrings of AsciiPic_to_Latex
Assembly,artiste-qb-net/qubiter,3947c630165a4bcd9c0e452b3bb170573fadef7d,2019-05-11T00:38:29Z,c211ab9a91b13f3377df32ff047258bee3516fac/,2020-03-25 22:50:15-04:00/,fixing tensorflow simulator so it can tape properly
Assembly,artiste-qb-net/qubiter,eb3c94eafb761e6ddf34ce354647fa1d851bb791,2019-03-14T01:33:47Z,f816aded2826341fd6927ea96d8717a7da0d607c/a4d6ff908725b5467bf28b1cbaabf85e51c496df/d7ba96c958caa1708ae3ef09d3c84206ccb77316/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/680aab8c05dceeabc2f324a8070098c74faedee2/23c65f402715fd3f866ce3ccf65453be570a105e/,2019-07-02 12:26:52-04:00/2019-03-17 13:20:11-04:00/2019-06-14 00:22:03-04:00/2019-03-17 03:02:11-04:00/2019-03-19 14:34:34-04:00/2019-04-05 21:10:33-04:00/,improved autograd_experiments notebook
Assembly,artiste-qb-net/qubiter,2baf8c81c04433fe8a114b27b0689d45f8060b91,2019-04-24T02:46:38Z,1f26b23e9733598351e795594346966e14508351/7857d8c003a11e4313f8a92333c78b16dd6e83e3/e592002498517c7e6778bb4d53620ded4507482f/d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2020-02-10 15:57:18-05:00/2020-02-08 02:07:48-05:00/2020-02-12 04:20:12-05:00/2019-06-14 00:22:03-04:00/,Added jupyter notebook illustrating multi-threaded gradients. Stairs_circuit_and_its_gradients_in_native.ipynb
Assembly,artiste-qb-net/qubiter,7857d8c003a11e4313f8a92333c78b16dd6e83e3,2020-02-08T07:07:48Z,64e7484d4e60a98d1d415e349299779b3ef491f3/6563c05945bcbe81a250816936ccd9e55993dcbc/e592002498517c7e6778bb4d53620ded4507482f/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/705dca87dae19555ca3920b936d9f9d8b81674df/52e90753ead34eace41f4ad363eacb98fc5df9e0/bacd67de9ea7cd7813405b71919ef06285832f46/,2020-02-09 18:30:30-05:00/2020-02-18 15:15:05-05:00/2020-02-12 04:20:12-05:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/2020-02-16 00:33:43-05:00/2020-03-26 13:20:07-04:00/2020-04-06 11:06:39-04:00/,now print_pic_file() and print_eng_file() can output html table
Assembly,artiste-qb-net/qubiter,3cc7ae7d83bc93f676b79aa0700dc68895f78566,2019-06-15T17:34:05Z,dcf87233179b58206b26c8906a752c26ced2c0ec/c211ab9a91b13f3377df32ff047258bee3516fac/1f26b23e9733598351e795594346966e14508351/,2019-06-16 01:43:35-04:00/2020-03-25 22:50:15-04:00/2020-02-10 15:57:18-05:00/,"added utility methods for paths to English, Picture and log files"
Assembly,artiste-qb-net/qubiter,79532f7a9ab1a7131ce5523173ef28c99b5f409a,2019-03-21T19:40:27Z,e592002498517c7e6778bb4d53620ded4507482f/36b162ea4689b66ebc50c58dc21eea828367b9ad/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/1f26b23e9733598351e795594346966e14508351/7b9de1f0fee1a72c699c563f3c2aa75942d2982a/e07ecbe4b8ffc6818c4eceab70a3458b98af67a4/23c65f402715fd3f866ce3ccf65453be570a105e/1823d776e502437b816f9ac317f3569bb0bdb23e/d906751c3d058c84900b918440ac8fdfdd4a9552/,2020-02-12 04:20:12-05:00/2020-01-17 22:56:34-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2020-02-10 15:57:18-05:00/2019-06-14 12:43:07-04:00/2019-03-21 18:48:30-04:00/2019-04-05 21:10:33-04:00/2019-06-16 19:11:59-04:00/2019-05-13 16:38:20-04:00/,Second installment of MeanHamilMinimizer with scipy and autograd
Assembly,artiste-qb-net/qubiter,302b4bc475e418632d7506a35ebe3067f4bf572b,2017-12-28T15:54:08Z,33048fd17e72008231c9d6d49e02dcd3ff8d670f/f6e5181e22a4c93f94393974c72fae8e2fc6af87/d7ba96c958caa1708ae3ef09d3c84206ccb77316/dcf87233179b58206b26c8906a752c26ced2c0ec/82ba7982ea591a17bde043a5fd96e02b8dc06d72/1823d776e502437b816f9ac317f3569bb0bdb23e/b4ed73b14e2efd6bd05f1e44989c3d8113b7ec2b/,2018-01-27 13:13:48-05:00/2019-03-21 11:26:43-04:00/2019-06-14 00:22:03-04:00/2019-06-16 01:43:35-04:00/2018-07-18 13:13:07-04:00/2019-06-16 19:11:59-04:00/2018-07-25 12:31:04-04:00/,Changed name of class CktExpander to CGateExpander
Assembly,artiste-qb-net/qubiter,ea7af8f133fc1e824a3962ce25ef7637468bb31f,2017-12-23T02:23:33Z,2768d5bd775d4206b66e7fd564a8aa0571104c52/302b4bc475e418632d7506a35ebe3067f4bf572b/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/653988f4dce11447c4bdb7c0a7b71a9fe284d445/82ba7982ea591a17bde043a5fd96e02b8dc06d72/df859e5d6e9e83b1ad88bb3a0678c386b42e5e55/3de15b1681ff7ebc41038a9c852d676884cb149a/,2018-07-28 11:05:33-04:00/2017-12-28 10:54:08-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2018-07-23 11:51:04-04:00/2018-07-18 13:13:07-04:00/2017-12-30 16:43:20-05:00/2019-01-10 22:50:59-05:00/,"added 2 new jupyter notebooks (on forbidden cnots and qubiter2ibm translation) and deleted old
translator notebook that only worked for 5 qubit ibmqx2 chip"
Assembly,artiste-qb-net/qubiter,2529df08ef36db01b4971a3025f658aaab138320,2016-10-19T02:09:09Z,4ad435d3f67800a8744a326f089ffa98ce8b6060/4a07898b65bd0cb5b547a16553334b12ef29276c/a6144f2ec16999ffc49628d18143c520f475d70a/,2018-07-29 15:14:25-04:00/2019-03-08 13:26:47-05:00/2019-01-19 00:24:34-05:00/,"continue having problems with dirac bra-ket notation in mathjax

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,18cb5d389405a767cbbf0796d28ad6f8ad7faf02,2017-01-09T17:12:26Z,7f6045003d313158bcc50f03df9586f0b4356b5b/c6d71f422710934f67aa2ce3e990e757ad721606/e592002498517c7e6778bb4d53620ded4507482f/ca7bd48d43cf0085555a750e47144af341e5dc0c/7857d8c003a11e4313f8a92333c78b16dd6e83e3/c211ab9a91b13f3377df32ff047258bee3516fac/ea5b23ec810aacd8a5e31aba9f659fa2ba8ad4dd/,2017-09-27 23:03:03-04:00/2017-01-12 20:54:26-05:00/2020-02-12 04:20:12-05:00/2020-03-26 04:31:18-04:00/2020-02-08 02:07:48-05:00/2020-03-25 22:50:15-04:00/2019-02-24 03:59:37-05:00/,"Fixed small bug. Was using H n H = nbar which is wrong. Now using sigx n sigx = nbar

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,f816aded2826341fd6927ea96d8717a7da0d607c,2019-07-02T16:26:52Z,6563c05945bcbe81a250816936ccd9e55993dcbc/84741d9032edf57886e745d0200753a12357bd61/7857d8c003a11e4313f8a92333c78b16dd6e83e3/b0ae96bcd2efa2894775025681f84749e544aa27/aa7c4f352947554dc85cb0df12c7a9cdc5afae5c/bacd67de9ea7cd7813405b71919ef06285832f46/,2020-02-18 15:15:05-05:00/2019-07-04 08:22:03-04:00/2020-02-08 02:07:48-05:00/2019-07-02 21:19:11-04:00/2019-07-03 13:25:12-04:00/2020-04-06 11:06:39-04:00/,"Added new jupyter notebook called SUMMARY.ipynb that automatically generates a ""summary"" of all the others"
Assembly,artiste-qb-net/qubiter,9c8693c7618d384058fcbf2d62e568231730a755,2019-02-28T07:39:38Z,d7ba96c958caa1708ae3ef09d3c84206ccb77316/,2019-06-14 00:22:03-04:00/,fixed small bug. def of rot() was not printing inside qnode in some cases
Assembly,artiste-qb-net/qubiter,4c29aa247e5f76063ff14ee89c07bef369664acf,2017-12-23T20:46:41Z,b6c7121b3f8327275a7e04a5f186ea01ad9ce5b4/,2019-01-18 12:08:15-05:00/,fixed small bug
Assembly,artiste-qb-net/qubiter,aa7c4f352947554dc85cb0df12c7a9cdc5afae5c,2019-07-03T17:25:12Z,7857d8c003a11e4313f8a92333c78b16dd6e83e3/,2020-02-08 02:07:48-05:00/,added enumeration to SUMMARY.ipynb
Assembly,artiste-qb-net/qubiter,86721215ea820925ee9e040a8bdb952424980dc1,2016-10-16T15:48:50Z,7f6045003d313158bcc50f03df9586f0b4356b5b/e592002498517c7e6778bb4d53620ded4507482f/178bead999d17d3e115d2a873e7617945f1021e6/5f5a15e6bbfce9a06a13fc04078f9d5e0acbb02f/70df0a76bfec9b5735684b173d16ea1760cd6c84/67cdb562dce12934b420328db1d904d3be662c17/9bb7aa54eb9e5b59227318c3ea7cce6ac9bbbbce/4ad435d3f67800a8744a326f089ffa98ce8b6060/1823d776e502437b816f9ac317f3569bb0bdb23e/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/75388f67d5666dd74791f47ebf9201121685869a/8f806abdfe360feaef7ed0c011742b6ddf3d69aa/bc3e6ef369aff654cb7f0c85e9a9c8cd6910d0f7/d906751c3d058c84900b918440ac8fdfdd4a9552/81954c327e0e49c7994e44b324ced5d06198cb3f/efd62fcd78effc0bf2cc29028eebc28b9e41b27c/,2017-09-27 23:03:03-04:00/2020-02-12 04:20:12-05:00/2016-11-30 13:43:00-05:00/2017-02-04 04:35:12-05:00/2016-10-17 00:44:31-04:00/2016-10-16 12:29:03-04:00/2017-03-01 18:17:52-05:00/2018-07-29 15:14:25-04:00/2019-06-16 19:11:59-04:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2017-09-30 20:00:34-04:00/2019-02-13 11:23:31-05:00/2017-01-30 15:54:33-05:00/2019-05-13 16:38:20-04:00/2016-12-01 12:13:48-05:00/2016-10-18 21:26:32-04:00/,"Added jupyter notebook for Bell and CHSH inequalities

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,723d834b7b0c34a86ce146862d92b69d5f937ff1,2017-03-01T19:01:48Z,a369b8df5941949f88bc775a05f705a4fe326477/,2017-09-27 23:52:24-04:00/,was printing doctring from old version of class
Assembly,artiste-qb-net/qubiter,bb6f2a7eae8d06db8276aa873cae842c12c1200c,2019-05-10T03:21:05Z,9f9065d88f07b2c7a333ac847df336262a56a006/,2019-05-10 20:22:40-04:00/,fixing SEO_simulator_tf
Assembly,artiste-qb-net/qubiter,10eb26b7df1cbe76cdeb382f713de7d59a3ef951,2019-03-11T14:52:31Z,f816aded2826341fd6927ea96d8717a7da0d607c/88c490eccaf4bacdfb992d1e6e865c639c73b0ba/d7ba96c958caa1708ae3ef09d3c84206ccb77316/a5bffe5b4ff2eb6d11fe27b6ac6c9120edb28d2c/fa5a19bd15544e4ea93bde427b0dec9053b3f835/eb3c94eafb761e6ddf34ce354647fa1d851bb791/52e90753ead34eace41f4ad363eacb98fc5df9e0/,2019-07-02 12:26:52-04:00/2019-03-11 11:04:40-04:00/2019-06-14 00:22:03-04:00/2019-03-17 03:02:11-04:00/2019-03-11 11:01:11-04:00/2019-03-13 21:33:47-04:00/2020-03-26 13:20:07-04:00/,Added notebook called autograd_experiments
Assembly,artiste-qb-net/qubiter,5cb914036e1a3e60eab67194a23b110b0982fca7,2019-03-25T01:19:52Z,c491ecd846a675afd19fe4072ee98e25d9809815/,2019-03-30 12:19:24-04:00/,Added Five Easy Pieces note (in pdf)
Assembly,artiste-qb-net/qubiter,f5bdf3c53db3674f681ef3aa3fa8f4e1b5e622d8,2019-02-05T17:34:51Z,f72a7ee826838c95df430a91c0937d59721f658d/7857d8c003a11e4313f8a92333c78b16dd6e83e3/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/c211ab9a91b13f3377df32ff047258bee3516fac/d3eaa1108b28bf9c792e28c9af24545d6cd3ae6c/0c3c794456d25c20d097a39376f7df9630490013/,2019-02-20 23:25:41-05:00/2020-02-08 02:07:48-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2020-03-25 22:50:15-04:00/2019-02-06 12:15:22-05:00/2019-02-06 20:12:27-05:00/,Fixed mistake in Cz angle.
Assembly,artiste-qb-net/qubiter,aed0c52c5892bd988611cd02d7a970313ede11d0,2019-01-12T01:32:41Z,935098785ac910fa9afc483bc42b884bb7d069d2/a1ff81d5cec51d1c42230b8b24a0e125fa377f3c/d7ba96c958caa1708ae3ef09d3c84206ccb77316/1f26b23e9733598351e795594346966e14508351/18c13a733f09180c18dfca55e336d8f520224cd9/f76db4edb01a635570bb72656477e99493297f1d/edb8f410d25a6b518ad0a580e66b30c74f4beb29/ab4d18787bc5ad65cd95732f2d4503b3056d20cf/,2019-06-14 11:42:43-04:00/2019-01-24 10:47:14-05:00/2019-06-14 00:22:03-04:00/2020-02-10 15:57:18-05:00/2019-01-19 00:12:11-05:00/2019-01-14 11:33:01-05:00/2019-03-02 16:09:37-05:00/2019-02-02 13:17:35-05:00/,Added Jupyter notebook illustrating use of PlaceholderManager
Assembly,artiste-qb-net/qubiter,15208359199a8f5b429b7588f29348d7e685d871,2019-06-25T13:06:23Z,746481beb350a8193407d9697e886d86fadf919b/2324c729c4e2067dc80b712ea558ded18779b44a/e592002498517c7e6778bb4d53620ded4507482f/522ce0752fffcd10033b81642be9fa95e4c68320/,2019-06-29 22:37:53-04:00/2019-06-28 01:47:10-04:00/2020-02-12 04:20:12-05:00/2019-06-25 10:31:03-04:00/,I applied new tricks that I learned about links in restructured.
Assembly,artiste-qb-net/qubiter,69c9f311dbaf406d5a0a977939e79b79eeb94af5,2019-05-11T23:13:14Z,36b162ea4689b66ebc50c58dc21eea828367b9ad/,2020-01-17 22:56:34-05:00/,fixing tensorflow simulator
Assembly,artiste-qb-net/qubiter,6f8dbbdc0af50d1f4fbf119b2632587fb388e697,2017-01-13T02:07:57Z,1f26b23e9733598351e795594346966e14508351/,2020-02-10 15:57:18-05:00/,"slight docstring correction

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,86facaed0d36096a243b2c75b53343b9b1302cfa,2016-12-01T04:54:03Z,935098785ac910fa9afc483bc42b884bb7d069d2/7f6045003d313158bcc50f03df9586f0b4356b5b/73fff7d024953aee575b264a243d2b7b31babc2a/75388f67d5666dd74791f47ebf9201121685869a/767365c3b030979059c5d21d3aac0e592a8a6041/8303678d60c539aae8aa7480bdb6235898feecd4/,2019-06-14 11:42:43-04:00/2017-09-27 23:03:03-04:00/2017-07-27 18:22:38-04:00/2017-09-30 20:00:34-04:00/2017-01-02 20:26:44-05:00/2019-03-04 22:52:08-05:00/,"replaced picture and english file examples from png to pdf/tex

Signed-off-by: rrtucci <tucci@ar-tiste.com>"
Assembly,artiste-qb-net/qubiter,b37065e324e8d578e3a7409b6793bc2b03b1703b,2019-05-10T01:34:09Z,3947c630165a4bcd9c0e452b3bb170573fadef7d/,2019-05-10 20:38:29-04:00/,fixing SEO_simulator_tf
Assembly,BBN-Q/QGL.jl,485b1c23988fba9720e164de732e4b8b1ec4a702,2017-01-04T02:11:30Z,6c9ff08b9d20fb41ee7c914f44ff19116c33e8b0/4c951f58022c9889bf42a3ddc02074a27cf5a4e4/,2017-01-23 20:36:10-05:00/2017-01-16 21:20:51-05:00/,proper Julia package
Assembly,BBN-Q/QGL.jl,9f8ab3f3cc57204d88200181ab5913ce59e53c05,2017-02-17T15:34:31Z,728a65b0525435f3ab2bd0f4a341fe989e017b29/,2017-04-03 10:07:03-04:00/,Insert AbstractPulse above Pulse and ZPulse.
Assembly,BBN-Q/QGL.jl,d1ce942524e467af8aa1b33e5780ac987a3abf44,2016-11-03T15:26:59Z,5a2aee7ba95cfe488fcd5ed640701fc6807ce26e/,2016-11-04 12:18:12-04:00/,:bug: multiply not divide by DAC_CLOCK in marker length calculation
Assembly,BBN-Q/QGL.jl,f79e60f4bbcb23f8b99c9e41a8a284a30859624d,2016-11-09T15:59:10Z,4c951f58022c9889bf42a3ddc02074a27cf5a4e4/7e22ccec931e41a8e8b7b753f0e510af22f4806e/,2017-01-16 21:20:51-05:00/2016-11-27 22:33:29-05:00/,clean-up default values for Pulses
Assembly,BBN-Q/QGL.jl,625be1ca460bef5303e26c9037dea5ef45cab444,2017-01-20T01:15:05Z,208c37e7f2a18be5b6686a4224e24c39905f1b17/,2018-04-18 11:01:53-04:00/,make cfg folder if necessary in testing
Assembly,BBN-Q/QGL.jl,5a2aee7ba95cfe488fcd5ed640701fc6807ce26e,2016-11-04T16:18:12Z,cdf834dafc8bda879f341bfa5aec49749bf2004d/d463952b7d61f51aafe8db35cf9564cf7a48b2cd/4c951f58022c9889bf42a3ddc02074a27cf5a4e4/85dee5b80fbd99de8553e571d989a6bacf29f5a1/652b0c529614e8e50152f25572d1abb4d39d45c8/ed0d4d36236140d0e44133c2c79c934ea1c8cce7/e0db97aabc0ddd258f8985bac6a74c166c96de90/d42a5a2d739d56a0bde83c3b82d9a7808f8ad9ec/,2016-12-15 22:22:35-05:00/2016-11-07 21:37:20-05:00/2017-01-16 21:20:51-05:00/2018-04-17 17:03:38-04:00/2017-02-23 20:44:56-05:00/2016-12-20 23:50:13-05:00/2016-12-19 19:31:34-05:00/2016-12-09 17:14:48-05:00/,get bundling to AWGs working
Assembly,BBN-Q/QGL.jl,6cf6a5ca52d0c1baea879379b7d1aa11d4a18248,2016-11-02T21:30:48Z,cdf834dafc8bda879f341bfa5aec49749bf2004d/85dee5b80fbd99de8553e571d989a6bacf29f5a1/9f409c87eb0f0f4555417acd4e86f385319fe87b/ed95befaa3d4095141ec0f2fe473044be6d755dc/5a2aee7ba95cfe488fcd5ed640701fc6807ce26e/313385995aaf51a253b7383f9caf4fc271cfd0c4/d8249bf72d9fe5c55e03aa2c0c84ce0e887cd3e6/,2016-12-15 22:22:35-05:00/2018-04-17 17:03:38-04:00/2016-11-08 12:46:15-05:00/2016-11-08 17:19:45-05:00/2016-11-04 12:18:12-04:00/2016-11-03 12:48:00-04:00/2016-11-23 15:16:13-05:00/,:tada: get all the way to H5 file that plots
Assembly,BBN-Q/QGL.jl,85d937d77076870dcee311eadccf5a0e74d4c517,2016-11-28T03:02:05Z,b4cb74710d8c8e4ebb77b83199f0385ad8da287a/,2017-01-26 11:32:22-05:00/,elide zero length Pulses
Assembly,BBN-Q/QGL.jl,44fe56556362d203c8a5dcf6a592b5356f0a2b9e,2017-02-23T19:00:37Z,85dee5b80fbd99de8553e571d989a6bacf29f5a1/9264ca7022710e8aa13de729989331deb14286af/0c45cc6a665bda64897567f80cd4b150b8152aca/208c37e7f2a18be5b6686a4224e24c39905f1b17/32438393e83921f27e67f6befac18cc51892010b/4f121f989b3fe1535736649a252d0abecf02f08f/,2018-04-17 17:03:38-04:00/2017-02-23 20:42:43-05:00/2018-04-17 15:59:13-04:00/2018-04-18 11:01:53-04:00/2017-02-23 20:44:28-05:00/2017-04-03 10:06:44-04:00/,consolidate config from JSON files into a module
Assembly,BBN-Q/QGL.jl,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69,2017-01-16T01:24:35Z,0c45cc6a665bda64897567f80cd4b150b8152aca/a574046c88cec9c64b5ee0ab658184292b438772/a99ab039c415443957833be7ab322d0a572b4fc3/e12307061f9749f677bdc8ff9bff3fc1af7d4d83/,2018-04-17 15:59:13-04:00/2017-01-16 21:42:41-05:00/2017-04-03 10:33:58-04:00/2017-02-16 10:32:24-05:00/,drop python QGL dependency in pulses
Assembly,BBN-Q/QGL.jl,4a37f65d2d0e7dbd73aa6917722c4437113a50e3,2016-11-09T15:46:07Z,64267a8199efef7cee0563f9a8149da37baa5a59/,2017-01-26 20:45:29-05:00/,:bug: need to apply paddings in pulseblock handling
Assembly,BBN-Q/QGL.jl,d42a5a2d739d56a0bde83c3b82d9a7808f8ad9ec,2016-12-09T22:14:48Z,4c951f58022c9889bf42a3ddc02074a27cf5a4e4/,2017-01-16 21:20:51-05:00/,handle channel delays
Assembly,BBN-Q/QGL.jl,6b29dd37771b2a30edd048488383f3b18637b000,2017-01-24T13:58:12Z,6c7db882b6dca47cee971191d75dc76a7f5d23a9/,2017-02-13 16:48:32-05:00/,:bug: amplitude is built into arb_axis_drag pulse shape
Assembly,BBN-Q/QGL.jl,0c45cc6a665bda64897567f80cd4b150b8152aca,2018-04-17T19:59:13Z,988698abb573d56e9afaea1aa08e3bdfda39de92/85dee5b80fbd99de8553e571d989a6bacf29f5a1/70e66d76f2e5f518ff2d8b78bc93b65779182c9f/,2018-04-18 17:25:44-04:00/2018-04-17 17:03:38-04:00/2018-04-27 09:47:20-04:00/,Read config from yaml
Assembly,BBN-Q/QGL.jl,b6f3ceee5c23e05e6df71469315c4c87aae71a0b,2016-12-09T22:10:57Z,e26357bcbe2f887add9d4f9e6d35e7c9ee576fdc/,2017-01-26 17:03:52-05:00/,add license info to README
Assembly,BBN-Q/QGL.jl,9345ab28e7826897753dd38084e63bbd1cc50428,2016-11-29T20:22:52Z,ce578b6e87defc4b6f001f40bbfca79009973838/3ad0821304ca5a06496e84d43ab35d8fec87936f/,2016-11-29 17:14:02-05:00/2016-11-29 18:22:15-05:00/,"Define U90, Utheta"
Assembly,BBN-Q/QGL.jl,d55874ab3506ced27472519a74ba1bfae364baf9,2016-12-15T20:37:04Z,61e32af95fbadfb5d00e2c986c0432708f4f6815/,2016-12-20 15:22:46-05:00/,Inject modulate for edges
Assembly,BBN-Q/QGL.jl,f31bf68b2b2048a4027115c22e9389609508df65,2016-11-09T14:48:38Z,e0db97aabc0ddd258f8985bac6a74c166c96de90/9b99967c8c9ada761fda4fc31f9c6a84fcf52a62/,2016-12-19 19:31:34-05:00/2016-12-20 14:30:33-05:00/,:bug: fix modulation sign
Assembly,BBN-Q/QGL.jl,e375cd8c691aa6be065a78358580701dc052cb8f,2016-11-28T03:20:44Z,c628972e0e5f48ded83b4284dc82c093789fa023/e26357bcbe2f887add9d4f9e6d35e7c9ee576fdc/b6f3ceee5c23e05e6df71469315c4c87aae71a0b/c386880d12a88bff5969977dab7049c00d965053/0e2091bfecb8c53463df594b77682cdabb16f539/,2017-01-15 20:22:47-05:00/2017-01-26 17:03:52-05:00/2016-12-09 17:10:57-05:00/2017-02-07 16:19:20-05:00/2016-12-09 17:10:10-05:00/,:memo: note some basic benchmark times so there aren't any horrible regressions
Assembly,BBN-Q/QGL.jl,da2ffd33f6987a5e83c1589dd4f4c24bf47b63bf,2016-12-14T15:41:36Z,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/,2017-01-15 20:24:35-05:00/,Fix merge conflict for Pulse method
Assembly,BBN-Q/QGL.jl,e0db97aabc0ddd258f8985bac6a74c166c96de90,2016-12-20T00:31:34Z,0ce0038a452d324643d17b77f9a4d24c2b8d7500/85dee5b80fbd99de8553e571d989a6bacf29f5a1/9b99967c8c9ada761fda4fc31f9c6a84fcf52a62/ed0d4d36236140d0e44133c2c79c934ea1c8cce7/,2016-12-21 22:04:16-05:00/2018-04-17 17:03:38-04:00/2016-12-20 14:30:33-05:00/2016-12-20 23:50:13-05:00/,Work towards 2 NCOs/channel
Assembly,BBN-Q/QGL.jl,8fbbee606021380aaf1e21ac033aaa32fafab943,2017-01-26T16:34:41Z,64267a8199efef7cee0563f9a8149da37baa5a59/,2017-01-26 20:45:29-05:00/,:racehorse: elide noop pulses when pushing a single pulse onto a PulseBlock
Assembly,BBN-Q/QGL.jl,0e2091bfecb8c53463df594b77682cdabb16f539,2016-12-09T22:10:10Z,e26357bcbe2f887add9d4f9e6d35e7c9ee576fdc/,2017-01-26 17:03:52-05:00/,Update README with prehashed Pulses speed increase
Assembly,BBN-Q/QGL.jl,cdf834dafc8bda879f341bfa5aec49749bf2004d,2016-12-16T03:22:35Z,e0db97aabc0ddd258f8985bac6a74c166c96de90/ed0d4d36236140d0e44133c2c79c934ea1c8cce7/,2016-12-19 19:31:34-05:00/2016-12-20 23:50:13-05:00/,handle marker only APS2
Assembly,BBN-Q/QGL.jl,7e22ccec931e41a8e8b7b753f0e510af22f4806e,2016-11-28T03:33:29Z,ce578b6e87defc4b6f001f40bbfca79009973838/1a8f3e9cddd6106f49ea65288695e8705b612a1d/,2016-11-29 17:14:02-05:00/2016-12-01 12:00:51-05:00/,"use concrete bitstypes for Pulse,ZPulse fields"
Assembly,BBN-Q/QGL.jl,54c27bae989f71c35d92c660be6fd92bb520befb,2016-11-30T14:34:03Z,df1423af800c678acb2c1279e3f6f97e31e3b9d6/,2016-12-21 23:34:43-05:00/,:bug: Swapped length and amp parameters
Assembly,BBN-Q/QGL.jl,4bd9e231e27f8087efaf4950cab30e6f6ad9a4ab,2016-10-31T18:32:44Z,b00ad0645b518b14b9c6d261557c70f54b0097e0/44c26e4e414757b899917f75d33ca1ae86894beb/78c96b404b628b1f5d8f8031b5196215bab03a39/b567f9159eeb10815732d2ff55add9d749987fe1/01b8b733b279aa637fdb76a2aca909d4d016d94a/5a2aee7ba95cfe488fcd5ed640701fc6807ce26e/3ecfd03a7763e14939d4e2573ac90f1a17a05a5e/f79e60f4bbcb23f8b99c9e41a8a284a30859624d/9f8ab3f3cc57204d88200181ab5913ce59e53c05/93ee28d8455c8ef9e315477b4ede3f44783afe41/d463952b7d61f51aafe8db35cf9564cf7a48b2cd/61ab2d0ad61812d3423063aeb8482a77d06d21ad/068054ff42095ee2e1fdcc8b53c765a632117087/26477eeae70d1b4ec34c0d2979a050a9029e7c1d/64267a8199efef7cee0563f9a8149da37baa5a59/3e450fd5ac19788fbf969f95e6bad110947b04fa/7e22ccec931e41a8e8b7b753f0e510af22f4806e/6cf6a5ca52d0c1baea879379b7d1aa11d4a18248/2759c8105fa305cbd295846e19718999994ba9f0/85dee5b80fbd99de8553e571d989a6bacf29f5a1/1a8f3e9cddd6106f49ea65288695e8705b612a1d/903242bd6e286bc860e66d04502dd6d7b7e12df5/eb8d005cde6243643a2301a293ffc74cc8b64765/7807f2a1148d485dcf0a36d06e60f4aae09dda4b/5654a5d7c690752cb6f0cc0d4eb73b5157a9cbd9/acdf503b4e2051da803ef70dcfb26e6c14f85a63/,2017-01-15 20:24:11-05:00/2016-12-02 11:09:34-05:00/2016-11-02 17:30:29-04:00/2017-02-23 09:16:39-05:00/2016-11-09 10:59:26-05:00/2016-11-04 12:18:12-04:00/2016-11-27 22:28:48-05:00/2016-11-09 10:59:10-05:00/2017-02-17 10:34:31-05:00/2016-11-01 16:07:50-04:00/2016-11-07 21:37:20-05:00/2017-02-17 10:06:49-05:00/2016-11-01 15:03:15-04:00/2016-12-16 14:25:26-05:00/2017-01-26 20:45:29-05:00/2016-11-23 16:29:34-05:00/2016-11-27 22:33:29-05:00/2016-11-02 17:30:48-04:00/2016-11-23 14:53:57-05:00/2018-04-17 17:03:38-04:00/2016-12-01 12:00:51-05:00/2016-11-01 15:02:59-04:00/2017-02-17 10:06:19-05:00/2016-11-02 15:52:40-04:00/2016-11-23 14:16:27-05:00/2016-12-09 17:14:08-05:00/,:construction: work on Julia compiler
Assembly,BBN-Q/QGL.jl,652b0c529614e8e50152f25572d1abb4d39d45c8,2017-02-24T01:44:56Z,85dee5b80fbd99de8553e571d989a6bacf29f5a1/,2018-04-17 17:03:38-04:00/,:bug: use add AWG delays on top of channel delays
Assembly,BBN-Q/QGL.jl,241ee9b4534409ab8062375038fdaa2baab04025,2017-01-24T02:21:35Z,6b29dd37771b2a30edd048488383f3b18637b000/,2017-01-24 08:58:12-05:00/,:bug: ↑ is parsed as a binary operator
Assembly,BBN-Q/QGL.jl,73ad17f790ef3a1690f112e5ad3530c51d9bda80,2017-07-20T17:08:24Z,7c4b5ff4f449f2d69315a5c61341c4a862be887d/b09eb3d76c53186ed67b9ff1860d07bbedffbbf5/2e0a41745f35c1e5e36eaa192d0f591c9339c1fa/,2018-04-18 16:17:32-04:00/2017-07-20 16:59:10-04:00/2017-07-20 13:21:13-04:00/,"Deal with Z rotations on shared channels

Z rotations have zero length, so they can't be dealt by incrementing the
timestamp"
Assembly,BBN-Q/QGL.jl,df9fc11d30895f1009bfdbd29792a86f656d83dc,2017-02-21T19:56:20Z,44fe56556362d203c8a5dcf6a592b5356f0a2b9e/,2017-02-23 14:00:37-05:00/,:floppy_disk: Default sequence path
Assembly,BBN-Q/QGL.jl,903242bd6e286bc860e66d04502dd6d7b7e12df5,2016-11-01T19:02:59Z,d463952b7d61f51aafe8db35cf9564cf7a48b2cd/f49be2affd0117f3035c1694a0c453e2f4f49450/,2016-11-07 21:37:20-05:00/2017-01-20 15:28:00-05:00/,:bug: typos
Assembly,BBN-Q/QGL.jl,d64860d512449ecb82565e7ffc2edf9bfa21c2ee,2016-11-30T00:28:25Z,54c27bae989f71c35d92c660be6fd92bb520befb/29b15e4e9de8a9fa743ff707e23e4fae2d31f973/88ed7e995df7c86414e60ba69809820a20817a2b/,2016-11-30 09:34:03-05:00/2016-12-22 11:19:49-05:00/2018-04-18 16:16:58-04:00/,Return ZX90 as a single pulse Block
Assembly,BBN-Q/QGL.jl,3ad0821304ca5a06496e84d43ab35d8fec87936f,2016-11-29T23:22:15Z,d64860d512449ecb82565e7ffc2edf9bfa21c2ee/b00ad0645b518b14b9c6d261557c70f54b0097e0/b4d1a1d9fe877f182aed599fe02a5cbafa3f9716/565b3598803f371491f02cb45e01e520481acab7/,2016-11-29 19:28:25-05:00/2017-01-15 20:24:11-05:00/2016-12-22 11:37:25-05:00/2016-11-29 18:53:32-05:00/,First pass for ZX90
Assembly,BBN-Q/QGL.jl,32438393e83921f27e67f6befac18cc51892010b,2017-02-24T01:44:28Z,208c37e7f2a18be5b6686a4224e24c39905f1b17/0c45cc6a665bda64897567f80cd4b150b8152aca/4f121f989b3fe1535736649a252d0abecf02f08f/,2018-04-18 11:01:53-04:00/2018-04-17 15:59:13-04:00/2017-04-03 10:06:44-04:00/,refactor sequence_file_dir -> sequence_file_path
Assembly,BBN-Q/QGL.jl,645a96adff5bcc1f55b69a389348a21caf14c400,2016-12-20T20:24:39Z,7c4b5ff4f449f2d69315a5c61341c4a862be887d/,2018-04-18 16:17:32-04:00/,Fix end of entry condition (part 2)
Assembly,BBN-Q/QGL.jl,f87d1aca6fcd8f7c385c34f55d14087102f2fe86,2016-11-29T19:02:39Z,3ad0821304ca5a06496e84d43ab35d8fec87936f/b00ad0645b518b14b9c6d261557c70f54b0097e0/,2016-11-29 18:22:15-05:00/2017-01-15 20:24:11-05:00/,Define edges and call pyQGL.EdgeFactory
Assembly,BBN-Q/QGL.jl,ff78f52cff4d79b4e709a8e0ca6f61c68448720c,2016-11-03T15:38:27Z,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/,2017-01-15 20:24:35-05:00/,:bug: need to inject pulse length into shape calculation
Assembly,BBN-Q/QGL.jl,0f29a4e0afa822f037e5b86888aefccdeab40adf,2017-01-24T15:20:30Z,6c7db882b6dca47cee971191d75dc76a7f5d23a9/,2017-02-13 16:48:32-05:00/,Renamed angles
Assembly,BBN-Q/QGL.jl,ed95befaa3d4095141ec0f2fe473044be6d755dc,2016-11-08T22:19:45Z,cdf834dafc8bda879f341bfa5aec49749bf2004d/f77374adc90edf6bde7f32b41ed429259a73aec5/61e32af95fbadfb5d00e2c986c0432708f4f6815/9b99967c8c9ada761fda4fc31f9c6a84fcf52a62/645a96adff5bcc1f55b69a389348a21caf14c400/,2016-12-15 22:22:35-05:00/2016-12-09 17:13:02-05:00/2016-12-20 15:22:46-05:00/2016-12-20 14:30:33-05:00/2016-12-20 15:24:39-05:00/,:racehorse: replace dictionaries with arrays
Assembly,BBN-Q/QGL.jl,f5e603fec548470c5a8871b226211611694b6e62,2016-12-21T17:09:36Z,8ccbbace6270a994ede58d2dc538f4f14bfaa26f/296bce71aed39ca5ad21067032dc3b47fa828b7b/,2016-12-21 18:04:07-05:00/2016-12-21 23:17:44-05:00/,"Add meas_block to cals

--DR"
Assembly,BBN-Q/QGL.jl,8ccbbace6270a994ede58d2dc538f4f14bfaa26f,2016-12-21T23:04:07Z,296bce71aed39ca5ad21067032dc3b47fa828b7b/,2016-12-21 23:17:44-05:00/,Inverted MSB-LSB
Assembly,BBN-Q/QGL.jl,208c37e7f2a18be5b6686a4224e24c39905f1b17,2018-04-18T15:01:53Z,e02e2dfe6afab902f5fb74e79d05fe0f0638ef2f/,2018-04-18 11:47:11-04:00/,Basic config for tests
Assembly,BBN-Q/QGL.jl,69b8d3311393c8de0661c77400de34a391020e57,2017-01-24T02:03:15Z,6b1f70f8c4b9d0a5c6ff6e10221f312310ff81c9/241ee9b4534409ab8062375038fdaa2baab04025/045111eccd04d2a18be40504346686ee132b7aec/,2017-01-23 21:09:36-05:00/2017-01-23 21:21:35-05:00/2017-04-03 10:30:04-04:00/,:art: stylistic tweaks to AC pulses
Assembly,BBN-Q/QGL.jl,b4cb74710d8c8e4ebb77b83199f0385ad8da287a,2017-01-26T16:32:22Z,64267a8199efef7cee0563f9a8149da37baa5a59/,2017-01-26 20:45:29-05:00/,":racehorse: elide zero angle Z rotations

improves DiAC benchmark by a few percent"
Assembly,BBN-Q/QGL.jl,313385995aaf51a253b7383f9caf4fc271cfd0c4,2016-11-03T16:48:00Z,ed0d4d36236140d0e44133c2c79c934ea1c8cce7/,2016-12-20 23:50:13-05:00/,:bug: need complex type for waveforms
Assembly,BBN-Q/QGL.jl,4f121f989b3fe1535736649a252d0abecf02f08f,2017-04-03T14:06:44Z,0c45cc6a665bda64897567f80cd4b150b8152aca/,2018-04-17 15:59:13-04:00/,Default fallbacks for empty keys in config.json
Assembly,BBN-Q/QGL.jl,565b3598803f371491f02cb45e01e520481acab7,2016-11-29T23:53:32Z,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/d64860d512449ecb82565e7ffc2edf9bfa21c2ee/,2017-01-15 20:24:35-05:00/2016-11-29 19:28:25-05:00/,"Optional pulse length

plus fixed editor sneaky capital \theta"
Assembly,BBN-Q/QGL.jl,ece8d9f9844d6ca1c15cc975d4c8e9d4802ce26a,2016-12-22T03:33:09Z,296bce71aed39ca5ad21067032dc3b47fa828b7b/,2016-12-21 23:17:44-05:00/,drop Iterators dependency in favour of Base.product
Assembly,BBN-Q/QGL.jl,296bce71aed39ca5ad21067032dc3b47fa828b7b,2016-12-22T04:17:44Z,f0758c117086495153e21dcb2cb280bc71f17ef8/,2016-12-22 16:33:17-05:00/,tweak iterators in sequence helper array comprehensions
Assembly,BBN-Q/QGL.jl,df6666866e93e6162a0372e7b7ce841e76742420,2016-11-01T20:08:05Z,6cf6a5ca52d0c1baea879379b7d1aa11d4a18248/d463952b7d61f51aafe8db35cf9564cf7a48b2cd/ed95befaa3d4095141ec0f2fe473044be6d755dc/df1423af800c678acb2c1279e3f6f97e31e3b9d6/5a2aee7ba95cfe488fcd5ed640701fc6807ce26e/7807f2a1148d485dcf0a36d06e60f4aae09dda4b/7f181f8ec8e24c9636e94581b7b62d439ca78ee9/,2016-11-02 17:30:48-04:00/2016-11-07 21:37:20-05:00/2016-11-08 17:19:45-05:00/2016-12-21 23:34:43-05:00/2016-11-04 12:18:12-04:00/2016-11-02 15:52:40-04:00/2017-02-17 11:45:00-05:00/,:construction: work on APS2 translator
Assembly,BBN-Q/QGL.jl,61e32af95fbadfb5d00e2c986c0432708f4f6815,2016-12-20T20:22:46Z,7c4b5ff4f449f2d69315a5c61341c4a862be887d/b09eb3d76c53186ed67b9ff1860d07bbedffbbf5/460fa552c66d05afb5ecc919555b82ca2b778be4/645a96adff5bcc1f55b69a389348a21caf14c400/,2018-04-18 16:17:32-04:00/2017-07-20 16:59:10-04:00/2016-12-20 23:24:39-05:00/2016-12-20 15:24:39-05:00/,Fix end of entry condition
Assembly,BBN-Q/QGL.jl,c84a0e75193fe895abf64fc293f5ab4b43237a06,2016-11-20T23:58:30Z,e1f8d56180b103743357cee6d71cacab42274654/9345ab28e7826897753dd38084e63bbd1cc50428/cad1ec22f7b3c7075e932912c8ddb28d2466399e/,2016-11-23 14:00:10-05:00/2016-11-29 15:22:52-05:00/2016-11-23 13:53:26-05:00/,"DiAC pulses

It might be better to make them composite pulses?"
Assembly,BBN-Q/QGL.jl,b00ad0645b518b14b9c6d261557c70f54b0097e0,2017-01-16T01:24:11Z,7fa54db9aaabde2a8e8cdcf22a35be53225423d4/f50ec88049b1eea9ad204e7af16cd2fc15633134/44fe56556362d203c8a5dcf6a592b5356f0a2b9e/85dee5b80fbd99de8553e571d989a6bacf29f5a1/0c45cc6a665bda64897567f80cd4b150b8152aca/f5c42fb026b30553ba887cb76f58df85f3c354bb/,2017-01-18 21:42:46-05:00/2017-01-16 21:47:53-05:00/2017-02-23 14:00:37-05:00/2018-04-17 17:03:38-04:00/2018-04-17 15:59:13-04:00/2017-01-20 16:50:47-05:00/,drop python QGL dependency in channel creation
Assembly,BBN-Q/QGL.jl,da2caf0e6bce1585778b558e5c750b54d984a312,2016-12-21T16:54:27Z,ece8d9f9844d6ca1c15cc975d4c8e9d4802ce26a/5239b153a9e3b6c4de395ad07737db3fa4426c24/d435743992d05d1727be281142adf1bf6762ef17/366e9f2e2f8a9b7f8dc3534278361e2bf3fecf9b/f5e603fec548470c5a8871b226211611694b6e62/8ccbbace6270a994ede58d2dc538f4f14bfaa26f/2c2f2b57d6fe83b446466726824143f524605e9a/296bce71aed39ca5ad21067032dc3b47fa828b7b/,2016-12-21 22:33:09-05:00/2016-12-21 22:28:05-05:00/2016-12-21 22:36:55-05:00/2016-12-21 23:31:26-05:00/2016-12-21 12:09:36-05:00/2016-12-21 18:04:07-05:00/2016-12-21 11:56:33-05:00/2016-12-21 23:17:44-05:00/,"Tomo and helper sequences

--DR"
Assembly,BBN-Q/QGL.jl,2eb9f33f63c41cea7902f7a02969871788245d0e,2016-12-15T16:37:16Z,4c951f58022c9889bf42a3ddc02074a27cf5a4e4/9f8ab3f3cc57204d88200181ab5913ce59e53c05/64dabf238d241d39f3890d7792b8d59ba3b8d61a/,2017-01-16 21:20:51-05:00/2017-02-17 10:34:31-05:00/2016-12-16 14:03:50-05:00/,"Propagate frame change to edges

Update CR frame with Z pulses on target"
Assembly,BBN-Q/QGL.jl,d435743992d05d1727be281142adf1bf6762ef17,2016-12-22T03:36:55Z,296bce71aed39ca5ad21067032dc3b47fa828b7b/,2016-12-21 23:17:44-05:00/,"drop ""create_"" from function names"
Assembly,BBN-Q/QGL.jl,29b15e4e9de8a9fa743ff707e23e4fae2d31f973,2016-12-22T16:19:49Z,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/,2017-01-15 20:24:35-05:00/,Pi phase shift on 2nd CR pulse
Assembly,BBN-Q/QGL.jl,5239b153a9e3b6c4de395ad07737db3fa4426c24,2016-12-22T03:28:05Z,296bce71aed39ca5ad21067032dc3b47fa828b7b/d435743992d05d1727be281142adf1bf6762ef17/,2016-12-21 23:17:44-05:00/2016-12-21 22:36:55-05:00/,refactor num_repeats and num_pulses to keyword arguments
Assembly,BBN-Q/QGL.jl,df1423af800c678acb2c1279e3f6f97e31e3b9d6,2016-12-22T04:34:43Z,29b15e4e9de8a9fa743ff707e23e4fae2d31f973/,2016-12-22 11:19:49-05:00/,"Consistent definition of phase

Unit of 2pi"
Assembly,BBN-Q/QGL.jl,1a8f3e9cddd6106f49ea65288695e8705b612a1d,2016-12-01T17:00:51Z,da2ffd33f6987a5e83c1589dd4f4c24bf47b63bf/07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/,2016-12-14 10:41:36-05:00/2017-01-15 20:24:35-05:00/,"equality testing for pulses

along with precomputing hashes it runs ~ 20% faster"
Assembly,BBN-Q/QGL.jl,fe348e86590feb36d1bb1a0538557a1606281d9e,2017-01-19T02:10:36Z,7fa54db9aaabde2a8e8cdcf22a35be53225423d4/208c37e7f2a18be5b6686a4224e24c39905f1b17/,2017-01-18 21:42:46-05:00/2018-04-18 11:01:53-04:00/,:white_check_mark: setup travis CI and codecov
Assembly,BBN-Q/QGL.jl,d463952b7d61f51aafe8db35cf9564cf7a48b2cd,2016-11-08T02:37:20Z,f87d1aca6fcd8f7c385c34f55d14087102f2fe86/6403ac15a7e3ffcfe78a0d6ccf927f2708304842/fc0a13f4c3fd9b67f420f13a2e9de649fe4eaff9/ed95befaa3d4095141ec0f2fe473044be6d755dc/1a8f3e9cddd6106f49ea65288695e8705b612a1d/f31bf68b2b2048a4027115c22e9389609508df65/d55874ab3506ced27472519a74ba1bfae364baf9/9b99967c8c9ada761fda4fc31f9c6a84fcf52a62/0ce0038a452d324643d17b77f9a4d24c2b8d7500/64267a8199efef7cee0563f9a8149da37baa5a59/01b8b733b279aa637fdb76a2aca909d4d016d94a/e0db97aabc0ddd258f8985bac6a74c166c96de90/b00ad0645b518b14b9c6d261557c70f54b0097e0/f79e60f4bbcb23f8b99c9e41a8a284a30859624d/07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/9f8ab3f3cc57204d88200181ab5913ce59e53c05/2eb9f33f63c41cea7902f7a02969871788245d0e/7e22ccec931e41a8e8b7b753f0e510af22f4806e/,2016-11-29 14:02:39-05:00/2017-02-17 10:34:50-05:00/2017-01-20 17:42:24-05:00/2016-11-08 17:19:45-05:00/2016-12-01 12:00:51-05:00/2016-11-09 09:48:38-05:00/2016-12-15 15:37:04-05:00/2016-12-20 14:30:33-05:00/2016-12-21 22:04:16-05:00/2017-01-26 20:45:29-05:00/2016-11-09 10:59:26-05:00/2016-12-19 19:31:34-05:00/2017-01-15 20:24:11-05:00/2016-11-09 10:59:10-05:00/2017-01-15 20:24:35-05:00/2017-02-17 10:34:31-05:00/2016-12-15 11:37:16-05:00/2016-11-27 22:33:29-05:00/,":construction: first pass at modulation commands

* ditch frame change associated with Pulse in favour of explicit ZPulse type
* only single NCO for now"
Assembly,BBN-Q/QGL.jl,f50ec88049b1eea9ad204e7af16cd2fc15633134,2017-01-17T02:47:53Z,44fe56556362d203c8a5dcf6a592b5356f0a2b9e/,2017-02-23 14:00:37-05:00/,update `channel_json_file` if passed from user prompt
Assembly,BBN-Q/QGL.jl,4c951f58022c9889bf42a3ddc02074a27cf5a4e4,2017-01-17T02:20:51Z,85dee5b80fbd99de8553e571d989a6bacf29f5a1/652b0c529614e8e50152f25572d1abb4d39d45c8/0c45cc6a665bda64897567f80cd4b150b8152aca/44fe56556362d203c8a5dcf6a592b5356f0a2b9e/,2018-04-17 17:03:38-04:00/2017-02-23 20:44:56-05:00/2018-04-17 15:59:13-04:00/2017-02-23 14:00:37-05:00/,drop python QGL dependency from compiler
Assembly,BBN-Q/QGL.jl,c8adc7bdb489e393c282f7ab3fe96fbf918f55ce,2016-12-22T04:50:17Z,f1692d0eb0379a2118b75147dac50e43b9a682c7/f0758c117086495153e21dcb2cb280bc71f17ef8/,2016-12-21 23:57:59-05:00/2016-12-22 16:33:17-05:00/,Merge branch 'feature/tomo-seqs' of github.com:BBN-Q/QGL.jl into feature/tomo-seqs
Assembly,BBN-Q/QGL.jl,d8249bf72d9fe5c55e03aa2c0c84ce0e887cd3e6,2016-11-23T20:16:13Z,0ce0038a452d324643d17b77f9a4d24c2b8d7500/8586ceef81bb7bb6fddd2dcadc93e930946729b8/,2016-12-21 22:04:16-05:00/2016-12-07 17:13:34-05:00/,add SYNC before WAIT
Assembly,BBN-Q/QGL.jl,7807f2a1148d485dcf0a36d06e60f4aae09dda4b,2016-11-02T19:52:40Z,6cf6a5ca52d0c1baea879379b7d1aa11d4a18248/d463952b7d61f51aafe8db35cf9564cf7a48b2cd/8955b3d992be0737744606e2040047372dbc1d48/5c381f9bef7551b01f3593bd6c752f3f93cca84d/d1ce942524e467af8aa1b33e5780ac987a3abf44/ed95befaa3d4095141ec0f2fe473044be6d755dc/4a37f65d2d0e7dbd73aa6917722c4437113a50e3/0ce0038a452d324643d17b77f9a4d24c2b8d7500/64267a8199efef7cee0563f9a8149da37baa5a59/3ecfd03a7763e14939d4e2573ac90f1a17a05a5e/5a2aee7ba95cfe488fcd5ed640701fc6807ce26e/06e88cf94e9897dae7271152459e80f64eaa69b4/9f409c87eb0f0f4555417acd4e86f385319fe87b/3e450fd5ac19788fbf969f95e6bad110947b04fa/,2016-11-02 17:30:48-04:00/2016-11-07 21:37:20-05:00/2016-11-03 11:38:11-04:00/2016-11-23 14:54:43-05:00/2016-11-03 11:26:59-04:00/2016-11-08 17:19:45-05:00/2016-11-09 10:46:07-05:00/2016-12-21 22:04:16-05:00/2017-01-26 20:45:29-05:00/2016-11-27 22:28:48-05:00/2016-11-04 12:18:12-04:00/2016-11-09 11:10:01-05:00/2016-11-08 12:46:15-05:00/2016-11-23 16:29:34-05:00/,refactor compiled sequences as arrays of control flow and pulse blocks
Assembly,BBN-Q/QGL.jl,b6cc494e647620772f27c1dfcc7c4be0612d33b8,2017-04-03T14:33:02Z,a99ab039c415443957833be7ab322d0a572b4fc3/,2017-04-03 10:33:58-04:00/,:bug: AC pulse 10-11 are 180 pulses
Assembly,BBN-Q/QGL.jl,78c96b404b628b1f5d8f8031b5196215bab03a39,2016-11-02T21:30:29Z,8165ca56852c3fc0071ce8c1ac295a45e52c835f/30271b786eaa8372a950d7bcfd4f831b3d9ab826/,2017-02-17 11:49:32-05:00/2017-02-23 11:21:36-05:00/,fill out more controlflow operations
Assembly,BBN-Q/QGL.jl,9b99967c8c9ada761fda4fc31f9c6a84fcf52a62,2016-12-20T19:30:33Z,61e32af95fbadfb5d00e2c986c0432708f4f6815/1f0d87a6e262fab54383ab674ee0c4a0ae9f6083/73ad17f790ef3a1690f112e5ad3530c51d9bda80/0ce0038a452d324643d17b77f9a4d24c2b8d7500/b09eb3d76c53186ed67b9ff1860d07bbedffbbf5/460fa552c66d05afb5ecc919555b82ca2b778be4/2e0a41745f35c1e5e36eaa192d0f591c9339c1fa/,2016-12-20 15:22:46-05:00/2017-02-23 08:51:35-05:00/2017-07-20 13:08:24-04:00/2016-12-21 22:04:16-05:00/2017-07-20 16:59:10-04:00/2016-12-20 23:24:39-05:00/2017-07-20 13:21:13-04:00/,Merge logical channels
Assembly,BBN-Q/QGL.jl,44500dac794546e8e3d6c91726c17ba3f9718e4a,2017-04-03T14:29:26Z,b6cc494e647620772f27c1dfcc7c4be0612d33b8/,2017-04-03 10:33:02-04:00/,Merge branch 'master' into feature/AC-pulses
Assembly,BBN-Q/QGL.jl,daff1c9ced02bb5697701eb11051e5f2fd6833d3,2017-01-06T17:34:13Z,f5c42fb026b30553ba887cb76f58df85f3c354bb/ebfa4fffafc90b62c72a7dada1291d6f669f2466/,2017-01-20 16:50:47-05:00/2017-01-20 17:19:22-05:00/,native basic pulse shape functions
Assembly,BBN-Q/QGL.jl,068054ff42095ee2e1fdcc8b53c765a632117087,2016-11-01T19:03:15Z,d463952b7d61f51aafe8db35cf9564cf7a48b2cd/f87d1aca6fcd8f7c385c34f55d14087102f2fe86/07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/b00ad0645b518b14b9c6d261557c70f54b0097e0/5a2aee7ba95cfe488fcd5ed640701fc6807ce26e/7807f2a1148d485dcf0a36d06e60f4aae09dda4b/,2016-11-07 21:37:20-05:00/2016-11-29 14:02:39-05:00/2017-01-15 20:24:35-05:00/2017-01-15 20:24:11-05:00/2016-11-04 12:18:12-04:00/2016-11-02 15:52:40-04:00/,refactor to module
Assembly,BBN-Q/QGL.jl,8955b3d992be0737744606e2040047372dbc1d48,2016-11-03T15:38:11Z,5a2aee7ba95cfe488fcd5ed640701fc6807ce26e/,2016-11-04 12:18:12-04:00/,:bug: TA pair pulse count
Assembly,BBN-Q/QGL.jl,3ecfd03a7763e14939d4e2573ac90f1a17a05a5e,2016-11-28T03:28:48Z,2f14edd46bdee103fd8793617db6a4972b7ec7db/9f8ab3f3cc57204d88200181ab5913ce59e53c05/,2016-12-09 17:13:46-05:00/2017-02-17 10:34:31-05:00/,add methods for tensoring ZPulses into PulseBlocks
Assembly,BBN-Q/QGL.jl,fc0a13f4c3fd9b67f420f13a2e9de649fe4eaff9,2017-01-20T22:42:24Z,e3c22da0265bae9402e87730a6cd5cb6453f055a/6c7db882b6dca47cee971191d75dc76a7f5d23a9/69b8d3311393c8de0661c77400de34a391020e57/7b6ce70149cf35b56ece3d69ec11355e7ed2b130/6b1f70f8c4b9d0a5c6ff6e10221f312310ff81c9/,2017-01-24 10:35:23-05:00/2017-02-13 16:48:32-05:00/2017-01-23 21:03:15-05:00/2017-01-22 23:52:38-05:00/2017-01-23 21:09:36-05:00/,"AC pulses

--DR"
Assembly,BBN-Q/QGL.jl,ce578b6e87defc4b6f001f40bbfca79009973838,2016-11-29T22:14:02Z,da2ffd33f6987a5e83c1589dd4f4c24bf47b63bf/07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/3ad0821304ca5a06496e84d43ab35d8fec87936f/,2016-12-14 10:41:36-05:00/2017-01-15 20:24:35-05:00/2016-11-29 18:22:15-05:00/,"Optional pulse shape

Using the shapes from pyQGL, at least for now"
Assembly,BBN-Q/QGL.jl,7fa54db9aaabde2a8e8cdcf22a35be53225423d4,2017-01-19T02:42:46Z,44fe56556362d203c8a5dcf6a592b5356f0a2b9e/e02e2dfe6afab902f5fb74e79d05fe0f0638ef2f/208c37e7f2a18be5b6686a4224e24c39905f1b17/b908201066b1df2603f8b412bb2324d23ed8c9c1/a454b1400ca05a0e51a7c865a3ad491d9f0eccd4/,2017-02-23 14:00:37-05:00/2018-04-18 11:47:11-04:00/2018-04-18 11:01:53-04:00/2018-04-18 11:52:11-04:00/2017-01-19 20:15:22-05:00/,backup original then create new cfg file pointing to test ChannelParams.json
Assembly,BBN-Q/QGL.jl,0831a4803c5ef5b74e61d5c21e590abb96779b05,2016-11-29T22:22:39Z,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/,2017-01-15 20:24:35-05:00/,shapeFun is now a Pulse parameter
Assembly,BBN-Q/QGL.jl,b4d1a1d9fe877f182aed599fe02a5cbafa3f9716,2016-12-22T16:37:25Z,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/,2017-01-15 20:24:35-05:00/,Optional pi_shift in flat_top_gaussian
Assembly,BBN-Q/QGL.jl,9f409c87eb0f0f4555417acd4e86f385319fe87b,2016-11-08T17:46:15Z,ed95befaa3d4095141ec0f2fe473044be6d755dc/,2016-11-08 17:19:45-05:00/,:bug: fix instruction ordering
Assembly,BBN-Q/QGL.jl,c386880d12a88bff5969977dab7049c00d965053,2017-02-07T21:19:20Z,9ec290a7e3b1f68c2f6ab5f289e3cdcb4738026e/,2017-03-29 13:27:35-04:00/,GST sequence helpers.  -MW
Assembly,BBN-Q/QGL.jl,a967091d95ca6791353ef6ab01bf8d638e56a9dc,2016-12-22T16:21:31Z,07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/,2017-01-15 20:24:35-05:00/,"Amp. and phase are applied later in translators

Prevent amp. rescaling from being applied twice
--CAR and DR"
Assembly,BBN-Q/QGL.jl,2c2f2b57d6fe83b446466726824143f524605e9a,2016-12-21T16:56:33Z,d435743992d05d1727be281142adf1bf6762ef17/,2016-12-21 22:36:55-05:00/,"Export create_cal_seqs

--DR"
Assembly,BBN-Q/QGL.jl,01b8b733b279aa637fdb76a2aca909d4d016d94a,2016-11-09T15:59:26Z,c84a0e75193fe895abf64fc293f5ab4b43237a06/85dee5b80fbd99de8553e571d989a6bacf29f5a1/07bb92ca709df37e2b1e9a4754f7fc72dc97bc69/b00ad0645b518b14b9c6d261557c70f54b0097e0/9f8ab3f3cc57204d88200181ab5913ce59e53c05/,2016-11-20 18:58:30-05:00/2018-04-17 17:03:38-04:00/2017-01-15 20:24:35-05:00/2017-01-15 20:24:11-05:00/2017-02-17 10:34:31-05:00/,get measurements working
Assembly,BBN-Q/QGL.jl,2f14edd46bdee103fd8793617db6a4972b7ec7db,2016-12-09T22:13:46Z,9f8ab3f3cc57204d88200181ab5913ce59e53c05/,2017-02-17 10:34:31-05:00/,better PulseBlock constructors for iterables of channels
Assembly,BBN-Q/QGL.jl,988698abb573d56e9afaea1aa08e3bdfda39de92,2018-04-18T21:25:44Z,ef4fd204be00306d61bffb014f3565fb06101961/70e66d76f2e5f518ff2d8b78bc93b65779182c9f/201c3d8bc7183f3d01e376e7c8174625df6f6964/,2018-04-18 17:30:05-04:00/2018-04-27 09:47:20-04:00/2018-04-18 17:36:30-04:00/,Try simple fix for test config
Assembly,BBN-Q/QGL.jl,1f0d87a6e262fab54383ab674ee0c4a0ae9f6083,2017-02-23T13:51:35Z,1cadc30ddac25bf7ad7035eafb85529d3b1eb593/,2017-02-23 09:15:54-05:00/,:bug: fix APS2 instruction ordering for sequences that start with a ZPulse
Assembly,BBN-Q/QGL.jl,6b1f70f8c4b9d0a5c6ff6e10221f312310ff81c9,2017-01-24T02:09:36Z,0f29a4e0afa822f037e5b86888aefccdeab40adf/6b29dd37771b2a30edd048488383f3b18637b000/,2017-01-24 10:20:30-05:00/2017-01-24 08:58:12-05:00/,azimuthal angle is not used in pulse shape but in Pulse phase
Assembly,BBN-Q/QGL.jl,bd8efb8fa81a2d9f21b710268d90ce2e78a9ccae,2016-10-25T01:20:59Z,4bd9e231e27f8087efaf4950cab30e6f6ad9a4ab/4c951f58022c9889bf42a3ddc02074a27cf5a4e4/,2016-10-31 14:32:44-04:00/2017-01-16 21:20:51-05:00/,"initial attempt at a Julia `compile_to_hardware`

stymied by translating Python named tuples back and forth"
